"undefined"===typeof Array.isArray&&(Array.isArray=function(a){return"[object Array]"===Object.toString.call(a)});String.prototype.format=function(){for(var a=this,b=0;b<arguments.length;b++){var c="{"+b.toString()+"}";if(0>a.indexOf(c))throw Error(StrLoc("Index {0} was not defined in string: {1}").format(b,a));a=a.replace(c,arguments[b])}return a};Number.prototype.clamp=function(a,b){return Math.min(Math.max(this,a),b)};
$.fn.textWidth=function(a,b){$.fn.textWidth.fakeEl||($.fn.textWidth.fakeEl=$("<span>").appendTo(document.body));var c=a||this.val()||this.text(),c=$.fn.textWidth.fakeEl.text(c).html(),c=c.replace(/\s/g,"&nbsp;");$.fn.textWidth.fakeEl.html(c).css("font",b||this.css("font"));return $.fn.textWidth.fakeEl.width()};var loader=new Loader;declare=function(a,b){loader.declare(a,b)};include=function(a,b){return loader.include(a,b)};
function Loader(a){this.instances={};this.declarations={};this.refCount={};this.includeThreshold=1E3;this.includeCounter=[];this.include=function(a,c){if(void 0!==this.includeCounter){this.includeCounter.push(c+" -> "+a);this.includeCounter.length>this.includeThreshold&&this.includeCounter.shift();if(void 0===a||"function"==typeof a)throw"Invalid arguments for include!";if(void 0===this.instances[a]){if(void 0===this.declarations[a])throw"No declaration for include "+a;this.instances[a]="$"===a?this.declarations[a](this.include):
new this.declarations[a](this.include)}void 0===this.refCount[a]&&(this.refCount[a]=0);this.refCount[a]++;return this.instances[a]}};this.declare=function(a,c){if(void 0!==this.declarations[a])throw a+" was already declared!";this.declarations[a]=c};this.diagnostics=function(){var a="",c;for(c in this.declarations)a+=" "+c;console.log("Declarations: "+a);for(c in this.instances);console.log("Instances: "+this.instances)}}
Endless={isDebug:!1,isVerboseDebug:!1,componentUpdateList:[],componentUpdateCount:0,componentInitCount:0,currentUpdateTick:0,resetFrame:function(){Endless.componentUpdateList=[];Endless.componentUpdateCount=0}};
Number.prototype.formatMoney=function(a,b,c){var d=this;a=isNaN(a=Math.abs(a))?2:a;b=void 0==b?".":b;c=void 0==c?",":c;s=0>d?"-":"";i=parseInt(d=Math.abs(+d||0).toFixed(a))+"";j=3<(j=i.length)?j%3:0;return s+(j?i.substr(0,j)+c:"")+i.substr(j).replace(/(\d{3})(?=\d)/g,"$1"+c)+(a?b+Math.abs(d-i).toFixed(a).slice(2):"")};var StrLoc=function(a){return a};"undefined"!==typeof window?declare("$",jQuery):console.log("Running in non-browser mode, exiting...");
declare("Assert",function(){return new function(){this.assertCount=0;this.isDefined=function(a,b){!1!==Endless.isDebug&&void 0===a&&(this.assertCount++,console.assert(!1,b))};this.isUndefined=function(a,b){!1!==Endless.isDebug&&void 0!==a&&(this.assertCount++,console.assert(!1,b))};this.isNotNaN=function(a,b){!1!==Endless.isDebug&&isNaN(a)&&(this.assertCount++,console.assert(!1,b))};this.isNaN=function(a,b){!1===Endless.isDebug||isNaN(a)||(this.assertCount++,console.assert(!1,b))};this.isTrue=function(a,
b){!1!==Endless.isDebug&&!1===a&&(this.assertCount++,console.assert(!1,b))};this.isFalse=function(a,b){!1!==Endless.isDebug&&!0===a&&(this.assertCount++,console.assert(!1,b))};this.isNumber=function(a,b){$.isNumeric(a)||(this.assertCount++,console.assert(!1,b))};this.hasAsserted=function(){return 0<this.assertCount}}});manualFailAssert=function(){include("Assert","assert").assertCount=1};
declare("Base64",function(){function a(){this.buffer=[]}function b(a){this._input=a;this._index=-1;this._buffer=[]}function c(a){this._input=a;this._index=-1;this._buffer=[]}a.prototype.append=function(a){this.buffer.push(a);return this};a.prototype.toString=function(){return this.buffer.join("")};b.prototype={current:Number.NaN,moveNext:function(){if(0<this._buffer.length)return this.current=this._buffer.shift(),!0;if(this._index>=this._input.length-1)return this.current=Number.NaN,!1;var a=this._input.charCodeAt(++this._index);
13==a&&10==this._input.charCodeAt(this._index+1)&&(a=10,this._index+=2);128>a?this.current=a:(127<a&&2048>a?this.current=a>>6|192:(this.current=a>>12|224,this._buffer.push(a>>6&63|128)),this._buffer.push(a&63|128));return!0}};c.prototype={current:64,moveNext:function(){if(0<this._buffer.length)return this.current=this._buffer.shift(),!0;if(this._index>=this._input.length-1)return this.current=64,!1;var a=Base64.codex.indexOf(this._input.charAt(++this._index)),b=Base64.codex.indexOf(this._input.charAt(++this._index)),
c=Base64.codex.indexOf(this._input.charAt(++this._index)),k=Base64.codex.indexOf(this._input.charAt(++this._index)),h=(c&3)<<6|k;this.current=a<<2|b>>4;64!=c&&this._buffer.push((b&15)<<4|c>>2);64!=k&&this._buffer.push(h);return!0}};return{codex:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",encode:function(c){var e=new a;for(c=new b(c);c.moveNext();){var f=c.current;c.moveNext();var k=c.current;c.moveNext();var h=c.current,g=f>>2,f=(f&3)<<4|k>>4,l=(k&15)<<2|h>>6,m=h&63;isNaN(k)?
l=m=64:isNaN(h)&&(m=64);e.append(this.codex.charAt(g)+this.codex.charAt(f)+this.codex.charAt(l)+this.codex.charAt(m))}return e.toString()},decode:function(b){var e=new a;for(b=new c(b);b.moveNext();){var f=b.current;if(128>f)e.append(String.fromCharCode(f));else if(191<f&&224>f){b.moveNext();var k=b.current;e.append(String.fromCharCode((f&31)<<6|k&63))}else b.moveNext(),k=b.current,b.moveNext(),e.append(String.fromCharCode((f&15)<<12|(k&63)<<6|b.current&63))}return e.toString()}}});
declare("Component",function(){function a(){this.initDone=!1;this.updateTime=void 0;this.updateInterval=0;this.invalidated=this.enabled=!0;this.updateWhenNeededOnly=!1}var b=include("Assert","component");!0===Endless.isDebug&&(idCheck={});a.prototype.init=function(){b.isDefined(this.id,"Component needs valid Id");!0===Endless.isDebug&&(b.isUndefined(idCheck[this.id],"Duplicate ID: {0}".format(this.id)),idCheck[this.id]=!0);Endless.componentInitCount++;this.initDone=!0};a.prototype.update=function(a){b.isTrue(this.initDone,
"Init must be called before update on {0}".format(this.id));if(!1===this.enabled||!1===this.invalidated&&!0===this.updateWhenNeededOnly||!1===this.invalidated&&0<this.updateInterval&&a.getElapsed()<this.updateInterval)return!1;Endless.componentUpdateList.push(this.id);Endless.componentUpdateCount++;this.updateTime=a.getTime();this.invalidated=!1;return!0};a.prototype.remove=function(){Endless.isDebug&&delete idCheck[this.id]};a.prototype.invalidate=function(){this.invalidated=!0};var c=function(){};
c.prototype=a.prototype;return{prototype:function(){return new c},construct:function(b){a.call(b)}}});
declare("CoreSave",function(a){function b(a,b){this.host=a;this.name=b;this.type=f.EnumDataTypeString;this.defaultValue=void 0;this.resetCallback=this.loadCallback=this.saveCallback=this.isPersistent=!1}function c(){this.mappings=[];this.stateName="undefined";this.stateSlot=1}var d=include("Log","coreSave"),e=include("Assert","coreSave"),f=include("Type","coreSave"),k=include("Lzw","coreSave");b.prototype.asNumber=function(a){this.type=f.EnumDataTypeNumber;if(void 0!==a)return this.withDefault(a);
this._updateDefaultByType();return this};b.prototype.asFloat=function(a){this.type=f.EnumDataTypeFloat;if(void 0!==a)return this.withDefault(a);this._updateDefaultByType();return this};b.prototype.asBool=function(a){this.type=f.EnumDataTypeBool;if(void 0!==a)return this.withDefault(a);this._updateDefaultByType();return this};b.prototype.asJson=function(a){this.type=f.EnumDataTypeJson;if(void 0!==a)return this.withDefault(a);this._updateDefaultByType();return this};b.prototype.asJsonArray=function(a){this.type=
f.EnumDataTypeJsonArray;if(void 0!==a)return this.withDefault(a);this._updateDefaultByType();return this};b.prototype.withDefault=function(a){e.isDefined(a);var b=f.getReadValueByType(a,this.type);e.isDefined(b,"Default value {0} did not match the selected mapping type {1}".format(a,this.type));this.defaultValue=f.getReadValueByType(a,this.type);this.host[this.name]=a;return this};b.prototype.persistent=function(a){if(void 0!==a&&!0!==a&&!1!==a)throw Error(StrLoc("Invalid argument for persistent: {0}").format(a));
this.isPersistent=a||!0;return this};b.prototype.withCallback=function(a,b,c){this.saveCallback=a;this.loadCallback=b;this.resetCallback=c};b.prototype.getKey=function(){return this.host.id+"_"+this.name};b.prototype.getValue=function(){return this.host[this.name]};b.prototype.setValue=function(a){e.isDefined(a);var b=f.getReadValueByType(a,this.type);e.isDefined(b,"Value {0} did not match the selected mapping type {1}".format(a,this.type));this.host[this.name]=b};b.prototype.resetToDefault=function(a){!0!==
a&&this.isPersistent||(this.host[this.name]=this.defaultValue)};b.prototype.callbackSave=function(){if(!1!==this.saveCallback)if(void 0===this.host.onSave)d.error(StrLoc("Host declared callback but did not define onSave: {0}").format(this.host.id));else this.host.onSave()};b.prototype.callbackLoad=function(){if(!1!==this.loadCallback)if(void 0===this.host.onLoad)d.error(StrLoc("Host declared callback but did not define onLoad: {0}").format(this.host.id));else this.host.onLoad()};b.prototype.callbackReset=
function(){if(!1!==this.resetCallback)if(void 0===this.host.onReset)d.error(StrLoc("Host declared callback but did not define onReset: {0}").format(this.host.id));else this.host.onReset()};b.prototype._updateDefaultByType=function(){this.defaultValue=f.getDefaultValueByType(this.type);this.host[this.name]=this.defaultValue};c.prototype.save=function(){for(var a={},b=0;b<this.mappings.length;b++){var c=this.mappings[b],e=c.getKey(),h=void 0;try{h=f.getWriteValueByType(c.getValue(),c.type)}catch(u){throw d.error(StrLoc("Could not get write value for {0}").format(e)),
u;}a[e]=h;c.callbackSave()}a=k.compress(encodeURIComponent(JSON.stringify(a)));!0!==this.doSave(a)&&d.error(StrLoc("Saving failed!"))};c.prototype.load=function(){var a={},b=this.doLoad();void 0!==b&&(d.debug(StrLoc("Loaded {0} bytes").format(b.length)),a=JSON.parse(decodeURIComponent(k.decompress(b))));for(b=0;b<this.mappings.length;b++){var c=this.mappings[b],e=c.getKey();void 0!==a[e]&&(e=f.getReadValueByType(a[e],c.type),c.setValue(e),c.callbackLoad())}d.debug(StrLoc("Loaded {0} bytes").format(this.doGetSize()))};
c.prototype.reset=function(a){for(var b=0;b<this.mappings.length;b++){var c=this.mappings[b];c.resetToDefault(a);c.callbackReset()}d.debug(StrLoc("Reset done, full={0}").format(a))};c.prototype.doLoad=function(){d.error("doLoad not implemented!")};c.prototype.doSave=function(a){d.error("doSave not implemented!");return!1};c.prototype.doGetSize=function(){d.error("doGetSize not implemented!");return 0};c.prototype.getStorageKey=function(){return this.stateName+"_"+this.stateSlot.toString()};c.prototype.register=
function(a,c){e.isDefined(a);e.isDefined(a.id,"Host needs to have an id for saving state");e.isDefined(c);a[c]=void 0;var d=new b(a,c);this.mappings.push(d);return d};var h=function(){};h.prototype=c.prototype;return{prototype:function(){return new h},construct:function(a){c.call(a)}}});
declare("CoreUtils",function(){var a=include("Assert","coreUtils"),b=Function("return this")()||(0,eval)("this");return new function(){this.rgba=function(a,b,e,f){return["rgba(",~~a||0,",",~~b||0,",",~~e||0,",",f||1,")"].join("")};this.pad=function(a,b,e){a+="";return a.length>=b?a:Array(b-a.length+1).join(e||"0")+a};this.getRandom=function(a,b){return Math.random()*(b-a)+a};this.getRandomInt=function(a,b){return~~(Math.random()*(b-a+1))+a};this.getSigma=function(a){return a*(a+1)/2};this.getGlobal=
function(){return b};this.isJsonString=function(a){try{JSON.parse(a)}catch(b){return!1}return!0};this.enumIsDefined=function(a,b){for(var e in a)if(a[e]===b)return!0;return!1};this.mergeObjects=function(a,b){var e={};if(void 0!==a)for(var f in a)e[f]=a[f];if(void 0!==b)for(f in b)e[f]=b[f];return e};this.getStackTrace=function(){return Error().stack};this.capitalizeString=function(a){return a.charAt(0).toUpperCase()+a.slice(1)};this.pickRandomProperty=function(a){var b=Object.keys(a);return a[b[b.length*
Math.random()<<0]]};this.getImageUrl=function(a){return'url("'+a+'")'};this.setBackgroundImage=function(b,d,e){a.isTrue(0<b.length,"Target for background image was null!");void 0===e?b.css({"background-image":this.getImageUrl(d),"background-size":"100% 100%","background-repeat":"no-repeat"}):b.css({"background-image":this.getImageUrl(d),"background-repeat":e})};this.splitDateTime=function(a){var b=[0,0,0,0,0,0];a=Math.floor(a);b[0]=Math.floor(a/31536E6);a%=31536E6;b[1]=Math.floor(a/864E5);a%=864E5;
b[2]=Math.floor(a/36E5);a%=36E5;b[3]=Math.floor(a/6E4);a%=6E4;b[4]=Math.floor(a/1E3);b[5]=a;return b};this.getDurationDisplay=function(a){if(0===a||a===Number.POSITIVE_INFINITY)return"~~";var b=this.splitDateTime(a);years=0<b[0]?b[0]+"y ":"";days=0<b[1]?b[1]+"d ":"";time=this.getTimeDisplay(a);return years+days+time};this.getTimeDisplay=function(a,b){if(0===a||a===Number.POSITIVE_INFINITY)return"~~";var e=this.splitDateTime(a),f="";!1===b&&(12<e[2]?(e[2]-=12,f=" pm"):f=" am");var k=this.pad(e[2],
2)+":",h=this.pad(e[3],2)+":",e=this.pad(e[4],2);return k+h+e+f};this.processInterval=function(b,d,e,f,k,h){a.isDefined(k);if(0===d)return b.current;e=Math.floor(Math.abs(b.current-(d+e))/e);if(0<e){for(d=0;d<e;d++)k(f,h);return b.current}return d};this.formatEveryThirdPower=function(a){return function(b){var e=0,f="";if(1E6<=b&&Number.isFinite(b)){for(b/=1E3;1E3<=Math.round(b);)b/=1E3,e++;if(e>a.length)return"Infinity";f=a[e]}return(Math.round(1E3*b)/1E3).toLocaleString()+f}};this.formatScientificNotation=
function(a){if(0===a||!Number.isFinite(a)||1<Math.abs(a)&&100>Math.abs(a))return this.formatRaw(a);var b=0<a?"":"-";a=Math.abs(a);var e=~~(Math.log(a)/Math.LN10);a=Math.round(a/Math.pow(10,e)*100)/100;var f=a.toString();a===Math.round(a)?f+=".00":10*a===Math.round(10*a)&&(f+="0");return b+f+"*10^"+e};this.formatRounded=function(a){return(Math.round(1E3*a)/1E3).toString()};this.formatRaw=function(a){return void 0===a||null===a?"":a.toString()};this.formatters={raw:this.formatRaw,rounded:this.formatRaw,
name:this.formatEveryThirdPower([""," million",StrLoc(" billion"),StrLoc(" trillion"),StrLoc(" quadrillion")," quintillion",StrLoc(" sextillion"),StrLoc(" septillion"),StrLoc(" octillion")," nonillion",StrLoc(" decillion")]),shortName:this.formatEveryThirdPower([""," M",StrLoc(" B"),StrLoc(" T"),StrLoc(" Qa"),StrLoc(" Qi"),StrLoc(" Sx"),StrLoc(" Sp"),StrLoc(" Oc"),StrLoc(" No"),StrLoc(" De")]),shortName2:this.formatEveryThirdPower([""," M",StrLoc(" G"),StrLoc(" T"),StrLoc(" P"),StrLoc(" E"),StrLoc(" Z"),
StrLoc(" Y")]),scientific:this.formatScientificNotation}}});
declare("EventAggregate",function(){function a(){this.registry={}}var b=include("Log","eventAggregate");a.prototype.subscribe=function(a,b){void 0===this.registry[a]&&(this.registry[a]=[]);this.registry[a].push(b)};a.prototype.unsubscribe=function(a,d){if(void 0===this.registry[a])b.error("Unsubscribe failed, event not registered");else for(var e=0;e<this.registry[a].length;e++)if(this.registry[a][e]===d){this.registry[a].splice(e,1);break}};a.prototype.publish=function(a,b){if(void 0!==this.registry[a])for(var e=
0;e<this.registry[a].length;e++)this.registry[a][e](b)};return new a});
declare("GameTime",function(){function a(){this.elapsed=this.currentLocale=this.current=this.start=void 0}var b=include("Assert","gameTime"),c=6E4*(new Date).getTimezoneOffset();a.prototype.update=function(){this.current=Date.now();this.currentLocale=this.current-c;this.elapsed=this.current-this.start;b.isTrue(this.current>=this.start,"GameTime may not be initialized properly!")};a.prototype.reset=function(){this.start=Date.now();this.update()};a.prototype.getTime=function(a){return!0===a?this.currentLocale:
this.current};a.prototype.getElapsed=function(){return this.elapsed};a.prototype.getElapsedSinceUpdate=function(){return Date.now()-this.current};a.prototype.getStartTime=function(){return this.start};return{getCurrentLocalTime:function(){return Date.now()-c},create:function(){var b=new a;b.reset();return b}}});
declare("Log",function(){var a=include("CoreUtils","log"),b={debug:1,info:2,error:3,warning:4},c=function(a){switch(a){case b.info:return"INFO";case b.error:return"ERROR";case b.warning:return"WARNING";case b.debug:return"DEBUG"}throw Error(StrLoc("Unknown Error Level: {0}").format(a));},d=function(b,d,k){b="["+a.getTimeDisplay(b||Date.now())+"]: "+c(d)+" "+k;switch(d){case d.error:throw Error(b);default:console.log(b)}};return new function(){this.startTime=Date.now();this.lastLogTime=Date.now();
this.level=b;this.log=function(a,b){d(Date.now()-this.startTime,b,a)};this.info=function(a,c){d(Date.now()-this.startTime,b.info,a)};this.error=function(a){d(Date.now()-this.startTime,b.error,a)};this.warning=function(a){d(Date.now()-this.startTime,b.warning,a)};this.debug=function(a){!1!==Endless.isDebug&&d(Date.now()-this.startTime,b.debug,a)}}});
declare("Lzw",function(){return new function(){var a={},b=a.referenceIntBase||96,c=32+b-1,d=Math.pow(b,2)-1,e=a.minStringLength||5,f=Math.pow(b,1)-1+e,k=a.defaultWindowLength||144,h=d+e,g=function(a,c){if(0<=a&&a<Math.pow(b,c)-1){for(var d="";0<a;)d=String.fromCharCode(a%b+32)+d,a=Math.floor(a/b);for(var e=c-d.length,f=0;f<e;f++)d=String.fromCharCode(32)+d;return d}throw"Reference int out of range: "+a+" (width = "+c+")";},l=function(a,d){for(var e=0,f=0;f<d;f++){var e=e*b,g=a.charCodeAt(f);if(32<=
g&&g<=c)e+=g-32;else throw"Invalid char code in reference int: "+g;}return e};this.compress=function(a,b){b=b||k;if(b>h)throw"Window length too large";for(var c="",l=0,v=a.length-e;l<v;){for(var q=Math.max(l-b,0),n=e,w=!1,y=d,t=0,x=null;q+n<l;)a.substr(q,n)==a.substr(l,n)&&n<f?(n++,w=!0):(--n,w&&n>t&&(y=l-q-n,t=n),n=e,q++,w=!1);t?(x="`"+g(y,2)+g(t-e,1),l+=t):(x="`"!=a.charAt(l)?a.charAt(l):"``",l++);c+=x}return c+a.slice(l).replace(/`/g,"``")};this.decompress=function(a){for(var b="",c=0;c<a.length;){var d=
a.charAt(c);if("`"!=d)b+=d,c++;else if("`"!=a.charAt(c+1)){var d=l(a.substr(c+1,2),2),f;f=a.charAt(c+3);f=l(f,1)+e;b+=b.substr(b.length-d-f,f);c+=e-1}else b+="`",c+=2}return b}}});
declare("MathExtension",function(){function a(a,b){this.x=a;this.y=b;this.isValid=function(){return void 0!==this.x&&void 0!==this.y}}function b(b,c,d,h){this.position=new a(b,c);this.size=new a(d,h);this.isValid=function(){return this.position.isValid()&&this.size.isValid()}}var c=include("Log","mathExtension"),d=include("Assert","mathExtension");return new function(){this.maxInteger=1E15;this.minInteger=-this.maxInteger;this.maxNumber=Number.MAX_VALUE;this.minNumber=Number.MIN_VALUE;this.point=
function(b,c){return new a(b,c)};this.rect=function(a,c,d,h){return new b(a,c,d,h)};this.safeAdd=function(a,b,k,h){d.isDefined(b);d.isDefined(a);d.isTrue(!1===isNaN(b),"Value to add can't be NaN");d.isTrue(0<b,"Value to add needs to be positive, use safeRemove otherwise");a+=b;if(!0===k&&a>this.maxInteger)return c.warning(StrLoc("SafeAdd: Lost value in add, number exceeded max!")),this.maxInteger;void 0===h&&(h=2);return this.roundDecimals(a,h)};this.safeRemove=function(a,b,k,h){d.isDefined(b);d.isDefined(a);
d.isTrue(!1===isNaN(b),"Value to remove can't be NaN");d.isTrue(0>b,"Value to remove needs to be negative, use safeAdd otherwise");a-=b;if(!0===k&&a<this.minInteger)return c.warning(StrLoc("SafeRemove: Lost value in remove, number exceeded min!")),this.minInteger;void 0===h&&(h=2);return this.roundDecimals(a,h)};this.roundDecimals=function(a,b){var c=Math.pow(10,b);return Math.round(a*c)/c}}});
declare("Type",function(){include("$");var a=include("Log","type"),b=include("Assert","type"),c={}.constructor;return new function(){this.EnumDataTypeString=1;this.EnumDataTypeNumber=2;this.EnumDataTypeFloat=3;this.EnumDataTypeBool=4;this.EnumDataTypeJson=5;this.EnumDataTypeJsonArray=6;this.determineDataType=function(a){var b=typeof a;if("string"===b)return this.EnumDataTypeString;if("boolean"===b)return this.EnumDataTypeBool;if($.isNumeric(a))return 0===a%1?this.EnumDataTypeNumber:this.EnumDataTypeFloat;
if(a.constructor===c)return this.EnumDataTypeJson;if(Array.isArray(a))return this.EnumDataTypeJsonArray};this.isValueOfType=function(a,b){var c=this.determineDataType(a);return b===this.EnumDataTypeFloat&&c===this.EnumDataTypeNumber?!0:c===b};this.getDefaultValueByType=function(a){switch(a){case this.EnumDataTypeString:break;case this.EnumDataTypeNumber:return 0;case this.EnumDataTypeFloat:return 0;case this.EnumDataTypeBool:return!1;case this.EnumDataTypeJson:return{};case this.EnumDataTypeJsonArray:return[];
default:throw Error(StrLoc("getDefaultValueByType not implemented for {0}").format(a));}};this.getReadValueByType=function(c,e){if(!0===this.isValueOfType(c,e))return c;var f=void 0;switch(e){case this.EnumDataTypeString:f=c.toString();break;case this.EnumDataTypeNumber:f=parseInt(c,10);break;case this.EnumDataTypeFloat:f=parseFloat(c);break;case this.EnumDataTypeBool:f="1"===c;break;case this.EnumDataTypeJson:try{f=JSON.parse(c)}catch(k){a.error(StrLoc("Failed to load JSON value: {0}\n{1}").format(c,
k)),c=void 0}break;case this.EnumDataTypeJsonArray:try{f=JSON.parse(c)}catch(h){a.error(StrLoc("Failed to load JSON Array value: {0}\n{1}").format(c,h)),f=void 0}break;default:throw Error(StrLoc("getReadValueByType not implemented for {0}").format(e));}if(Endless.isDebug){var g=this.determineDataType(f);e===this.EnumDataTypeFloat&&g===this.EnumDataTypeNumber||b.isTrue(g===e,"Read {0} as {1}, determined type {2} as {3}".format(c,f,e,g))}return f};this.getWriteValueByType=function(a,b){if(!0!==this.isValueOfType(a,
b))throw Error(StrLoc("getWriteValueByType arguments mismatch: '{0}' as '{1}'").format(a,b));switch(b){case this.EnumDataTypeString:return a;case this.EnumDataTypeNumber:return a.toString();case this.EnumDataTypeFloat:return a.toString();case this.EnumDataTypeBool:return!0===a?"1":"0";case this.EnumDataTypeJson:return JSON.stringify(a);case this.EnumDataTypeJsonArray:return JSON.stringify(a);default:throw Error(StrLoc("getWriteValueByType not implemented for {0}").format(b));}}}});
declare("TemplateContent",function(){return{emptyElement:'<div id="{{id}}"></div>'}});
declare("Debug",function(){function a(){d.construct(this);this.id="Debug";this.currentTime=c.getCurrentLocalTime();this.entries={}}var b=include("Log","debug"),c=include("GameTime","debug"),d=include("Component","debug"),e=include("Settings","debug");include("StaticData","debug");include("EventAggregate","debug");a.prototype=d.prototype();a.prototype.$super=parent;a.prototype.constructor=a;a.prototype.componentInit=a.prototype.init;a.prototype.init=function(a){this.componentInit()};a.prototype.componentUpdate=
a.prototype.update;a.prototype.update=function(a){if(!0!==this.componentUpdate(a))return!1;this.currentTime=a.currentLocale;return!0};a.prototype.clear=function(a){this.entries[a]=[]};a.prototype.logDebug=function(a,c){this.log(b.level.debug,a,c)};a.prototype.logInfo=function(a,c){this.log(b.level.info,a,c)};a.prototype.logError=function(a,c){this.log(b.level.error,a,c)};a.prototype.logWarning=function(a,c){this.log(b.level.warning,a,c)};a.prototype.log=function(a,b,c){};a.prototype.popMessages=function(a){var b=
this.entries[a];this.clear(a);return b};a.prototype.isActiveContext=function(a){void 0===a&&(a="none");return!0===e.getLogContextEnabled(a)};return new a});
function FrozenBattleData(){this.disabled=!1;this.updateInterval=1E3;this.logLimit=100;this.enchantingEnabled=!0;this.enchantingBaseChance=.5;this.enchantingBaseMultiplier=.3;this.autoSellActive=!1;this.autoSellThreshold=2;this.autoCombatActive=!1;this.autoCombatKeepLevelDifference=!0;this.autoCombatLastAttackTime=0;this.autoCombatMaxLevelDifference=5;this.autoCombatLevel=1;this.statIncreaseAgi=this.statIncreaseStamina=this.statIncreaseStrength=0;this.detailedLogging=this.formatHealthBarNumbers=this.improvedSalePriceEnabled=
!0;this.numberFormatter=1;this.levelsReset=0;this.applyLevelResetBonus=!0;this.statsBought=0;this.log=[];this.stats={};this.save=function(){if("undefined"!=typeof Storage){localStorage.fb_disabled=this.disabled;localStorage.fb_updateInterval=this.updateInterval;localStorage.fb_logLimit=this.logLimit;localStorage.fb_enchantingEnabled=this.enchantingEnabled;localStorage.fb_enchantingBaseChance=this.enchantingBaseChance;localStorage.fb_enchantingBaseMultiplier=this.enchantingBaseMultiplier;localStorage.fb_autoSellActive=
this.autoSellActive;localStorage.fb_autoSellThreshold=this.autoSellThreshold;localStorage.fb_autoCombatActive=this.autoCombatActive;localStorage.fb_autoCombatKeepLevelDifference=this.autoCombatKeepLevelDifference;localStorage.fb_autoCombatLastAttackTime=this.autoCombatLastAttackTime;localStorage.fb_autoCombatMaxLevelDifference=this.autoCombatMaxLevelDifference;localStorage.fb_autoCombatLevel=this.autoCombatLevel;localStorage.fb_statIncreaseStrength=this.statIncreaseStrength;localStorage.fb_statIncreaseStamina=
this.statIncreaseStamina;localStorage.fb_statIncreaseAgi=this.statIncreaseAgi;localStorage.fb_improvedSalePriceEnable=this.improvedSalePriceEnabled;localStorage.fb_detailedLogging=this.detailedLogging;localStorage.fb_numberFormatter=this.numberFormatter;localStorage.fb_formatHealthBarNumbers=this.formatHealthBarNumbers;localStorage.fb_levelsReset=this.levelsReset;localStorage.fb_applyLevelResetBonus=this.applyLevelResetBonus;localStorage.fb_statsBought=this.statsBought;var a=Object.keys(this.stats);
localStorage.fb_statCount=a.length;for(var b=0;b<a.length;b++)localStorage["fb_stat_name_"+b]=a[b],localStorage["fb_stat_value_"+b]=this.stats[a[b]]}};this.load=function(){if("undefined"!=typeof Storage){this.disabled=frozenUtils.loadBool("fb_disabled",!1);this.updateInterval=frozenUtils.loadInt("fb_updateInterval",1E3);this.logLimit=frozenUtils.loadInt("fb_logLimit",100);this.enchantingEnabled=frozenUtils.loadBool("fb_enchantingEnabled",!0);this.enchantingBaseChance=frozenUtils.loadFloat("fb_enchantingBaseChance",
.5);this.enchantingBaseMultiplier=frozenUtils.loadFloat("fb_enchantingBaseMultiplier",.3);this.autoSellActive=frozenUtils.loadBool("fb_autoSellActive",!1);this.autoSellThreshold=frozenUtils.loadInt("fb_autoSellThreshold",2);this.autoCombatActive=frozenUtils.loadBool("fb_autoCombatActive",!1);this.autoCombatKeepLevelDifference=frozenUtils.loadBool("fb_autoCombatKeepLevelDifference",!0);this.autoCombatLastAttackTime=frozenUtils.loadInt("fb_autoCombatLastAttackTime",0);this.autoCombatMaxLevelDifference=
frozenUtils.loadInt("fb_autoCombatMaxLevelDifference",5);this.autoCombatLevel=frozenUtils.loadInt("fb_autoCombatLevel",1);this.statIncreaseStrength=frozenUtils.loadInt("fb_statIncreaseStrength",0);this.statIncreaseStamina=frozenUtils.loadInt("fb_statIncreaseStamina",0);this.statIncreaseAgi=frozenUtils.loadInt("fb_statIncreaseAgi",0);this.improvedSalePriceEnable=frozenUtils.loadBool("fb_improvedSalePriceEnable",!0);this.detailedLogging=frozenUtils.loadBool("fb_detailedLogging",!0);this.numberFormatter=
frozenUtils.loadInt("fb_numberFormatter",0);this.formatHealthBarNumbers=frozenUtils.loadBool("fb_formatHealthBarNumbers",!0);this.levelsReset=frozenUtils.loadInt("fb_levelsReset",0);this.applyLevelResetBonus=frozenUtils.loadBool("fb_applyLevelResetBonus",!0);this.statsBought=frozenUtils.loadInt("fb_statsBought",0);for(var a=frozenUtils.loadInt("fb_statCount",0),b=0;b<a;b++){var c=frozenUtils.load("fb_stat_name_"+b,void 0),d=frozenUtils.loadFloat("fb_stat_value_"+b,0);c&&(this.stats[c]=d)}}}}
function FrozenBattle(){this.settings=void 0;this.version=1.7;this.moduleActive=!0;this.lastUpdateTime=Date.now();this.lastAttackTime=Date.now();this.lastStatsUpdate=Date.now();this.updateTimePassed=this.experienceSinceUpdate=this.damageDealtSinceUpdate=0;this.init=function(){void 0==game||void 0==legacyGame.itemCreator||void 0==legacyGame.itemCreator.createRandomItem?(frozenUtils.log("Endless battle was not detected, disabling module!"),this.moduleActive=!1):(legacyGame.FrozenBattle=this,this.settings=
new FrozenBattleData,this.settings.load(),this.registerHooks(),this.applyLevelResetBonus(),this.applyStatIncrease(),this.minRarity=ItemRarity.COMMON,this.maxRarity=ItemRarity.LEGENDARY,this.initializeUI(),this.temp_fixPlayerHealth(),frozenUtils.log("Frozen battle module version "+this.getFullVersionString()+" loaded"))};this.registerHooks=function(){legacyGame.native_update=legacyGame.update;legacyGame.native_createRandomItem=legacyGame.itemCreator.createRandomItem;legacyGame.native_save=legacyGame.save;
legacyGame.native_load=legacyGame.load;legacyGame.native_reset=legacyGame.reset;legacyGame.player.native_getCritChance=legacyGame.player.getCritChance;legacyGame.mercenaryManager.native_purchaseMercenary=legacyGame.mercenaryManager.purchaseMercenary;legacyGame.monsterCreator.native_createRandomMonster=legacyGame.monsterCreator.createRandomMonster;legacyGame.update=this.onUpdate;legacyGame.itemCreator.createRandomItem=this.onCreateRandomItem;legacyGame.save=this.onSave;legacyGame.load=this.onLoad;
legacyGame.reset=this.onReset;legacyGame.player.getCritChance=this.onGetCritChance;legacyGame.mercenaryManager.purchaseMercenary=this.onPurchaseMercenary;legacyGame.monsterCreator.createRandomMonster=this.onCreateMonster;this.native_equipItemHover=equipItemHover;this.native_inventoryItemHover=inventoryItemHover;equipItemHover=this.onEquipItemHover;inventoryItemHover=this.onInventoryItemHover;this.native_formatMoney=Number.prototype.formatMoney;Number.prototype.formatMoney=this.onFormatNumber;Number.prototype.formatNumber=
this.onFormatNumber};this.releaseHooks=function(){legacyGame.update=legacyGame.native_update;legacyGame.itemCreator.createRandomItem=legacyGame.native_createRandomItem;legacyGame.save=legacyGame.native_save;legacyGame.load=legacyGame.native_load;legacyGame.reset=legacyGame.native_reset;legacyGame.player.getCritChance=legacyGame.player.native_getCritChance;legacyGame.mercenaryManager.purchaseMercenary=legacyGame.mercenaryManager.native_purchaseMercenary;legacyGame.monsterCreator.createRandomMonster=
legacyGame.monsterCreator.native_createRandomMonster;Number.prototype.formatMoney=this.native_formatMoney;equipItemHover=this.native_equipItemHover;inventoryItemHover=this.native_inventoryItemHover};this.onReset=function(){var a=legacyGame.FrozenBattle;a.releaseHooks();a.settings.levelsReset+=legacyGame.player.level-1;frozenUtils.log("Resetting");legacyGame.native_reset();a.applyLevelResetBonus();a.settings.autoCombatMaxLevelDifference=0;a.settings.autoCombatLevel=1;a.settings.statIncreaseAgi=0;a.settings.statIncreaseStamina=
0;a.settings.statIncreaseStrength=0;a.settings.statsBought=0;a.settings.save();a.registerHooks();a.updateUI()};this.onCreateMonster=function(a,b){return legacyGame.monsterCreator.native_createRandomMonster(a,b)};this.onPurchaseMercenary=function(a){legacyGame.mercenaryManager.native_purchaseMercenary(a);legacyGame.FrozenBattle.updateUI()};this.onGetCritChance=function(){var a=legacyGame.player.native_getCritChance();return 90<a?90:a};this.onUpdate=function(){legacyGame.FrozenBattle.update()};this.onSave=
function(){legacyGame.FrozenBattle.save()};this.onLoad=function(){legacyGame.FrozenBattle.load()};this.onFormatNumber=function(a){var b=legacyGame.FrozenBattle,c=frozenUtils.FormatterKeys[b.settings.numberFormatter];return void 0!=frozenUtils.Formatters[c]?(0,frozenUtils.Formatters[c])(parseInt(this)).toString().replace(/\B(?=(\d{3})+(?!\d))/g,","):b.nativeFormatMoney(this,a||0)};this.onEquipItemHover=function(a,b){legacyGame.FrozenBattle.native_equipItemHover(a,b);var c=legacyGame.inventory.slots[b-
1];c&&$("#itemTooltipSellValue").html(c.sellValue.formatNumber())};this.onInventoryItemHover=function(a,b){var c=legacyGame.FrozenBattle;c.native_inventoryItemHover(a,b);var d=legacyGame.inventory.slots[b-1];d&&($("#itemTooltipSellValue").html(d.sellValue.formatNumber()),c=c.getItemSlotNumber(d.type),(c=legacyGame.equipment.slots[c])&&$("#itemCompareTooltipSellValue").html(c.sellValue.formatNumber()))};this.save=function(){legacyGame.native_save();this.settings.save();localStorage.fb_version=this.version};
this.load=function(){legacyGame.native_load();this.settings.load()};this.update=function(){legacyGame.native_update();if(this.moduleActive&&!this.settings.disabled){var a=Date.now();this.autoCombat(a);this.updateTimePassed+=a-this.lastUpdateTime;this.updateTimePassed>=this.settings.updateInterval&&(this.finishMonster(a),this.autoSell(a),this.updateTimePassed-=this.settings.updateInterval);1E3<a-this.lastStatsUpdate&&(this.updateStats(),this.lastStatsUpdate=a);this.updateInterfaceOverrides();lastUpdateTime=
a}};this.finishMonster=function(a){!legacyGame.inBattle||!legacyGame.monster.alive||1<=legacyGame.monster.health||(legacyGame.monster.alive=!1,legacyGame.attack())};this.autoCombat=function(a){if(this.settings.autoCombatActive){var b=this.getAutoAttackTime();if(!(a-this.lastAttackTime<b||(this.lastAttackTime=a,a=legacyGame.player.getMaxHealth()/2,legacyGame.player.health<a)))for(a=legacyGame.player.level,a=this.settings.autoCombatKeepLevelDifference?legacyGame.player.level-this.settings.autoCombatMaxLevelDifference:
this.settings.autoCombatLevel,legacyGame.battleLevel=a,0==legacyGame.inBattle&&legacyGame.player.alive&&legacyGame.enterBattle(),a=this.getDoubleHitChance(),b=1,Math.random()<a&&b++;1<=b;)this.addStat("Auto attacks"),legacyGame.attack(),b--}};this.getAutoAttackTime=function(){var a;a=0+10*legacyGame.mercenaryManager.footmenOwned;a+=20*legacyGame.mercenaryManager.clericsOwned;a+=75*legacyGame.mercenaryManager.magesOwned;a+=150*legacyGame.mercenaryManager.assassinsOwned;a+=250*legacyGame.mercenaryManager.warlocksOwned;
var b=1;this.settings.applyLevelResetBonus&&(b+=.001*this.settings.levelsReset);a=1E4-a*b;return 10>a?10:a};this.getDoubleHitChance=function(){var a=.01,b=legacyGame.player.native_getCritChance();90<b&&(a+=(b-90)/1E3);return a};this.autoSell=function(a){if(this.settings.autoSellActive){for(var b=a=0;b<legacyGame.inventory.slots.length;b++)if(null!=legacyGame.inventory.slots[b]){var c=legacyGame.inventory.slots[b],d=this.getRarityNumber(c.rarity);d>=this.settings.autoSellThreshold||(this.settings.detailedLogging&&
frozenUtils.log("sold "+this.getRarityString(d)+" "+c.name+" for "+c.sellValue.formatNumber()),this.addStat("Items sold"),this.addStat("Items sold for",c.sellValue),legacyGame.inventory.sellItem(b))}else a++;0==a&&(frozenUtils.log("Inventory full, selling all items!"),legacyGame.inventory.sellAll())}};this.onCreateRandomItem=function(a,b){return legacyGame.FrozenBattle.createRandomItem(a,b)};this.createRandomItem=function(a,b){var c=legacyGame.native_createRandomItem(a,b);if(null==c)return null;this.settings.enchantingEnabled&&
this.enchantItem(c);this.settings.improvedSalePriceEnabled&&this.updateSalePrice(c);this.settings.detailedLogging&&frozenUtils.log("Found "+c.rarity+" "+c.name);return c};this.addStat=function(a,b){void 0==b&&(b=1);this.settings.stats[a]||(this.settings.stats[a]=0);this.settings.stats[a]+=b;this.updateInterfaceStats()};this.enchantItem=function(a){for(var b=this.settings.enchantingBaseChance,c=0;Math.random()<=b;)c++,b/=1.5;0<c&&(this.addStat("Items enchanted"),a.name+=" +"+c,a.enchantLevel=c,b=1+
this.settings.enchantingBaseMultiplier*c,a.minDamage=parseInt(a.minDamage*b),a.maxDamage=parseInt(a.maxDamage*b),a.damageBonus=parseInt(a.damageBonus*b),a.strength=parseInt(a.strength*b),a.agility=parseInt(a.agility*b),a.stamina=parseInt(a.stamina*b),a.health=parseInt(a.health*b),a.hp5=parseInt(a.hp5*b),a.armour=parseInt(a.armour*b),a.armourBonus=parseInt(a.armourBonus*b),a.critChance=parseInt(a.critChance*b),a.critDamage=parseInt(a.critDamage*b),a.goldGain=parseInt(a.goldGain*b),a.experienceGain=
parseInt(a.experienceGain*b))};this.updateSalePrice=function(a){baseSaleValue=Math.pow(a.level/2,3);a.sellValue=0;var b;b=1+this.updateSalePriceFor(a,a.damageBonus,1,.15);b+=this.updateSalePriceFor(a,a.strength,.1,.1);b+=this.updateSalePriceFor(a,a.agility,.1,.1);b+=this.updateSalePriceFor(a,a.stamina,.1,.05);b+=this.updateSalePriceFor(a,a.health,.05,.01);b+=this.updateSalePriceFor(a,a.hp5,.05,.02);b+=this.updateSalePriceFor(a,a.armour,.05,.01);b+=this.updateSalePriceFor(a,a.armourBonus,.1,.05);b+=
this.updateSalePriceFor(a,a.critChance,1,.15);b+=this.updateSalePriceFor(a,a.critDamage,.5,.05);b+=this.updateSalePriceFor(a,a.goldGain,.01,.01);b+=this.updateSalePriceFor(a,a.experienceGain,.01,.01);b+=this.updateSalePriceFor(a,a.enchantLevel,0,.2);NaN!=b&&(b=parseInt(baseSaleValue*b),a.sellValue+=b)};this.updateSalePriceFor=function(a,b,c,d){var e=a.sellValue;if(NaN==b||void 0==b||0==b)return 0;e+=parseInt(b*c);a.sellValue=e;return d};this.getRarityNumber=function(a){switch(a){case ItemRarity.COMMON:return 0;
case ItemRarity.UNCOMMON:return 1;case ItemRarity.RARE:return 2;case ItemRarity.EPIC:return 3;case ItemRarity.LEGENDARY:return 4}};this.getRarityString=function(a){switch(a){case 0:return"Common";case 1:return"Uncommon";case 2:return"Rare";case 3:return"Epic";case 4:return"Legendary"}};this.getItemSlotNumber=function(a){switch(a){case ItemType.HELM:return 0;case ItemType.SHOULDERS:return 1;case ItemType.CHEST:return 2;case ItemType.LEGS:return 3;case ItemType.WEAPON:return 4;case ItemType.GLOVES:return 5;
case ItemType.BOOTS:return 6;case ItemType.TRINKET:return 7;case ItemType.OFF_HAND:return 9}};this.getFullVersionString=function(){return this.version};this.temp_fixPlayerHealth=function(){frozenUtils.log("Applying player health fix (thanks to feildmaster)");legacyGame.player.baseHealthLevelUpBonus=0;legacyGame.player.baseHp5LevelUpBonus=0;for(var a=1;a<legacyGame.player.level;a++)legacyGame.player.baseHealthLevelUpBonus+=Math.floor(legacyGame.player.healthLevelUpBonusBase*Math.pow(1.15,a)),legacyGame.player.baseHp5LevelUpBonus+=
Math.floor(legacyGame.player.hp5LevelUpBonusBase*Math.pow(1.15,a));legacyGame.player.health=legacyGame.player.getMaxHealth()};this.sortInventory=function(){for(var a={},b=0;b<legacyGame.inventory.slots.length;b++)if(null!=legacyGame.inventory.slots[b]){var c=legacyGame.inventory.slots[b],d=100*this.getItemSlotNumber(c.type)+this.getRarityNumber(c.rarity);a[d]||(a[d]=[]);a[d].push(c)}b=Object.keys(a);b.sort();for(d=c=0;d<b.length;d++)for(var e=0;e<a[b[d]].length;e++)legacyGame.inventory.slots[c++]=
a[b[d]][e];for(b=c;b<legacyGame.inventory.slots.length;b++)legacyGame.inventory.slots[b]=null};this.nativeFormatMoney=function(a,b,c,d){b=isNaN(b=Math.abs(b))?2:b;c=void 0==c?".":c;d=void 0==d?",":d;var e=0>a?"-":"",f=parseInt(a=Math.abs(+a||0).toFixed(b))+"",k=3<(k=f.length)?k%3:0;return e+(k?f.substr(0,k)+d:"")+f.substr(k).replace(/(\d{3})(?=\d)/g,"$1"+d)+(b?c+Math.abs(a-f).toFixed(b).slice(2):"")};this.updateStats=function(){this.settings.stats["Damage/s"]=this.damageDealtSinceUpdate;this.damageDealtSinceUpdate=
0;this.settings.stats["XP/s"]=this.experienceSinceUpdate;this.experienceSinceUpdate=0;this.settings.stats["Levels reset"]=this.settings.levelsReset;this.settings.stats["Str bought"]=this.settings.statIncreaseStrength;this.settings.stats["Sta bought"]=this.settings.statIncreaseStamina;this.settings.stats["Agi bought"]=this.settings.statIncreaseAgi;this.updateInterfaceStats()};this.applyLevelResetBonus=function(){this.settings.applyLevelResetBonus&&(legacyGame.player.baseStats.damageBonus+=this.settings.levelsReset,
legacyGame.player.baseStats.goldGain+=this.settings.levelsReset,legacyGame.player.baseStats.experienceGain+=this.settings.levelsReset)};this.applyStatIncrease=function(){legacyGame.player.baseStats.strength+=this.settings.statIncreaseStrength;legacyGame.player.baseStats.stamina+=this.settings.statIncreaseStamina;legacyGame.player.baseStats.agility+=this.settings.statIncreaseAgi};this.removeStatIncrease=function(){legacyGame.player.baseStats.strength-=this.settings.statIncreaseStrength;legacyGame.player.baseStats.stamina-=
this.settings.statIncreaseStamina;legacyGame.player.baseStats.agility-=this.settings.statIncreaseAgi};this.gamble=function(){var a=this.getGambleCost();if(legacyGame.player.gold<a)return frozenUtils.logError("Not enough gold!"),!1;var b=legacyGame.player.level,c=2+10*Math.random(),d=Math.random(),e="average";.2>d&&(b-=2,e="mediocre",c-=5);.8<d&&(b++,e="good",c+=10);.9<d&&(b+=2,e="great",c+=10);c=legacyGame.monsterCreator.calculateMonsterRarity(b,Math.floor(c));for(d=void 0;void 0==d;)d=legacyGame.itemCreator.createRandomItem(b,
c);legacyGame.inventory.lootItem(d);legacyGame.player.gold-=a;this.addStat("Gambled");this.addStat("Gamble cost",a);frozenUtils.log("Gambled an "+e+" reward!");return!0};this.increaseStat=function(a){var b=this.getStatIncreaseCost();if(legacyGame.player.gold<b)return frozenUtils.logError("Not enough gold!"),!1;this.removeStatIncrease();this.settings[a]++;this.settings.statsBought++;this.applyStatIncrease();legacyGame.player.gold-=b;this.addStat("Stat cost",b);return!0};this.getGps=function(){for(var a=
0,b=0;b<legacyGame.mercenaryManager.mercenaries.length;b++)a+=legacyGame.mercenaryManager.getMercenariesGps(legacyGame.mercenaryManager.mercenaries[b].type);return a};this.getGambleCost=function(){return 340*Math.pow(1.3,legacyGame.player.level)};this.getStatIncreaseCost=function(){return 240*Math.pow(1.15,this.settings.statsBought)};this.initializeUI=function(){$("#version").after($('<div id="fbVersion" style="color: #808080; padding: 5px 0px 5px 10px; float: left"/>').html("FB "+this.getFullVersionString()));
$("#inventoryWindowSellAllButton").after($('<div id="inventoryWindowSortButton" class="button" style="font-family: \'Gentium Book Basic\'; position: absolute; left: 5px; top: 202px; line-height: 16px; color: #fff; font-size: 16px; text-shadow: 2px 0 0 #000, -2px 0 0 #000, 0 2px 0 #000, 0 -2px 0 #000, 1px 1px #000, -1px -1px 0 #000, 1px -1px 0 #000, -1px 1px 0 #000;"/>').addClass("button").html("Sort").click(this.onSortInventory));$("#expBarOption").after($('<div id="fbOptionNumberFormatting" class="optionsWindowOption"/>').click(this.onToggleOptionNumberFormatting));
$("#fbOptionNumberFormatting").after($('<div id="fbOptionDetailedLogging" class="optionsWindowOption"/>').click(function(){legacyGame.FrozenBattle.onToggleBoolSetting("detailedLogging")}));$("#fbOptionDetailedLogging").after($('<div id="fbOptionEnchanting" class="optionsWindowOption"/>').click(function(){legacyGame.FrozenBattle.onToggleBoolSetting("enchantingEnabled")}));$("#fbOptionEnchanting").after($('<div id="fbOptionImprovedSalePrice" class="optionsWindowOption"/>').click(function(){legacyGame.FrozenBattle.onToggleBoolSetting("improvedSalePriceEnabled")}));
$("#fbOptionImprovedSalePrice").after($('<div id="fbOptionFormatHealthBars" class="optionsWindowOption"/>').click(function(){legacyGame.FrozenBattle.onToggleBoolSetting("formatHealthBarNumbers")}));$("#fbOptionFormatHealthBars").after($('<div id="fbOptionApplyLevelResetBonus" class="optionsWindowOption"/>').click(this.onToggleApplyLevelResetBonus));$("#fbOptionApplyLevelResetBonus").after($('<div id="fbOptionSkipTutorial" class="optionsWindowOption"/>').click(function(){legacyGame.FrozenBattle.onToggleBoolSetting("skipTutorial")}));
var a=$('<div id="fbOnDemandOptions" class="navBarWindow" style="width:300px; height:320px; position: absolute; left:10px;top: 150px;margin: 0;"/>');$(document.body).append(a);a.append('<div class="navBarText" style="padding: 5px 10px 5px 10px">Frozen Battle Options</div');a.append($('<div id="autoCombatButton" class="navBarText" style="padding: 2px 10px 2px 10px"/>').addClass("button").click(function(){legacyGame.FrozenBattle.onToggleBoolSetting("autoCombatActive")}));a.append($('<div id="autoCombatKeepLevelDifferenceButton" class="navBarText" style="padding: 2px 10px 2px 20px"/>').addClass("button").click(function(){legacyGame.FrozenBattle.onToggleBoolSetting("autoCombatKeepLevelDifference")}));
a.append($('<div id="fbOnDemandOptionsCloseButton" class="closeButton button" onmouseover="closeButtonHover(this)" onmouseout="closeButtonReset(this)" onmousedown="closeButtonClick(this)" onmouseup="closeButtonReset(this)"></div>'));var b=$('<div id="autoCombatLevelDifference" style="padding: 2px 10px 2px 10px;">');a.append(b);b.append($('<div class="navBarText" style="padding: 2px 10px 2px 10px;float:left">- Level range: </div>')).append($('<div id="autoCombatLevelDifferenceDown" class="battleLevelButton button" style="margin:0;position: relative;left:0px; top:0px; float:left; background: url(\'includes/images/battleLevelButton.png\') 0 25px">-</button>').click(function(){legacyGame.FrozenBattle.onModifyBattleLevelDifference(-1)})).append($('<div id="autoCombatLevelDifferenceText" class="navBarText" style="padding: 2px 10px 2px 10px;float:left">N/A</div>')).append($('<div id="autoCombatLevelDifferenceUp" class="battleLevelButton button" style="margin:0;position: relative;left:0px; top:0px;float:left">+</button>').click(function(){legacyGame.FrozenBattle.onModifyBattleLevelDifference(1)})).append($('<div style="clear:both;"/>'));
b=$('<div id="autoCombatLevel" style="padding: 2px 10px 2px 10px;">');a.append(b);b.append($('<div class="navBarText" style="padding: 2px 10px 2px 10px;float:left">- Level: </div>')).append($('<div id="autoCombatLevelDown" class="battleLevelButton button" style="margin:0;position: relative;left:0px; top:0px; float:left; background: url(\'includes/images/battleLevelButton.png\') 0 25px">-</button>').click(function(){legacyGame.FrozenBattle.onModifyBattleLevel(-1)})).append($('<div id="autoCombatLevelText" class="navBarText" style="padding: 2px 10px 2px 10px;float:left">N/A</div>')).append($('<div id="autoCombatLevelUp" class="battleLevelButton button" style="margin:0;position: relative;left:0px; top:0px;float:left">+</button>').click(function(){legacyGame.FrozenBattle.onModifyBattleLevel(1)})).append($('<div style="clear:both;"/>'));
a.append($('<div id="autoSellButton" class="navBarText" style="padding: 2px 10px 2px 10px"/>').addClass("button").click(function(){legacyGame.FrozenBattle.onToggleBoolSetting("autoSellActive")}));a.append($('<div id="autoSellThresholdButton" class="navBarText" style="padding: 2px 10px 2px 20px"/>').addClass("button").click(this.onToggleAutoSellThreshold));a.append($('<div id="gambleButton" class="navBarText" style="padding: 2px 10px 2px 10px"/>').addClass("button").click(this.onGamble));a.append($('<div id="statIncreaseStr" class="navBarText" style="padding: 2px 10px 2px 10px"/>').addClass("button").click(function(){legacyGame.FrozenBattle.onIncreaseStat("statIncreaseStrength")}));
a.append($('<div id="statIncreaseSta" class="navBarText" style="padding: 2px 10px 2px 10px"/>').addClass("button").click(function(){legacyGame.FrozenBattle.onIncreaseStat("statIncreaseStamina")}));a.append($('<div id="statIncreaseAgi" class="navBarText" style="padding: 2px 10px 2px 10px"/>').addClass("button").click(function(){legacyGame.FrozenBattle.onIncreaseStat("statIncreaseAgi")}));a.draggable({drag:function(){updateWindowDepths(document.getElementById("fbOnDemandOptions"))},cancel:".globalNoDrag"});
a.hide();a=$('<div id="fbExtraStatsWindow" class="navBarWindow" style="width:300px; height:500px; position: absolute; left:10px;top: 150px;margin: 0;"/>');$(document.body).append(a);a.append('<div class="navBarText" style="padding: 5px 100px 5px 10px; float: left">Frozen Battle Stats</div>');b=$('<div class="navBarText" style="padding: 5px 10px 5px 20px">Clear</div>');b.click(this.onClearStats);a.append(b);a.append('<div id="fbExtraStats" style="padding: 5px 10px 5px 10px"/>');a.append($('<div id="fbExtraStatsCloseButton" class="closeButton button" onmouseover="closeButtonHover(this)" onmouseout="closeButtonReset(this)" onmousedown="closeButtonClick(this)" onmouseup="closeButtonReset(this)"></div>'));
a.draggable({drag:function(){updateWindowDepths(document.getElementById("fbExtraStatsWindow"))},cancel:".globalNoDrag"});a.hide();a=$('<div id="fbCombatLogWindow" class="navBarWindow" style="width:500px; height:250px; position: absolute; left:5px;bottom: 5px; top:initial;margin: 0"/>');$("#gameArea").append(a);a.append('<div class="navBarText" style="padding: 5px 300px 5px 10px; float: left">Combat Log</div>');a.append('<div id="fbCombatLogContent" style="padding: 5px 10px 5px 10px; height: 85%; width: 95%; overflow: auto"/>');
a.append($('<div id="fbCombatLogCloseButton" class="closeButton button" onmouseover="closeButtonHover(this)" onmouseout="closeButtonReset(this)" onmousedown="closeButtonClick(this)" onmouseup="closeButtonReset(this)"></div>'));a.draggable({drag:function(){updateWindowDepths(document.getElementById("fbCombatLogWindow"))},cancel:".globalNoDrag"});frozenUtils.logCallback=this.onLog;this.updateUI();this.updateInterfaceStats()};this.onClearStats=function(a){a=legacyGame.FrozenBattle;a.settings.stats={};
a.updateInterfaceStats()};this.onModifyBattleLevel=function(a){var b=legacyGame.FrozenBattle;b.settings.autoCombatLevel+=a;0>b.settings.autoCombatLevel&&(b.settings.autoCombatLevel=0);b.settings.autoCombatLevel>=legacyGame.player.level&&(b.settings.autoCombatLevel=legacyGame.player.level-1);b.updateUI()};this.onModifyBattleLevelDifference=function(a){var b=legacyGame.FrozenBattle;b.settings.autoCombatMaxLevelDifference+=a;0>b.settings.autoCombatMaxLevelDifference&&(b.settings.autoCombatMaxLevelDifference=
0);b.settings.autoCombatMaxLevelDifference>=legacyGame.player.level&&(b.settings.autoCombatMaxLevelDifference=legacyGame.player.level-1);b.updateUI()};this.onToggleBoolSetting=function(a){var b=legacyGame.FrozenBattle;b.settings[a]=!b.settings[a];b.updateUI()};this.onIncreaseStat=function(a){var b=legacyGame.FrozenBattle;b.increaseStat(a)&&b.updateUI()};this.onToggleApplyLevelResetBonus=function(){var a=legacyGame.FrozenBattle;a.settings.applyLevelResetBonus=!a.settings.applyLevelResetBonus;a.settings.applyLevelResetBonus?
a.applyLevelResetBonus():(legacyGame.player.baseDamageBonus-=a.settings.levelsReset,legacyGame.player.baseGoldGain-=a.settings.levelsReset,legacyGame.player.baseExperienceGain-=a.settings.levelsReset);a.updateUI()};this.onToggleAutoSellThreshold=function(){var a=legacyGame.FrozenBattle;a.settings.autoSellThreshold<=a.getRarityNumber(a.maxRarity)?a.settings.autoSellThreshold++:a.settings.autoSellThreshold=a.getRarityNumber(a.minRarity);a.updateUI()};this.onToggleOptionNumberFormatting=function(){var a=
legacyGame.FrozenBattle;a.settings.numberFormatter>=frozenUtils.FormatterKeys.length-1?a.settings.numberFormatter=0:a.settings.numberFormatter++;a.updateMercenarySalePrices();a.updateUI()};this.onSortInventory=function(){legacyGame.FrozenBattle.sortInventory()};this.onGamble=function(){legacyGame.FrozenBattle.gamble()};this.updateMercenarySalePrices=function(){$("#footmanCost").text(legacyGame.mercenaryManager.footmanPrice.formatNumber());$("#clericCost").text(legacyGame.mercenaryManager.clericPrice.formatNumber());
$("#commanderCost").text(legacyGame.mercenaryManager.commanderPrice.formatNumber());$("#mageCost").text(legacyGame.mercenaryManager.magePrice.formatNumber());$("#assassinCost").text(legacyGame.mercenaryManager.assassinPrice.formatNumber());$("#warlockCost").text(legacyGame.mercenaryManager.warlockPrice.formatNumber())};this.updateUI=function(){if(this.settings.autoCombatActive){var a=frozenUtils.timeDisplay(this.getAutoAttackTime(),!0);$("#autoCombatButton").text("Auto combat: "+this.getBoolDisplayText(this.settings.autoCombatActive)+
" (every "+a+")");$("#autoCombatKeepLevelDifferenceButton").show();$("#autoCombatKeepLevelDifferenceButton").text("- Keep combat level in range: "+this.getBoolDisplayText(this.settings.autoCombatKeepLevelDifference));this.settings.autoCombatKeepLevelDifference?($("#autoCombatLevel").hide(),$("#autoCombatLevelDifference").show(),$("#autoCombatLevelDifferenceText").text(this.settings.autoCombatMaxLevelDifference)):($("#autoCombatLevel").show(),$("#autoCombatLevelDifference").hide(),$("#autoCombatLevelText").text(this.settings.autoCombatLevel))}else $("#autoCombatButton").text("Auto combat: "+
this.getBoolDisplayText(this.settings.autoCombatActive)),$("#autoCombatKeepLevelDifferenceButton").hide(),$("#autoCombatLevelDifference").hide(),$("#autoCombatLevel").hide();$("#autoSellButton").text("Auto sell: "+this.getBoolDisplayText(this.settings.autoSellActive));$("#fbOptionDetailedLogging").text("Detailed logging: "+this.getBoolDisplayText(this.settings.detailedLogging));$("#fbOptionEnchanting").text("Enchanting: "+this.getBoolDisplayText(this.settings.enchantingEnabled));$("#fbOptionImprovedSalePrice").text("Improved sale price: "+
this.getBoolDisplayText(this.settings.improvedSalePriceEnabled));$("#fbOptionNumberFormatting").text("Format numbers: "+frozenUtils.FormatterKeys[this.settings.numberFormatter]);$("#fbOptionFormatHealthBars").text("Format health bars: "+this.getBoolDisplayText(this.settings.formatHealthBarNumbers));$("#fbOptionApplyLevelResetBonus").text("Apply level reset bonus: "+this.getBoolDisplayText(this.settings.applyLevelResetBonus));$("#gambleButton").text("Gamble for "+this.getGambleCost().formatNumber());
a=this.getStatIncreaseCost();$("#statIncreaseStr").text("Buy str for "+a.formatNumber());$("#statIncreaseSta").text("Buy sta for "+a.formatNumber());$("#statIncreaseAgi").text("Buy agi for "+a.formatNumber());a="";this.settings.autoSellActive?(a=this.settings.autoSellThreshold>this.getRarityNumber(this.maxRarity)?"All":"- Sell below "+this.getRarityString(this.settings.autoSellThreshold),$("#autoSellThresholdButton").show(),$("#autoSellThresholdButton").text(a)):$("#autoSellThresholdButton").hide()};
this.updateInterfaceStats=function(){$("#fbExtraStats").empty();for(key in this.settings.stats)$("#fbExtraStats").append('<div class="navBarText" style="padding: 5px 70px 5px 10px; float:left;width:100px">'+key+"</div>"),$("#fbExtraStats").append('<div class="navBarText" style="padding: 5px 10px 5px 10px">'+this.settings.stats[key].formatNumber()+"</div>")};this.updateInterfaceOverrides=function(a){if(this.settings.formatHealthBarNumbers){a=Math.floor(legacyGame.player.health).formatNumber();var b=
Math.floor(legacyGame.player.getMaxHealth()).formatNumber();$("#playerHealthBarText").text(a+"/"+b);legacyGame.displayMonsterHealth&&legacyGame.monster&&(a=Math.floor(legacyGame.monster.health).formatNumber(),b=Math.floor(legacyGame.monster.maxHealth).formatNumber(),$("#monsterName").text(a+"/"+b))}};this.getBoolDisplayText=function(a){return a?"ON":"OFF"}}
function ImprovementManager(){function a(){for(var a in e)try{e[a].onInit()}catch(c){b("init",c)}for(;0<e.length;){a=e.pop();try{a.onLoad(),d.push(a)}catch(f){b("load",f)}}}function b(a,b){var c="undefined";void 0!==b.fileName&&(c=b.fileName.slice(b.fileName.lastIndexOf("/")+1));console.log("Error when handling %s: [%s (%s:%d)]",a,b,c,b.lineNumber)}var c=0,d=[],e=[];this.add=function(a){a instanceof Improvement&&e.push(a)};this.getCurrentTime=function(){return c};$(a);var f=legacyGame.save;legacyGame.save=
function(){f.apply(this);for(var a in d)try{d[a].onSave()}catch(c){b("save",c)}};var k=legacyGame.update;legacyGame.update=function(){c=Date.now();k.apply(this);for(var f in d)try{d[f].onUpdate()}catch(h){b("update",h)}0<e.length&&a()};var h=legacyGame.reset;legacyGame.reset=function(){h.apply(this);for(var a in d)try{d[a].onReset()}catch(c){b("reset",c)}}}
function Improvement(a,b,c,d,e){this.onInit=function(){"function"===typeof a&&a()};this.onLoad=function(){"function"===typeof b&&b()};this.onSave=function(){"function"===typeof c&&c()};this.onUpdate=function(){"function"===typeof d&&d()};this.onReset=function(){"function"===typeof e&&e()}}Improvement.prototype.register=function(){legacyGame.endlessImprovement.add(this)};
function questFix(){function a(){legacyGame.questsManager.getSelectedQuest=function(){return this.quests.length>this.selectedQuest?this.quests[this.selectedQuest]:null};var a=legacyGame.questsManager.addQuest;legacyGame.questsManager.addQuest=function(c){c.displayId=this.quests.length+1;a.apply(this,arguments)};var c=legacyGame.questsManager.removeQuest;legacyGame.questsManager.removeQuest=function(a){var b=this.selectedQuest==a;c.apply(this,arguments);b&&this.selectedQuest<this.quests.length&&$("#questTextArea").show()}}
(new Improvement(function(){a()},function(){if(localStorage.questBuffRewards)for(var a=JSON.parse(localStorage.getItem("questBuffRewards")),c=0;c<legacyGame.questsManager.quests.length;c++)a.length>c&&(legacyGame.questsManager.quests[c].buffReward=a[c])},null,null,function(){a()})).register()}
function statWindowImprovement(){function a(){statsWindowShown&&b.apply(this)}(new Improvement(function(){legacyGame.stats.update=a},null,null,null,function(){b=legacyGame.stats.update})).register();var b=legacyGame.stats.update}
function mercenaryHighlighting(){function a(){var a=legacyGame.mercenaryManager.purchaseMercenary;legacyGame.mercenaryManager.purchaseMercenary=function(){a.apply(this,arguments);c()};var b=legacyGame.upgradeManager.purchaseUpgrade;legacyGame.upgradeManager.purchaseUpgrade=function(){b.apply(this,arguments);c()}}function b(){$("#highlightMercenaryValue").html(e?"ON":"OFF")}function c(){if(e){var a,b=0,c;for(c in MercenaryType){var l=legacyGame.mercenaryManager[c.toLowerCase()+"Price"]/legacyGame.mercenaryManager.getMercenaryBaseGps(c);
if(null==a||l<b)a=c,b=l}f!=a&&(d(),f=a,$("#"+a.toLowerCase()+"Name").css("color","#ffff00"))}else d(),f=null}function d(){f&&$("#"+f.toLowerCase()+"Name").css("color","#fff")}var e=!0,f=null;(new Improvement(function(){a();legacyGame.highlightBestMercenaryClick=function(){e=!e;c();b()};$("#optionsWindowOptionsArea").append('<div class="optionsWindowOption" onmousedown="legacyGame.highlightBestMercenaryClick()"><span style="color: #ffff00;">Highlight</span> most cost efficient mercenary: <span id="highlightMercenaryValue">ON</span></div>')},
function(){localStorage.endlessEnableHighlight&&(e="true"===localStorage.endlessEnableHighlight);b();c()},function(){localStorage.endlessEnableHighlight=e},null,function(){a()})).register()}
function monsterKillStats(){function a(){var a=legacyGame.monsterCreator.createRandomMonster;legacyGame.monsterCreator.createRandomMonster=function(){var f=a.apply(this,arguments),k=f.takeDamage;f.takeDamage=function(){if(this.alive){var a=k.apply(this,arguments);this.alive||this.rarity!=MonsterRarity.BOSS||(this.level>c&&(c=this.level,d=!1),this.level===legacyGame.player.level&&(b++,d=!1));return a}};return f}}var b=0,c=0,d=!1;(new Improvement(function(){a()},function(){localStorage.endlessBossKills&&
(b=parseInt(localStorage.endlessBossKills),c=parseInt(localStorage.endlessBossLevel));$("#statsWindowStatsArea").append('<div class="statsWindowText"><span style="color: #F00;">Boss</span> kills at player level:</div>');$("#statsWindowStatValuesArea").append('<div id="statsWindowBossKills" class="statsWindowText"></div>');$("#statsWindowStatsArea").append('<div class="statsWindowText">Highest level <span style="color: #F00;">Boss</span> kill:</div>');$("#statsWindowStatValuesArea").append('<div id="statsWindowBossLevel" class="statsWindowText"></div>')},
function(){localStorage.endlessBossKills=b;localStorage.endlessBossLevel=c},function(){d||($("#statsWindowBossKills").html(b.formatMoney(0)),$("#statsWindowBossLevel").html(c.formatMoney(0)),d=!0)},function(){c=b=0;d=!1;a()})).register();legacyGame.endlessImprovement.getBossKills=function(){return b}}
function monsterKillQuests(){function a(a){a.hooked||(a.update=b,a.grantReward=c,a.hooked=!0)}function b(){this.complete=legacyGame.endlessImprovement.getBossKills()>this.typeAmount}function c(){legacyGame.player.gainExperience(Math.ceil(10*legacyGame.player.experienceRequired/100),!1);legacyGame.stats.experienceFromQuests+=legacyGame.player.lastExperienceGained}(new Improvement(null,function(){localStorage.endlessKillLevelAwarded&&(d=parseInt(localStorage.endlessKillLevelAwarded))},function(){localStorage.endlessKillLevelAwarded=
d},function(){if(!(30>legacyGame.player.level)){for(var b,c=legacyGame.questsManager.quests.length-1;0<=c;c--){var k=legacyGame.questsManager.quests[c];if(k.type==QuestType.ENDLESS_BOSSKILL){b=k;a(b);break}}!b&&30<=legacyGame.player.level&&d<legacyGame.player.level&&(b=new Quest("Kill a boss","Kill a boss equal to your level, prove your worth!",QuestType.ENDLESS_BOSSKILL,0,legacyGame.endlessImprovement.getBossKills(),0,"10%"),a(b),legacyGame.questsManager.addQuest(b));d!=legacyGame.player.level&&
(d=legacyGame.player.level)}},function(){d=0})).register();QuestType.ENDLESS_BOSSKILL="EndlessBossKill";var d=0}
function persistentGame(){(new Improvement(null,function(){localStorage.endlessEventTime&&(legacyGame.eventManager.eventSpawnTimeRemaining=parseInt(localStorage.endlessEventTime));if(localStorage.endlessBuffs)for(var a=JSON.parse(localStorage.endlessBuffs),b=0;b<a.length;b++){var c=new Buff(a[b].name,a[b].type,a[b].multiplier,1,a[b].leftPos,a[b].topPos);c.maxDuration=a[b].maxDuration;c.currentDuration=a[b].currentDuration;legacyGame.player.buffs.addBuff(c)}localStorage.endlessDeath&&(legacyGame.player.resurrectionTimeRemaining=
parseInt(localStorage.endlessDeath))},function(){localStorage.endlessEventTime=legacyGame.eventManager.eventSpawnTimeRemaining;localStorage.endlessBuffs=JSON.stringify(legacyGame.player.buffs.buffs);localStorage.endlessDeath=legacyGame.player.resurrectionTimeRemaining})).register()}$("#optionsWindowOptionsArea").append('<div id="improvementOptionsTitle" class="optionsWindowOptionsTitle">Endless Improvement Options</div>');
String.prototype.formatCapitalize=function(){return this.charAt(0).toUpperCase()+this.slice(1).toLowerCase()};
declare("Game",function(){function a(){b.construct(this);this.id="Game";this.version=.5;this.autoSaveDelay=3E4;this.autoSaveTime=void 0;this.versionCheckDelay=3E4;this.versionCheckInfo=this.versionCheckData=this.versionCheckTime=void 0}include("Debug","game");include("Assert","game");var b=include("Component","game"),c=include("StaticData","game"),d=include("Save","game");include("SaveKeys","game");include("CoreUtils","game");var e=include("EventAggregate","game");a.prototype=b.prototype();a.prototype.$super=
parent;a.prototype.constructor=a;a.prototype.componentInit=a.prototype.init;a.prototype.init=function(){this.componentInit();this.reset();this.load();legacyGame.initialize();legacyGame.finishLoading();legacyGame.FrozenBattle=new FrozenBattle;legacyGame.FrozenBattle.init();legacyGame.endlessImprovement=new ImprovementManager;questFix();statWindowImprovement();mercenaryHighlighting();monsterKillStats();monsterKillQuests();persistentGame()};a.prototype.componentUpdate=a.prototype.update;a.prototype.update=
function(a){if(!0!==this.componentUpdate(a))return!1;this.updateAutoSave(a);this.updateVersionCheck(a);legacyGame.update();return!0};a.prototype.getCurrentVersion=function(){return this.version};a.prototype.getVersionCheckData=function(){return this.versionCheckData};a.prototype.updateAutoSave=function(a){void 0===this.autoSaveTime?this.autoSaveTime=a.current:a.current>this.autoSaveTime+this.autoSaveDelay&&(this.save(),this.autoSaveTime=a.current)};a.prototype.updateVersionCheck=function(a){void 0===
this.versionCheckTime?this.versionCheckTime=a.current:a.current>this.versionCheckTime+this.versionCheckDelay&&($.ajax({url:c.versionInfoFile,success:this.handleVersionInfoResult(this),cache:!1}),this.versionCheckTime=a.current)};a.prototype.handleVersionCheckResult=function(a){return function(b,c,d){a.versionCheckData=JSON.parse(b)}};a.prototype.handleVersionInfoResult=function(a){return function(b,d,e){b=parseFloat(b.trim());a.versionCheckInfo!==b&&(a.versionCheckInfo=b,$.ajax({url:c.versionFile,
success:a.handleVersionCheckResult(a),cache:!1}))}};a.prototype.gainGold=function(a,b,d){if(void 0!==a){var g=1;b&&(g+=legacyGame.player.getGoldGain()/100,g+=legacyGame.player.buffs.getGoldMultiplier());a*=g;legacyGame.player.gold+=a;legacyGame.player.lastGoldGained=a;legacyGame.stats.goldEarned+=a;!0!==d&&e.publish(c.EventGoldGain,{value:a.formatMoney(0)})}};a.prototype.gainExperience=function(a,b){var d=1;b&&(d+=legacyGame.player.getExperienceGain()/100,d+=legacyGame.player.buffs.getExperienceMultiplier());
d*=a;legacyGame.player.experience+=d;legacyGame.player.lastExperienceGained=d;legacyGame.stats.experienceEarned+=d;legacyGame.FrozenBattle.experienceSinceUpdate+=d;e.publish(c.EventXpGain,{value:d.formatMoney(0)});legacyGame.player.checkLevelUp()};a.prototype.playerTakeDamage=function(a){0<legacyGame.player.takeDamage(a)&&(a={wasHit:!0,wasCrit:!1,damageTotal:a.formatMoney(0),sourceActorName:legacyGame.monster.name,targetActorName:"you"},e.publish(c.EventCombatHit,a))};a.prototype.monsterTakeDamage=
function(a,b,d){d=legacyGame.monster.takeDamage(a,b,d);legacyGame.FrozenBattle.damageDealtSinceUpdate+=a;0<d&&(a={wasHit:!0,wasCrit:b,damageTotal:a.formatMoney(0),sourceActorName:"you",targetActorName:legacyGame.monster.name},e.publish(c.EventCombatHit,a))};a.prototype.save=function(){d.save()};a.prototype.load=function(){d.load()};a.prototype.reset=function(){d.reset()};a.prototype.onLoad=function(){this.calculateMercenaryGps()};return new a});
function Sigma(a){total=0;for(var b=1;b<=a;b++)total+=b;return total}var mouseX=0,mouseY=0;(function(){window.onmousemove=function(a){a=a||window.event;mouseX=a.clientX;mouseY=a.clientY}})();
Number.prototype.formatMoney=function(a,b,c){var d=this;a=isNaN(a=Math.abs(a))?2:a;b=void 0==b?".":b;c=void 0==c?",":c;s=0>d?"-":"";i=parseInt(d=Math.abs(+d||0).toFixed(a))+"";j=3<(j=i.length)?j%3:0;return s+(j?i.substr(0,j)+c:"")+i.substr(j).replace(/(\d{3})(?=\d)/g,"$1"+c)+(a?b+Math.abs(d-i).toFixed(a).slice(2):"")};AttackType={BASIC_ATTACK:"BASIC_ATTACK",POWER_STRIKE:"POWER_STRIKE",DOUBLE_STRIKE:"DOUBLE_STRIKE"};
function StatsSet(){this.experienceGain=this.goldGain=this.itemRarity=this.critDamage=this.critChance=this.agility=this.stamina=this.strength=this.evasion=this.armour=this.damageBonus=this.maxDamage=this.minDamage=this.hp5=this.health=0}
function Player(){this.level=1;this.health=100;this.baseStats=new StatsSet;this.baseStats.health=this.health;this.baseStats.hp5=10;this.baseStats.minDamage=1;this.baseStats.maxDamage=1;this.baseStats.damageBonus=0;this.baseStats.armour=0;this.baseStats.evasion=0;this.baseStats.strength=0;this.baseStats.agility=0;this.baseStats.stamina=0;this.baseStats.critChance=5;this.baseStats.critDamage=200;this.baseStats.itemRarity=0;this.baseStats.goldGain=0;this.baseStats.experienceGain=0;this.baseLevelUpBonuses=
new StatsSet;this.baseLevelUpBonuses.health=5;this.baseLevelUpBonuses.hp5=1;this.levelUpBonuses=new StatsSet;this.chosenLevelUpBonuses=new StatsSet;this.baseItemBonuses=new StatsSet;this.effects=[];this.lastDamageTaken=0;this.canAttack=this.alive=!0;this.attackType=AttackType.BASIC_ATTACK;this.experience=this.lastGoldGained=this.gold=0;this.baseExperienceRequired=10;this.experienceRequired=Math.ceil(Sigma(2*this.level)*Math.pow(1.05,this.level)+this.baseExperienceRequired);this.powerShards=this.lastExperienceGained=
0;this.resurrecting=!1;this.resurrectionTimer=60;this.skillPoints=this.skillPointsSpent=this.resurrectionTimeRemaining=0;this.abilities=new Abilities;this.buffs=new BuffManager;this.debuffs=new DebuffManager;this.getMaxHealth=function(){return Math.floor(5*this.getStrength()+(this.baseStats.health+this.levelUpBonuses.health+this.baseItemBonuses.health)*(legacyGame.mercenaryManager.getCommanderHealthPercentBonus()*legacyGame.mercenaryManager.commandersOwned/100+1)*legacyGame.getPowerShardBonus())};
this.getHp5=function(){return Math.floor(this.getStamina()+(this.baseStats.hp5+this.levelUpBonuses.hp5+this.chosenLevelUpBonuses.hp5+this.baseItemBonuses.hp5)*(legacyGame.mercenaryManager.getClericHp5PercentBonus()*legacyGame.mercenaryManager.clericsOwned/100+1)*legacyGame.getPowerShardBonus())};this.getDamageBonusMultiplier=function(){return(this.getDamageBonus()+100)/100};this.getMinDamage=function(){return null!=legacyGame.equipment.weapon()?Math.floor((this.baseStats.minDamage+this.baseItemBonuses.minDamage-
1)*this.getDamageBonusMultiplier()*this.buffs.getDamageMultiplier()*legacyGame.getPowerShardBonus()):this.baseStats.strength+Math.floor((this.baseStats.minDamage+this.baseItemBonuses.minDamage)*this.getDamageBonusMultiplier()*this.buffs.getDamageMultiplier()*legacyGame.getPowerShardBonus())};this.getMaxDamage=function(){return null!=legacyGame.equipment.weapon()?Math.floor((this.baseStats.maxDamage+this.baseItemBonuses.maxDamage-1)*this.getDamageBonusMultiplier()*this.buffs.getDamageMultiplier()*
legacyGame.getPowerShardBonus()):this.baseStats.strength+Math.floor((this.baseStats.maxDamage+this.baseItemBonuses.maxDamage)*this.getDamageBonusMultiplier()*this.buffs.getDamageMultiplier()*legacyGame.getPowerShardBonus())};this.getDamageBonus=function(){return this.getStrength()+(this.baseStats.damageBonus+this.chosenLevelUpBonuses.damageBonus+this.baseItemBonuses.damageBonus+legacyGame.mercenaryManager.getMageDamagePercentBonus()*legacyGame.mercenaryManager.magesOwned)*legacyGame.getPowerShardBonus()};
this.getAverageDamage=function(){var a=this.getMaxDamage()-this.getMinDamage();return a+=this.getMinDamage()};this.getArmour=function(){return Math.floor((this.baseStats.armour+this.chosenLevelUpBonuses.armour+this.baseItemBonuses.armour)*(this.getStamina()/100+1)*legacyGame.getPowerShardBonus())};this.getEvasion=function(){return Math.floor((this.baseStats.evasion+this.chosenLevelUpBonuses.evasion+this.baseItemBonuses.evasion)*((this.getAgility()+legacyGame.mercenaryManager.getAssassinEvasionPercentBonus()*
legacyGame.mercenaryManager.assassinsOwned)/100+1)*legacyGame.getPowerShardBonus())};this.getStrength=function(){return Math.floor((this.baseStats.strength+this.chosenLevelUpBonuses.strength+this.baseItemBonuses.strength)*legacyGame.getPowerShardBonus())};this.getStamina=function(){return Math.floor((this.baseStats.stamina+this.chosenLevelUpBonuses.stamina+this.baseItemBonuses.stamina)*legacyGame.getPowerShardBonus())};this.getAgility=function(){return Math.floor((this.baseStats.agility+this.chosenLevelUpBonuses.agility+
this.baseItemBonuses.agility)*legacyGame.getPowerShardBonus())};this.getCritChance=function(){return(this.baseStats.critChance+this.chosenLevelUpBonuses.critChance+this.baseItemBonuses.critChance)*legacyGame.getPowerShardBonus()};this.getCritDamage=function(){return(this.baseStats.critDamage+this.chosenLevelUpBonuses.critDamage+this.baseItemBonuses.critDamage+.2*this.getAgility()+legacyGame.mercenaryManager.getWarlockCritDamageBonus()*legacyGame.mercenaryManager.warlocksOwned)*legacyGame.getPowerShardBonus()};
this.getItemRarity=function(){return(this.baseStats.itemRarity+this.chosenLevelUpBonuses.itemRarity+this.baseItemBonuses.itemRarity)*legacyGame.getPowerShardBonus()};this.getGoldGain=function(){return(this.baseStats.goldGain+this.chosenLevelUpBonuses.goldGain+this.baseItemBonuses.goldGain)*legacyGame.getPowerShardBonus()};this.getExperienceGain=function(){return(this.baseStats.experienceGain+this.chosenLevelUpBonuses.experienceGain+this.baseItemBonuses.experienceGain)*legacyGame.getPowerShardBonus()};
this.getEffectsOfType=function(a){for(var b=[],c=0;c<this.effects.length;c++)this.effects[c].type==a&&b.push(this.effects[c]);return b};this.increaseAbilityPower=function(a){switch(a){case AbilityName.REND:this.abilities.baseRendLevel++;break;case AbilityName.REJUVENATING_STRIKES:this.abilities.baseRejuvenatingStrikesLevel++;break;case AbilityName.ICE_BLADE:this.abilities.baseIceBladeLevel++;break;case AbilityName.FIRE_BLADE:this.abilities.baseFireBladeLevel++}this.skillPoints--;this.skillPointsSpent++};
this.useAbilities=function(){var a=!1;0<this.abilities.getRendLevel()&&legacyGame.monster.addDebuff(DebuffType.BLEED,this.abilities.getRendDamage(0),this.abilities.rendDuration);0<this.abilities.getRejuvenatingStrikesLevel()&&this.heal(this.abilities.getRejuvenatingStrikesHealAmount(0));if(0<this.abilities.getIceBladeLevel()){var b=this.abilities.getIceBladeDamage(0);this.getCritChance()>=100*Math.random()&&(b*=this.getCritDamage()/100,a=!0);game.monsterTakeDamage(b,a,!1);legacyGame.monster.addDebuff(DebuffType.CHILL,
0,this.abilities.iceBladeChillDuration)}0<this.abilities.getFireBladeLevel()&&(b=this.abilities.getFireBladeDamage(0),this.getCritChance()>=100*Math.random()&&(b*=this.getCritDamage()/100,a=!0),game.monsterTakeDamage(b,a,!1),legacyGame.monster.addDebuff(DebuffType.BURN,this.abilities.getFireBladeBurnDamage(0),this.abilities.fireBladeBurnDuration))};this.changeAttack=function(a){switch(a){case AttackType.BASIC_ATTACK:this.attackType=AttackType.BASIC_ATTACK;$("#attackButton").css("background",'url("includes/images/attackButtons.png") 0 0');
break;case AttackType.POWER_STRIKE:this.attackType=AttackType.POWER_STRIKE;$("#attackButton").css("background",'url("includes/images/attackButtons.png") 0 100px');break;case AttackType.DOUBLE_STRIKE:this.attackType=AttackType.DOUBLE_STRIKE,$("#attackButton").css("background",'url("includes/images/attackButtons.png") 0 50px')}};this.checkLevelUp=function(){for(;this.experience>=this.experienceRequired;)this.experience-=this.experienceRequired,this.level++,this.skillPoints++,this.experienceRequired=
Math.ceil(Sigma(2*this.level)*Math.pow(1.05,this.level)+this.baseExperienceRequired),0!=this.level%5&&legacyGame.statUpgradesManager.addRandomUpgrades(this.level),this.levelUpBonuses.health+=Math.floor(this.baseLevelUpBonuses.health*Math.pow(1.01,this.level-1)),this.levelUpBonuses.hp5+=Math.floor(this.baseLevelUpBonuses.hp5*Math.pow(1.01,this.level-1))};this.takeDamage=function(a){var b=this.calculateDamageReduction();a-=Math.floor(b/100*a);0>a&&(a=0);this.health-=a;this.lastDamageTaken=a;legacyGame.stats.damageTaken+=
a;for(var b=0,c=this.getEffectsOfType(EffectType.BARRIER),d=0;d<c.length;d++)b+=c[d].value;b=b/100*this.lastDamageTaken;0<b&&game.monsterTakeDamage(b,!1,!1);0>=this.health&&(this.alive=!1);legacyGame.particleManager.createParticle(a,ParticleType.MONSTER_DAMAGE);return a};this.calculateDamageReduction=function(){var a=this.getArmour()/(this.getArmour()+500)*99;99<=a&&(a=99);return a};this.calculateEvasionChance=function(){var a=this.getEvasion()/(this.getEvasion()+375)*75;75<=a&&(a=75);return a};this.heal=
function(a){this.health+=a;this.health>this.getMaxHealth()&&(this.health=this.getMaxHealth())};this.regenerateHealth=function(a){this.health+=this.getHp5()/5*(a/1E3);this.health>=this.getMaxHealth()&&(this.health=this.getMaxHealth())};this.gainItemsStats=function(a){this.baseItemBonuses.minDamage+=a.minDamage+a.damageBonus;this.baseItemBonuses.maxDamage+=a.maxDamage+a.damageBonus;this.baseItemBonuses.strength+=a.strength;this.baseItemBonuses.agility+=a.agility;this.baseItemBonuses.stamina+=a.stamina;
this.baseItemBonuses.health+=a.health;this.baseItemBonuses.hp5+=a.hp5;this.baseItemBonuses.armour+=a.armour+a.armourBonus;this.baseItemBonuses.evasion+=a.evasion;this.baseItemBonuses.critChance+=a.critChance;this.baseItemBonuses.critDamage+=a.critDamage;this.baseItemBonuses.itemRarity+=a.itemRarity;this.baseItemBonuses.goldGain+=a.goldGain;this.baseItemBonuses.experienceGain+=a.experienceGain;for(var b=0;b<a.effects.length;b++)this.effects.push(a.effects[b])};this.loseItemsStats=function(a){this.baseItemBonuses.minDamage-=
a.minDamage+a.damageBonus;this.baseItemBonuses.maxDamage-=a.maxDamage+a.damageBonus;this.baseItemBonuses.strength-=a.strength;this.baseItemBonuses.agility-=a.agility;this.baseItemBonuses.stamina-=a.stamina;this.baseItemBonuses.health-=a.health;this.baseItemBonuses.hp5-=a.hp5;this.baseItemBonuses.armour-=a.armour+a.armourBonus;this.baseItemBonuses.evasion-=a.evasion;this.baseItemBonuses.critChance-=a.critChance;this.baseItemBonuses.critDamage-=a.critDamage;this.baseItemBonuses.itemRarity-=a.itemRarity;
this.baseItemBonuses.goldGain-=a.goldGain;this.baseItemBonuses.experienceGain-=a.experienceGain;for(var b=a.effects.length-1;0<=b;b--)for(var c=this.effects.length-1;0<=c;c--)if(this.effects[c].type==a.effects[b].type&&this.effects[c].chance==a.effects[b].chance&&this.effects[c].value==a.effects[b].value){this.effects.splice(c,1);break}};this.addDebuff=function(a,b,c){switch(a){case DebuffType.BLEED:this.debuffs.bleeding=!0;this.debuffs.bleedDamage=b;this.debuffs.bleedDuration=0;this.debuffs.bleedMaxDuration=
c;this.debuffs.bleedStacks++;break;case DebuffType.CHILL:this.debuffs.chilled=!0;this.debuffs.chillDuration=0;this.debuffs.chillMaxDuration=c;break;case DebuffType.BURN:this.debuffs.burning=!0,this.debuffs.burningDamage=b,this.debuffs.burningDuration=0,this.debuffs.burningMaxDuration=c}};this.update=function(a){this.buffs.update(a)};this.updateDebuffs=function(){this.debuffs.bleeding&&(game.playerTakeDamage(this.debuffs.bleedDamage),this.debuffs.bleedDuration++,this.debuffs.bleedDuration>=this.debuffs.bleedMaxDuration&&
(this.debuffs.bleeding=!1,this.debuffs.bleedDamage=0,this.debuffs.bleedDuration=0,this.debuffs.bleedMaxDuration=0,this.debuffs.bleedStacks=0));this.debuffs.chilled?(this.canAttack=0==this.debuffs.chillDuration||0==this.debuffs.chillDuration%2?!1:!0,this.debuffs.chillDuration++,this.debuffs.chillDuration>=this.debuffs.chillMaxDuration&&(this.debuffs.chillDuration=0,this.debuffs.chillMaxDuration=0,this.debuffs.chilled=!1)):this.canAttack=!0;this.debuffs.burning&&(game.playerTakeDamage(this.debuffs.burningDamage),
this.debuffs.burningDuration++,this.debuffs.burningDuration>=this.debuffs.burningMaxDuration&&(this.debuffs.burningDamage=0,this.debuffs.burningDuration=0,this.debuffs.burningMaxDuration=0,this.debuffs.burning=!1))};this.save=function(){localStorage.playerSaved=!0;localStorage.playerLevel=this.level;localStorage.playerHealth=this.health;localStorage.chosenLevelUpBonuses=JSON.stringify(this.chosenLevelUpBonuses);localStorage.baseItemBonuses=JSON.stringify(this.baseItemBonuses);localStorage.playerGold=
this.gold;localStorage.playerLevel=this.level;localStorage.playerExperience=this.experience;localStorage.playerSkillPointsSpent=this.skillPointsSpent;localStorage.playerSkillPoints=this.skillPoints;this.abilities.save();localStorage.playerAlive=this.alive;localStorage.attackType=this.attackType;localStorage.playerEffects=JSON.stringify(this.effects);localStorage.powerShards=this.powerShards};this.load=function(){if(null!=localStorage.playerSaved){this.level=parseInt(localStorage.playerLevel);this.health=
parseFloat(localStorage.playerHealth);null==localStorage.version&&(this.chosenLevelUpBonuses.health=parseFloat(localStorage.playerBaseHealthStatBonus),this.chosenLevelUpBonuses.hp5=parseFloat(localStorage.playerBaseHp5StatBonus),this.chosenLevelUpBonuses.damageBonus=parseFloat(localStorage.playerBaseDamageBonusStatBonus),this.chosenLevelUpBonuses.armour=parseFloat(localStorage.playerBaseArmourStatBonus),this.chosenLevelUpBonuses.strength=parseFloat(localStorage.playerBaseStrengthStatBonus),this.chosenLevelUpBonuses.stamina=
parseFloat(localStorage.playerBaseStaminaStatBonus),this.chosenLevelUpBonuses.agility=parseFloat(localStorage.playerBaseAgilityStatBonus),this.chosenLevelUpBonuses.critChance=parseFloat(localStorage.playerBaseCritChanceStatBonus),this.chosenLevelUpBonuses.critDamage=parseFloat(localStorage.playerBaseCritDamageStatBonus),this.chosenLevelUpBonuses.itemRarity=parseFloat(localStorage.playerBaseItemRarityStatBonus),this.chosenLevelUpBonuses.goldGain=parseFloat(localStorage.playerBaseGoldGainStatBonus),
this.chosenLevelUpBonuses.experienceGain=parseFloat(localStorage.playerBaseExperienceGainStatBonus),this.baseItemBonuses.health=parseInt(localStorage.playerBaseHealthFromItems),this.baseItemBonuses.hp5=parseInt(localStorage.playerBaseHp5FromItems),this.baseItemBonuses.minDamage=parseInt(localStorage.playerBaseMinDamageFromItems),this.baseItemBonuses.maxDamage=parseInt(localStorage.playerBaseMaxDamageFromItems),this.baseItemBonuses.damageBonus=parseFloat(localStorage.playerBaseDamageBonusFromItems),
this.baseItemBonuses.armour=parseFloat(localStorage.playerBaseArmourFromItems),this.baseItemBonuses.strength=parseInt(localStorage.playerBaseStrengthFromItems),this.baseItemBonuses.stamina=parseInt(localStorage.playerBaseStaminaFromItems),this.baseItemBonuses.agility=parseInt(localStorage.playerBaseAgilityFromItems),this.baseItemBonuses.critChance=parseFloat(localStorage.playerBaseCritChanceFromItems),this.baseItemBonuses.critDamage=parseFloat(localStorage.playerBaseCritDamageFromItems),this.baseItemBonuses.itemRarity=
parseFloat(localStorage.playerBaseItemRarityFromItems),this.baseItemBonuses.goldGain=parseFloat(localStorage.playerBaseGoldGainFromItems),this.baseItemBonuses.experienceGain=parseFloat(localStorage.playerBaseExperienceGainFromItems));for(var a=1;a<this.level;a++)this.levelUpBonuses.health+=Math.floor(this.baseLevelUpBonuses.health*Math.pow(1.01,a)),this.levelUpBonuses.hp5+=Math.floor(this.baseLevelUpBonuses.hp5*Math.pow(1.01,a));this.gold=parseFloat(localStorage.playerGold);this.level=parseInt(localStorage.playerLevel);
this.experience=parseFloat(localStorage.playerExperience);this.experienceRequired=Math.ceil(Sigma(2*this.level)*Math.pow(1.05,this.level)+this.baseExperienceRequired);this.skillPointsSpent=parseInt(localStorage.playerSkillPointsSpent);this.skillPoints=parseInt(localStorage.playerSkillPoints);this.abilities.load();this.changeAttack(localStorage.attackType);if(null!=localStorage.version){this.chosenLevelUpBonuses=JSON.parse(localStorage.chosenLevelUpBonuses);this.baseItemBonuses=JSON.parse(localStorage.baseItemBonuses);
this.changeAttack(localStorage.attackType);var b=JSON.parse(localStorage.playerEffects);if(null!=b&&0<b.length)for(a=0;a<b.length;a++)this.effects.push(new Effect(b[a].type,b[a].chance,b[a].value))}null!=localStorage.powerShards&&(this.powerShards=parseInt(localStorage.powerShards))}null!=localStorage.playerAlive&&(this.alive=JSON.parse(localStorage.playerAlive))}}AbilityName={REND:"REND",REJUVENATING_STRIKES:"REJUVENATING_STRIKES",ICE_BLADE:"ICE_BLADE",FIRE_BLADE:"FIRE_BLADE"};
function Abilities(){this.baseRendLevel=0;this.getRendLevel=function(){for(var a=this.baseRendLevel,b=legacyGame.player.getEffectsOfType(EffectType.WOUNDING),c=0;c<b.length;c++)a+=b[c].value;return a};this.rendDuration=5;this.getRendDamage=function(a){return Math.ceil(legacyGame.player.getAverageDamage()/17+legacyGame.player.level/1.5)*(this.getRendLevel()+a)};this.baseRejuvenatingStrikesLevel=0;this.getRejuvenatingStrikesLevel=function(){for(var a=this.baseRejuvenatingStrikesLevel,b=legacyGame.player.getEffectsOfType(EffectType.CURING),
c=0;c<b.length;c++)a+=b[c].value;return a};this.getRejuvenatingStrikesHealAmount=function(a){return Math.ceil(legacyGame.player.getAverageDamage()/54+legacyGame.player.level/2)*(this.getRejuvenatingStrikesLevel()+a)};this.baseIceBladeLevel=0;this.getIceBladeLevel=function(){for(var a=this.baseIceBladeLevel,b=legacyGame.player.getEffectsOfType(EffectType.FROST_SHARDS),c=0;c<b.length;c++)a+=b[c].value;return a};this.iceBladeChillDuration=5;this.getIceBladeDamage=function(a){return Math.ceil(legacyGame.player.getAverageDamage()/
12+legacyGame.player.level)*(this.getIceBladeLevel()+a)};this.baseFireBladeLevel=0;this.getFireBladeLevel=function(){for(var a=this.baseFireBladeLevel,b=legacyGame.player.getEffectsOfType(EffectType.FLAME_IMBUED),c=0;c<b.length;c++)a+=b[c].value;return a};this.fireBladeBurnDuration=5;this.getFireBladeDamage=function(a){return Math.ceil(legacyGame.player.getAverageDamage()/12+legacyGame.player.level)*(this.getFireBladeLevel()+a)};this.getFireBladeBurnDamage=function(a){return Math.ceil(legacyGame.player.getAverageDamage()/
9+legacyGame.player.level)*(this.getFireBladeLevel()+a)};this.save=function(){localStorage.playerRendLevel=this.baseRendLevel;localStorage.playerRejuvenatingStrikesLevel=this.baseRejuvenatingStrikesLevel;localStorage.playerIceBladeLevel=this.baseIceBladeLevel;localStorage.playerFireBladeLevel=this.baseFireBladeLevel};this.load=function(){null!=localStorage.playerRendLevel&&(this.baseRendLevel=parseInt(localStorage.playerRendLevel));null!=localStorage.playerRejuvenatingStrikesLevel&&(this.baseRejuvenatingStrikesLevel=
parseInt(localStorage.playerRejuvenatingStrikesLevel));null!=localStorage.playerIceBladeLevel&&(this.baseIceBladeLevel=parseInt(localStorage.playerIceBladeLevel));null!=localStorage.playerFireBladeLevel&&(this.baseFireBladeLevel=parseInt(localStorage.playerFireBladeLevel))}}
StatUpgradeType={DAMAGE:"DAMAGE",STRENGTH:"STRENGTH",AGILITY:"AGILITY",STAMINA:"STAMINA",HP5:"HP5",ARMOUR:"ARMOUR",EVASION:"EVASION",CRIT_DAMAGE:"CRIT_DAMAGE",ITEM_RARITY:"ITEM_RARITY",GOLD_GAIN:"GOLD_GAIN",EXPERIENCE_GAIN:"EXPERIENCE_GAIN",amount:10};function StatUpgrade(a,b){this.type=a;this.amount=b}
function StatUpgradesManager(){this.upgrades=[];this.addNewUpgrades=function(a,b,c,d,e,f){var k=[];k.push(new StatUpgrade(a,b));k.push(new StatUpgrade(c,d));k.push(new StatUpgrade(e,f));this.upgrades.push(k)};this.addRandomUpgrades=function(a){for(var b=[],c=[],d=[],e=3,f;0<=e;)f=Math.floor(Math.random()*(StatUpgradeType.amount+1)),-1==c.indexOf(f)&&(c.push(f),e--);for(e=0;e<c.length;e++)switch(c[e]){case 0:b.push(StatUpgradeType.DAMAGE);d.push(legacyGame.statGenerator.getRandomDamageBonus(a));break;
case 1:b.push(StatUpgradeType.STRENGTH);d.push(legacyGame.statGenerator.getRandomStrengthBonus(a));break;case 2:b.push(StatUpgradeType.AGILITY);d.push(legacyGame.statGenerator.getRandomAgilityBonus(a));break;case 3:b.push(StatUpgradeType.STAMINA);d.push(legacyGame.statGenerator.getRandomStaminaBonus(a));break;case 4:b.push(StatUpgradeType.ARMOUR);d.push(legacyGame.statGenerator.getRandomArmourBonus(a));break;case 5:b.push(StatUpgradeType.HP5);d.push(legacyGame.statGenerator.getRandomHp5Bonus(a));
break;case 6:b.push(StatUpgradeType.CRIT_DAMAGE);d.push(legacyGame.statGenerator.getRandomCritDamageBonus(a));break;case 7:b.push(StatUpgradeType.ITEM_RARITY);d.push(legacyGame.statGenerator.getRandomItemRarityBonus(a));break;case 8:b.push(StatUpgradeType.GOLD_GAIN);d.push(legacyGame.statGenerator.getRandomGoldGainBonus(a));break;case 9:b.push(StatUpgradeType.EXPERIENCE_GAIN),d.push(legacyGame.statGenerator.getRandomExperienceGainBonus(a))}this.addNewUpgrades(b[0],d[0],b[1],d[1],b[2],d[2])};this.save=
function(){localStorage.statUpgradesSaved=!0;localStorage.statUpgrades=JSON.stringify(this.upgrades)};this.load=function(){null!=localStorage.statUpgradesSaved&&(this.upgrades=JSON.parse(localStorage.statUpgrades))}}DebuffType={BLEED:"BLEED",CHILL:"CHILL",BURN:"BURN"};
function DebuffManager(){this.bleeding=!1;this.bleedMaxDuration=this.bleedDuration=this.bleedDamage=this.bleedStacks=0;this.chilled=!1;this.chillMaxDuration=this.chillDuration=0;this.burning=!1;this.burningMaxDuration=this.burningDuration=this.burningDamage=this.burningStacks=0}MercenaryType={FOOTMAN:"FOOTMAN",CLERIC:"CLERIC",COMMANDER:"COMMANDER",MAGE:"MAGE",ASSASSIN:"ASSASSIN",WARLOCK:"WARLOCK"};function mercenary(a){this.type=a}
function mercenaryManager(){var a=0;this.baseFootmanGps=.1;this.baseClericGps=.94;this.baseCommanderGps=8.8;this.baseMageGps=83;this.baseAssassinGps=780;this.baseWarlockGps=7339;this.footmanGps=this.baseFootmanGps;this.clericGps=this.baseClericGps;this.commanderGps=this.baseCommanderGps;this.mageGps=this.baseMageGps;this.assassinGps=this.baseAssassinGps;this.warlockGps=this.baseWarlockGps;this.baseWarlockCritDamageBonus=this.baseAssassinEvasionPercentBonus=this.baseMageDamagePercentBonus=this.baseCommanderHealthPercentBonus=
this.baseClericHp5PercentBonus=5;this.warlockCritDamageUpgradeValue=this.assassinEvasionPercentUpgradeValue=this.mageDamagePercentUpgradeValue=this.commanderHealthPercentUpgradeValue=this.clericHp5PercentUpgradeValue=2.5;this.baseFootmanPrice=10;this.baseClericPrice=200;this.baseCommanderPrice=4E3;this.baseMagePrice=8E4;this.baseAssassinPrice=16E5;this.baseWarlockPrice=32E6;this.footmanPrice=this.baseFootmanPrice;this.footmenOwned=0;this.clericPrice=this.baseClericPrice;this.clericsOwned=0;this.commanderPrice=
this.baseCommanderPrice;this.commandersOwned=0;this.magePrice=this.baseMagePrice;this.magesOwned=0;this.assassinPrice=this.baseAssassinPrice;this.assassinsOwned=0;this.warlockPrice=this.baseWarlockPrice;this.warlocksOwned=0;this.deathGpsReductionAmount=50;this.deathGpsReductionDuration=60;this.gpsReduction=this.gpsReductionTimeRemaining=0;this.mercenaries=[];this.initialize=function(){document.getElementById("footmanCost").innerHTML=this.footmanPrice.formatMoney(0);document.getElementById("clericCost").innerHTML=
this.clericPrice.formatMoney(0);document.getElementById("commanderCost").innerHTML=this.commanderPrice.formatMoney(0);document.getElementById("mageCost").innerHTML=this.magePrice.formatMoney(0);document.getElementById("assassinCost").innerHTML=this.assassinPrice.formatMoney(0);document.getElementById("warlockCost").innerHTML=this.warlockPrice.formatMoney(0)};this.addMercenary=function(a){switch(a){case MercenaryType.FOOTMAN:this.mercenaries.push(new mercenary(MercenaryType.FOOTMAN));break;case MercenaryType.CLERIC:this.mercenaries.push(new mercenary(MercenaryType.CLERIC));
break;case MercenaryType.COMMANDER:this.mercenaries.push(new mercenary(MercenaryType.COMMANDER));break;case MercenaryType.MAGE:this.mercenaries.push(new mercenary(MercenaryType.MAGE));break;case MercenaryType.ASSASSIN:this.mercenaries.push(new mercenary(MercenaryType.ASSASSIN));break;case MercenaryType.WARLOCK:this.mercenaries.push(new mercenary(MercenaryType.WARLOCK))}};this.getClericHp5PercentBonus=function(){return this.baseClericHp5PercentBonus+this.clericHp5PercentUpgradeValue*legacyGame.upgradeManager.clericSpecialUpgradesPurchased};
this.getCommanderHealthPercentBonus=function(){return this.baseCommanderHealthPercentBonus+this.commanderHealthPercentUpgradeValue*legacyGame.upgradeManager.commanderSpecialUpgradesPurchased};this.getMageDamagePercentBonus=function(){return this.baseMageDamagePercentBonus+this.mageDamagePercentUpgradeValue*legacyGame.upgradeManager.mageSpecialUpgradesPurchased};this.getAssassinEvasionPercentBonus=function(){return this.baseAssassinEvasionPercentBonus+this.assassinEvasionPercentUpgradeValue*legacyGame.upgradeManager.assassinSpecialUpgradesPurchased};
this.getWarlockCritDamageBonus=function(){return this.baseWarlockCritDamageBonus+this.warlockCritDamageUpgradeValue*legacyGame.upgradeManager.warlockSpecialUpgradesPurchased};this.getMercenaryBaseGps=function(a){switch(a){case MercenaryType.FOOTMAN:return this.baseFootmanGps*Math.pow(2,legacyGame.upgradeManager.footmanUpgradesPurchased);case MercenaryType.CLERIC:return this.baseClericGps*Math.pow(2,legacyGame.upgradeManager.clericUpgradesPurchased);case MercenaryType.COMMANDER:return this.baseCommanderGps*
Math.pow(2,legacyGame.upgradeManager.commanderUpgradesPurchased);case MercenaryType.MAGE:return this.baseMageGps*Math.pow(2,legacyGame.upgradeManager.mageUpgradesPurchased);case MercenaryType.ASSASSIN:return this.baseAssassinGps*Math.pow(2,legacyGame.upgradeManager.assassinUpgradesPurchased);case MercenaryType.WARLOCK:return this.baseWarlockGps*Math.pow(2,legacyGame.upgradeManager.warlockUpgradesPurchased)}};this.getMercenariesGps=function(a){switch(a){case MercenaryType.FOOTMAN:return this.getMercenaryBaseGps(a)*
(legacyGame.player.getGoldGain()/100+1)*((100-this.gpsReduction)/100)*legacyGame.player.buffs.getGoldMultiplier();case MercenaryType.CLERIC:return this.getMercenaryBaseGps(a)*(legacyGame.player.getGoldGain()/100+1)*((100-this.gpsReduction)/100)*legacyGame.player.buffs.getGoldMultiplier();case MercenaryType.COMMANDER:return this.getMercenaryBaseGps(a)*(legacyGame.player.getGoldGain()/100+1)*((100-this.gpsReduction)/100)*legacyGame.player.buffs.getGoldMultiplier();case MercenaryType.MAGE:return this.getMercenaryBaseGps(a)*
(legacyGame.player.getGoldGain()/100+1)*((100-this.gpsReduction)/100)*legacyGame.player.buffs.getGoldMultiplier();case MercenaryType.ASSASSIN:return this.getMercenaryBaseGps(a)*(legacyGame.player.getGoldGain()/100+1)*((100-this.gpsReduction)/100)*legacyGame.player.buffs.getGoldMultiplier();case MercenaryType.WARLOCK:return this.getMercenaryBaseGps(a)*(legacyGame.player.getGoldGain()/100+1)*((100-this.gpsReduction)/100)*legacyGame.player.buffs.getGoldMultiplier()}};this.getGps=function(){for(var a=
0,c=0,d=0;d<this.mercenaries.length;d++)c=0,c+=this.getMercenariesGps(this.mercenaries[d].type),a+=c;return a.formatMoney(2)};this.update=function(b){0<this.gpsReduction&&(this.gpsReductionTimeRemaining-=b,0>=this.gpsReductionTimeRemaining&&(this.gpsReduction=0));a+=b;if(100<=a){for(b=0;100<=a;)a-=100,b++;for(var c=0;c<this.mercenaries.length;c++){var d=this.getMercenariesGps(this.mercenaries[c].type)/1E3*100*b;game.gainGold(d,!1,!0);legacyGame.stats.goldFromMercenaries+=legacyGame.player.lastGoldGained}}};
this.purchaseMercenary=function(a){var c;switch(a){case MercenaryType.FOOTMAN:c=this.footmanPrice;break;case MercenaryType.CLERIC:c=this.clericPrice;break;case MercenaryType.COMMANDER:c=this.commanderPrice;break;case MercenaryType.MAGE:c=this.magePrice;break;case MercenaryType.ASSASSIN:c=this.assassinPrice;break;case MercenaryType.WARLOCK:c=this.warlockPrice}if(legacyGame.player.gold>=c){legacyGame.player.gold-=c;this.addMercenary(a);switch(a){case MercenaryType.FOOTMAN:this.footmenOwned++;break;
case MercenaryType.CLERIC:this.clericsOwned++;break;case MercenaryType.COMMANDER:this.commandersOwned++;break;case MercenaryType.MAGE:this.magesOwned++;break;case MercenaryType.ASSASSIN:this.assassinsOwned++;break;case MercenaryType.WARLOCK:this.warlocksOwned++}switch(a){case MercenaryType.FOOTMAN:this.footmanPrice=Math.floor(this.baseFootmanPrice*Math.pow(1.15,this.footmenOwned));break;case MercenaryType.CLERIC:this.clericPrice=Math.floor(this.baseClericPrice*Math.pow(1.15,this.clericsOwned));break;
case MercenaryType.COMMANDER:this.commanderPrice=Math.floor(this.baseCommanderPrice*Math.pow(1.15,this.commandersOwned));break;case MercenaryType.MAGE:this.magePrice=Math.floor(this.baseMagePrice*Math.pow(1.15,this.magesOwned));break;case MercenaryType.ASSASSIN:this.assassinPrice=Math.floor(this.baseAssassinPrice*Math.pow(1.15,this.assassinsOwned));break;case MercenaryType.WARLOCK:this.warlockPrice=Math.floor(this.baseWarlockPrice*Math.pow(1.15,this.warlocksOwned))}switch(a){case MercenaryType.FOOTMAN:document.getElementById("footmanCost").innerHTML=
this.footmanPrice.formatMoney(0);document.getElementById("footmenOwned").innerHTML=this.footmenOwned;break;case MercenaryType.CLERIC:document.getElementById("clericCost").innerHTML=this.clericPrice.formatMoney(0);document.getElementById("clericsOwned").innerHTML=this.clericsOwned;break;case MercenaryType.COMMANDER:document.getElementById("commanderCost").innerHTML=this.commanderPrice.formatMoney(0);document.getElementById("commandersOwned").innerHTML=this.commandersOwned;break;case MercenaryType.MAGE:document.getElementById("mageCost").innerHTML=
this.magePrice.formatMoney(0);document.getElementById("magesOwned").innerHTML=this.magesOwned;break;case MercenaryType.ASSASSIN:document.getElementById("assassinCost").innerHTML=this.assassinPrice.formatMoney(0);document.getElementById("assassinsOwned").innerHTML=this.assassinsOwned;break;case MercenaryType.WARLOCK:document.getElementById("warlockCost").innerHTML=this.warlockPrice.formatMoney(0),document.getElementById("warlocksOwned").innerHTML=this.warlocksOwned}}};this.addGpsReduction=function(a,
c){this.gpsReduction=a;this.gpsReductionTimeRemaining=1E3*c};this.save=function(){localStorage.mercenaryManagerSaved=!0;localStorage.footmenOwned=this.footmenOwned;localStorage.clericsOwned=this.clericsOwned;localStorage.commandersOwned=this.commandersOwned;localStorage.magesOwned=this.magesOwned;localStorage.assassinsOwned=this.assassinsOwned;localStorage.warlocksOwned=this.warlocksOwned;localStorage.mercenaries=JSON.stringify(this.mercenaries)};this.load=function(){if(null!=localStorage.mercenaryManagerSaved){this.footmenOwned=
parseInt(localStorage.footmenOwned);this.clericsOwned=parseInt(localStorage.clericsOwned);this.commandersOwned=parseInt(localStorage.commandersOwned);this.magesOwned=parseInt(localStorage.magesOwned);this.assassinsOwned=null==localStorage.version?parseInt(localStorage.thiefsOwned):parseInt(localStorage.assassinsOwned);this.warlocksOwned=parseInt(localStorage.warlocksOwned);this.footmanPrice=Math.floor(this.baseFootmanPrice*Math.pow(1.15,this.footmenOwned));this.clericPrice=Math.floor(this.baseClericPrice*
Math.pow(1.15,this.clericsOwned));this.commanderPrice=Math.floor(this.baseCommanderPrice*Math.pow(1.15,this.commandersOwned));this.magePrice=Math.floor(this.baseMagePrice*Math.pow(1.15,this.magesOwned));this.assassinPrice=Math.floor(this.baseAssassinPrice*Math.pow(1.15,this.assassinsOwned));this.warlockPrice=Math.floor(this.baseWarlockPrice*Math.pow(1.15,this.warlocksOwned));this.mercenaries=JSON.parse(localStorage.mercenaries);for(var a=0;a<this.mercenaries.length;a++)this.mercenaries[a].type==MercenaryType.THIEF&&
(this.mercenaries[a].type=MercenaryType.ASSASSIN);document.getElementById("footmanCost").innerHTML=this.footmanPrice.formatMoney(0);document.getElementById("footmenOwned").innerHTML=this.footmenOwned;document.getElementById("clericCost").innerHTML=this.clericPrice.formatMoney(0);document.getElementById("clericsOwned").innerHTML=this.clericsOwned;document.getElementById("commanderCost").innerHTML=this.commanderPrice.formatMoney(0);document.getElementById("commandersOwned").innerHTML=this.commandersOwned;
document.getElementById("mageCost").innerHTML=this.magePrice.formatMoney(0);document.getElementById("magesOwned").innerHTML=this.magesOwned;document.getElementById("assassinCost").innerHTML=this.assassinPrice.formatMoney(0);document.getElementById("assassinsOwned").innerHTML=this.assassinsOwned;document.getElementById("warlockCost").innerHTML=this.warlockPrice.formatMoney(0);document.getElementById("warlocksOwned").innerHTML=this.warlocksOwned}}}
function Equipment(){this.slots=[];for(var a=0;10>a;a++)this.slots[a]=null;this.helm=function(){return this.slots[0]};this.shoulders=function(){return this.slots[1]};this.chest=function(){return this.slots[2]};this.legs=function(){return this.slots[3]};this.weapon=function(){return this.slots[4]};this.gloves=function(){return this.slots[5]};this.boots=function(){return this.slots[6]};this.trinket1=function(){return this.slots[7]};this.trinket2=function(){return this.slots[8]};this.off_hand=function(){return this.slots[9]};
this.equipItem=function(a,c){if(null!=a){var d=!1;if(a.type==ItemType.HELM||a.type==ItemType.SHOULDERS||a.type==ItemType.CHEST||a.type==ItemType.LEGS||a.type==ItemType.WEAPON||a.type==ItemType.GLOVES||a.type==ItemType.BOOTS||a.type==ItemType.TRINKET||a.type==ItemType.TRINKET||a.type==ItemType.OFF_HAND)d=!0;var e=0;switch(a.type){case ItemType.HELM:e=0;break;case ItemType.SHOULDERS:e=1;break;case ItemType.CHEST:e=2;break;case ItemType.LEGS:e=3;break;case ItemType.WEAPON:e=4;break;case ItemType.GLOVES:e=
5;break;case ItemType.BOOTS:e=6;break;case ItemType.TRINKET:e=null==this.slots[7]?7:null==this.slots[8]?8:7;break;case ItemType.OFF_HAND:e=9}if(d)if(null==this.slots[e]?(this.slots[e]=a,legacyGame.inventory.removeItem(c),legacyGame.player.gainItemsStats(a)):(d=this.slots[e],this.slots[e]=a,legacyGame.player.gainItemsStats(a),legacyGame.inventory.addItemToSlot(d,c),legacyGame.player.loseItemsStats(d)),null!=legacyGame.inventory.slots[c]){a=legacyGame.inventory.slots[c];d=-1;e=!1;switch(a.type){case ItemType.HELM:null!=
legacyGame.equipment.helm()&&(d=0);break;case ItemType.SHOULDERS:null!=legacyGame.equipment.shoulders()&&(d=1);break;case ItemType.CHEST:null!=legacyGame.equipment.chest()&&(d=2);break;case ItemType.LEGS:null!=legacyGame.equipment.legs()&&(d=3);break;case ItemType.WEAPON:null!=legacyGame.equipment.weapon()&&(d=4);break;case ItemType.GLOVES:null!=legacyGame.equipment.gloves()&&(d=5);break;case ItemType.BOOTS:null!=legacyGame.equipment.boots()&&(d=6);break;case ItemType.TRINKET:if(null!=legacyGame.equipment.trinket1()||
null!=legacyGame.equipment.trinket2())d=7,null!=legacyGame.equipment.trinket1()&&null!=legacyGame.equipment.trinket2()&&(e=!0);break;case ItemType.OFF_HAND:null!=legacyGame.equipment.off_hand()&&(d=9)}d=legacyGame.equipment.slots[d];if(e)var f=legacyGame.equipment.trinket2();e=document.getElementById("inventoryItem"+(c+1)).getBoundingClientRect();legacyGame.tooltipManager.displayItemTooltip(a,d,f,e.left,e.top,!0)}else $("#itemTooltip").hide(),$("#itemCompareTooltip").hide(),$("#itemCompareTooltip2").hide()}};
this.equipSecondTrinket=function(a,c){if(a.type==ItemType.TRINKET)if(this.equipItemInSlot(a,8,c),null!=legacyGame.inventory.slots[c]){a=legacyGame.inventory.slots[c];var d=-1,e=!1;switch(a.type){case ItemType.HELM:null!=legacyGame.equipment.helm()&&(d=0);break;case ItemType.SHOULDERS:null!=legacyGame.equipment.shoulders()&&(d=1);break;case ItemType.CHEST:null!=legacyGame.equipment.chest()&&(d=2);break;case ItemType.LEGS:null!=legacyGame.equipment.legs()&&(d=3);break;case ItemType.WEAPON:null!=legacyGame.equipment.weapon()&&
(d=4);break;case ItemType.GLOVES:null!=legacyGame.equipment.gloves()&&(d=5);break;case ItemType.BOOTS:null!=legacyGame.equipment.boots()&&(d=6);break;case ItemType.TRINKET:if(null!=legacyGame.equipment.trinket1()||null!=legacyGame.equipment.trinket2())d=7,null!=legacyGame.equipment.trinket1()&&null!=legacyGame.equipment.trinket2()&&(e=!0);break;case ItemType.OFF_HAND:null!=legacyGame.equipment.off_hand()&&(d=9)}d=legacyGame.equipment.slots[d];if(e)var f=legacyGame.equipment.trinket2();e=document.getElementById("inventoryItem"+
(c+1)).getBoundingClientRect();legacyGame.tooltipManager.displayItemTooltip(a,d,f,e.left,e.top,!0)}else $("#itemTooltip").hide(),$("#itemCompareTooltip").hide(),$("#itemCompareTooltip2").hide()};this.equipItemInSlot=function(a,c,d){var e=!1;switch(c){case 0:a.type==ItemType.HELM&&(e=!0);break;case 1:a.type==ItemType.SHOULDERS&&(e=!0);break;case 2:a.type==ItemType.CHEST&&(e=!0);break;case 3:a.type==ItemType.LEGS&&(e=!0);break;case 4:a.type==ItemType.WEAPON&&(e=!0);break;case 5:a.type==ItemType.GLOVES&&
(e=!0);break;case 6:a.type==ItemType.BOOTS&&(e=!0);break;case 7:a.type==ItemType.TRINKET&&(e=!0);break;case 8:a.type==ItemType.TRINKET&&(e=!0);break;case 9:a.type==ItemType.OFF_HAND&&(e=!0)}e&&(null==this.slots[c]?(this.slots[c]=a,legacyGame.inventory.removeItem(d),legacyGame.player.gainItemsStats(a)):(e=this.slots[c],this.slots[c]=a,legacyGame.player.gainItemsStats(a),legacyGame.inventory.addItemToSlot(e,d),legacyGame.player.loseItemsStats(e)))};this.removeItem=function(a){legacyGame.player.loseItemsStats(this.slots[a]);
this.slots[a]=null};this.unequipItem=function(a){for(var c=-1,d=0;d<legacyGame.inventory.slots.length;d++)if(null==legacyGame.inventory.slots[d]){c=d;break}-1!=c&&(legacyGame.inventory.addItemToSlot(this.slots[a],c),this.removeItem(a))};this.unequipItemToSlot=function(a,c){var d=legacyGame.inventory.slots[c];if(null==d)legacyGame.inventory.addItemToSlot(this.slots[a],c),this.removeItem(a);else if(this.slots[a].type==d.type){var e=this.slots[a];this.slots[a]=d;legacyGame.player.gainItemsStats(d);legacyGame.inventory.addItemToSlot(e,
c);legacyGame.player.loseItemsStats(e)}};this.swapTrinkets=function(){var a=this.slots[7];this.slots[7]=this.slots[8];this.slots[8]=a};this.save=function(){localStorage.equipmentSaved=!0;localStorage.equipmentSlots=JSON.stringify(this.slots)};this.load=function(){if(null!=localStorage.equipmentSaved){this.slots=JSON.parse(localStorage.equipmentSlots);for(var a=0;a<this.slots.length;a++)if(null!=this.slots[a]){if(null!=this.slots[a].effects)for(var c=0;c<this.slots[a].effects.length;c++)this.slots[a].effects[c]=
new Effect(this.slots[a].effects[c].type,this.slots[a].effects[c].chance,this.slots[a].effects[c].value);else this.slots[a].effects=[];null==this.slots[a].evasion&&(this.slots[a].evasion=0)}}}}
function Inventory(){this.slots=[];this.maxSlots=25;for(var a=0;a<this.maxSlots;a++)this.slots[a]=null;this.lootItem=function(a){for(var c=0;c<this.maxSlots;c++)if(null==this.slots[c]){this.slots[c]=a;legacyGame.stats.itemsLooted++;break}};this.swapItems=function(a,c){var d=this.slots[a];this.slots[a]=this.slots[c];this.slots[c]=d};this.removeItem=function(a){this.slots[a]=null};this.addItemToSlot=function(a,c){this.slots[c]=a};this.sellItem=function(a){if(null!=this.slots[a]){var c=this.slots[a].sellValue;
legacyGame.player.gold+=c;this.removeItem(a);legacyGame.stats.itemsSold++;legacyGame.stats.goldFromItems+=c}};this.sellAll=function(){for(var a=0;a<this.slots.length;a++)this.sellItem(a)};this.save=function(){localStorage.inventorySaved=!0;localStorage.inventorySlots=JSON.stringify(this.slots)};this.load=function(){if(null!=localStorage.inventorySaved){this.slots=JSON.parse(localStorage.inventorySlots);for(var a=0;a<this.slots.length;a++)if(null!=this.slots[a]){if(null!=this.slots[a].effects)for(var c=
0;c<this.slots[a].effects.length;c++)this.slots[a].effects[c]=new Effect(this.slots[a].effects[c].type,this.slots[a].effects[c].chance,this.slots[a].effects[c].value);else this.slots[a].effects=[];null==this.slots[a].evasion&&(this.slots[a].evasion=0)}}}}QuestType={KILL:"KILL",MERCENARIES:"MERCENARIES",UPGRADE:"UPGRADE"};
function Quest(a,b,c,d,e,f,k,h){this.name=a;this.description=b;this.type=c;this.typeId=d;this.typeAmount=e;this.goldReward=f;this.expReward=k;this.buffReward=h;this.killCount=this.originalKillCount=0;this.complete=!1;this.displayId=legacyGame.questsManager.quests.length+1;this.update=function(){switch(this.type){case QuestType.KILL:this.killCount>=this.typeAmount&&(this.complete=!0);break;case QuestType.MERCENARIES:switch(this.typeId){case 0:legacyGame.mercenaryManager.footmenOwned>=this.typeAmount&&
(this.complete=!0);break;case 1:legacyGame.mercenaryManager.clericsOwned>=this.typeAmount&&(this.complete=!0);break;case 2:legacyGame.mercenaryManager.commandersOwned>=this.typeAmount&&(this.complete=!0);break;case 3:legacyGame.mercenaryManager.magesOwned>=this.typeAmount&&(this.complete=!0);break;case 4:legacyGame.mercenaryManager.assassinsOwned>=this.typeAmount&&(this.complete=!0);break;case 5:legacyGame.mercenaryManager.warlocksOwned>=this.typeAmount&&(this.complete=!0)}break;case QuestType.UPGRADE:legacyGame.upgradeManager.upgrades[this.typeId].purchased&&
(this.complete=!0)}};this.grantReward=function(){game.gainGold(this.goldReward,!1);legacyGame.stats.goldFromQuests+=legacyGame.player.lastGoldGained;game.gainExperience(this.expReward,!1);legacyGame.stats.experienceFromQuests+=legacyGame.player.lastExperienceGained;null!=this.buffReward&&legacyGame.player.buffs.addBuff(this.buffReward)}}
function QuestsManager(){this.quests=[];this.selectedQuest=0;this.questsButtonGlowing=!1;this.addQuest=function(a){this.quests.push(a);legacyGame.displayAlert("New quest received!");this.glowQuestsButton();var b=document.createElement("div");b.id="questName"+a.displayId;b.className="questName";var c=a.displayId-1;b.onmousedown=function(){questNameClick(c)};b.innerHTML=a.name;document.getElementById("questNamesArea").appendChild(b);$("#questNamesArea").show();$("#questTextArea").show()};this.update=
function(){for(var a=this.quests.length-1;0<=a;a--)this.quests[a].update(),this.quests[a].complete&&(this.quests[a].grantReward(),this.removeQuest(a),legacyGame.stats.questsCompleted++)};this.stopGlowingQuestsButton=function(){this.questsButtonGlowing=!1;$("#questsWindowButtonGlow").stop(!0);$("#questsWindowButtonGlow").css("opacity",0);$("#questsWindowButtonGlow").css("background",'url("includes/images/windowButtons.png") 78px 195px')};this.glowQuestsButton=function b(){this.questsButtonGlowing=
!0;$("#questsWindowButtonGlow").animate({opacity:"+=0.5"},400);$("#questsWindowButtonGlow").animate({opacity:"-=0.5"},400,function(){b()})};this.updateKillCounts=function(b){for(var c=0;c<this.quests.length;c++)this.quests[c].type==QuestType.KILL&&this.quests[c].typeId==b&&this.quests[c].killCount++};this.removeQuest=function(b){this.quests.splice(b,1);for(var c=b;c<this.quests.length;c++)this.quests[c].displayId--,document.getElementById("questName"+(c+1)).innerHTML=this.quests[c].name;currentElement=
document.getElementById("questName"+(this.quests.length+1));currentElement.parentNode.removeChild(currentElement);this.selectedQuest==b&&(this.selectedQuest=0,$("#questTextArea").hide())};this.getSelectedQuest=function(){return 0<=this.quests.length?this.quests[this.selectedQuest]:null};this.save=function(){localStorage.questsManagerSaved=!0;for(var b=[],c=[],d=[],e=[],f=[],k=[],h=[],g=[],l=0;l<this.quests.length;l++)b.push(this.quests[l].name),c.push(this.quests[l].description),d.push(this.quests[l].type),
e.push(this.quests[l].typeId),f.push(this.quests[l].typeAmount),k.push(this.quests[l].goldReward),h.push(this.quests[l].expReward),g.push(this.quests[l].buffReward);localStorage.setItem("questNames",JSON.stringify(b));localStorage.setItem("questDescriptions",JSON.stringify(c));localStorage.setItem("questTypes",JSON.stringify(d));localStorage.setItem("questTypeIds",JSON.stringify(e));localStorage.setItem("questTypeAmounts",JSON.stringify(f));localStorage.setItem("questGoldRewards",JSON.stringify(k));
localStorage.setItem("questExpRewards",JSON.stringify(h));localStorage.setItem("questBuffRewards",JSON.stringify(g))};this.load=function(){if(null!=localStorage.questsManagerSaved)for(var b=JSON.parse(localStorage.getItem("questNames")),c=JSON.parse(localStorage.getItem("questDescriptions")),d=JSON.parse(localStorage.getItem("questTypes")),e=JSON.parse(localStorage.getItem("questTypeIds")),f=JSON.parse(localStorage.getItem("questTypeAmounts")),k=JSON.parse(localStorage.getItem("questGoldRewards")),
h=JSON.parse(localStorage.getItem("questExpRewards")),g=(JSON.parse(localStorage.getItem("questBuffRewards")),0);g<b.length;g++)this.addQuest(new Quest(b[g],c[g],d[g],e[g],f[g],k[g],h[g],null))}}BuffType={DAMAGE:"DAMAGE",GOLD:"GOLD",EXPERIENCE:"EXPERIENCE"};function Buff(a,b,c,d,e,f){this.id=null;this.name=a;this.type=b;this.multiplier=c;this.currentDuration=1E3*d;this.maxDuration=1E3*d;this.leftPos=e;this.topPos=f}
function BuffManager(){this.buffs=[];this.addBuff=function(a){a.id=this.buffs.length+1;this.buffs.push(a);legacyGame.displayAlert(a.name);var b=document.createElement("div");b.id="buffContainer"+a.id;b.className="buffContainer";document.getElementById("buffsArea").appendChild(b);var c=document.createElement("div");c.id="buffIcon"+a.id;c.className="buffIcon";c.style.background='url("includes/images/buffIcons.png") '+a.leftPos+"px "+a.topPos+"px";b.appendChild(c);c=document.createElement("div");c.id=
"buffBar"+a.id;c.className="buffBar";c.style.width="175px";b.appendChild(c)};this.getDamageMultiplier=function(){for(var a=0,b=0;b<this.buffs.length;b++)this.buffs[b].type==BuffType.DAMAGE&&(a+=this.buffs[b].multiplier);0==a&&(a=1);return a};this.getGoldMultiplier=function(){for(var a=0,b=0;b<this.buffs.length;b++)this.buffs[b].type==BuffType.GOLD&&(a+=this.buffs[b].multiplier);0==a&&(a=1);return a};this.getExperienceMultiplier=function(){for(var a=0,b=0;b<this.buffs.length;b++)this.buffs[b].type==
BuffType.EXPERIENCE&&(a+=this.buffs[b].multiplier);0==a&&(a=1);return a};this.update=function(a){for(var b=this.buffs.length-1;0<=b;b--)if(this.buffs[b].currentDuration-=a,0>=this.buffs[b].currentDuration){var c=document.getElementById("buffContainer"+this.buffs.length);c.parentNode.removeChild(c);this.buffs.splice(b,1);for(c=b;c<this.buffs.length;c++)this.buffs[b].id--}else document.getElementById("buffBar"+(b+1)).style.width=this.buffs[b].currentDuration/this.buffs[b].maxDuration*175+"px"};this.getRandomQuestRewardBuff=
function(){switch(Math.floor(9*Math.random())){case 0:return new Buff("Damage x2",BuffType.DAMAGE,2,60,0,0);case 1:return new Buff("Damage x4",BuffType.DAMAGE,4,60,30,0);case 2:return new Buff("Damage x7",BuffType.DAMAGE,7,60,15,0);case 3:return new Buff("Gold x2",BuffType.GOLD,2,60,0,30);case 4:return new Buff("Gold x4",BuffType.GOLD,4,60,30,30);case 5:return new Buff("Gold x7",BuffType.GOLD,7,60,15,30);case 6:return new Buff("Experience x2",BuffType.EXPERIENCE,2,60,0,15);case 7:return new Buff("Experience x4",
BuffType.EXPERIENCE,4,60,30,15);case 8:return new Buff("Experience x7",BuffType.EXPERIENCE,7,60,15,15)}}}EventType={QUEST:"QUEST",amount:1};QuestNamePrefixes=["Clearing","Reaping","Destroying","Removing","Obliterating"];QuestNameSuffixes=["Threat","Swarm","Horde","Pillagers","Ravagers"];function Event(a){this.id=a;this.quest=this.type=null;this.velY=0}
function EventManager(){this.eventSpawnTimeRemaining=this.eventSpawnTime=36E5;this.events=[];this.addRandomEvent=function(a){var b=new Event(this.events.length+1);b.type=EventType.QUEST;var c=QuestNamePrefixes[Math.floor(5*Math.random())]+" the "+QuestNameSuffixes[Math.floor(5*Math.random())],d=Math.floor(6*Math.random())+7;b.quest=new Quest(c,"Kill "+d+" level "+a+" monsters.",QuestType.KILL,a,d,10*a,10*a,legacyGame.player.buffs.getRandomQuestRewardBuff());this.events.push(b);var e=document.createElement("div");
e.id="eventButton"+b.id;e.className="eventButton button";e.onmousedown=function(){clickEventButton(e,b.id)};document.getElementById("eventsArea").appendChild(e)};this.update=function(a){this.eventSpawnTimeRemaining-=a;0>=this.eventSpawnTimeRemaining&&(this.eventSpawnTimeRemaining=this.eventSpawnTime,this.addRandomEvent(legacyGame.player.level));for(var b=document.getElementsByClassName("eventButton"),c=0;c<this.events.length;c++){var d=b[c],e=25*c,f=d.parentNode.clientHeight-d.offsetTop-d.clientHeight-
a/1E3*this.events[c].velY;f<e&&(f=e,this.events[c].velY=0);d.style.bottom=f+"px";this.events[c].velY+=10}};this.startEvent=function(a,b){a.parentNode.removeChild(a);legacyGame.questsManager.addQuest(this.events[b-1].quest);this.events.splice(b-1,1);for(var c=b-1;c<this.events.length;c++)this.events[c].id--}}function clickEventButton(a,b){legacyGame.eventManager.startEvent(a,b)}
function Stats(){this.getGold=function(){return legacyGame.player.gold};this.goldEarned=0;this.startDate=new Date;this.getMercenariesOwned=function(){return legacyGame.mercenaryManager.mercenaries.length};this.getGps=function(){return legacyGame.mercenaryManager.getGps()};this.goldFromQuests=this.goldFromMercenaries=this.goldFromMonsters=0;this.getExperience=function(){return legacyGame.player.experience};this.damageTaken=this.damageDealt=this.monstersKilled=this.questsCompleted=this.goldFromItems=
this.itemsSold=this.itemsLooted=this.experienceFromQuests=this.experienceFromMonsters=this.experienceEarned=0;this.getUpgradesUnlocked=function(){for(var a=0,b=0;b<legacyGame.upgradeManager.upgrades.length;b++)!0===legacyGame.upgradeManager.upgrades[b].purchased&&a++;return a};this.update=function(){document.getElementById("statsWindowPowerShardsValue").innerHTML=legacyGame.player.powerShards.formatMoney(2);document.getElementById("statsWindowGoldValue").innerHTML=this.getGold().formatMoney(2);document.getElementById("statsWindowGoldEarnedValue").innerHTML=
this.goldEarned.formatMoney(2);document.getElementById("statsWindowStartDateValue").innerHTML=this.startDate.toDateString()+" "+this.startDate.toLocaleTimeString();document.getElementById("statsWindowMercenariesOwnedValue").innerHTML=this.getMercenariesOwned().formatMoney(0);document.getElementById("statsWindowGpsValue").innerHTML=this.getGps();document.getElementById("statsWindowGoldFromMonstersValue").innerHTML=this.goldFromMonsters.formatMoney(2);document.getElementById("statsWindowGoldFromMercenariesValue").innerHTML=
this.goldFromMercenaries.formatMoney(2);document.getElementById("statsWindowGoldFromQuestsValue").innerHTML=this.goldFromQuests.formatMoney(0);document.getElementById("statsWindowUpgradesUnlockedValue").innerHTML=this.getUpgradesUnlocked().formatMoney(0);document.getElementById("statsWindowExperienceValue").innerHTML=this.getExperience().formatMoney(2);document.getElementById("statsWindowExperienceEarnedValue").innerHTML=this.experienceEarned.formatMoney(2);document.getElementById("statsWindowExperienceFromMonstersValue").innerHTML=
this.experienceFromMonsters.formatMoney(2);document.getElementById("statsWindowExperienceFromQuestsValue").innerHTML=this.experienceFromQuests.formatMoney(0);document.getElementById("statsWindowItemsLootedValue").innerHTML=this.itemsLooted.formatMoney(0);document.getElementById("statsWindowItemsSoldValue").innerHTML=this.itemsSold.formatMoney(0);document.getElementById("statsWindowGoldFromItemsValue").innerHTML=this.goldFromItems.formatMoney(0);document.getElementById("statsWindowQuestsCompletedValue").innerHTML=
this.questsCompleted.formatMoney(0);document.getElementById("statsWindowMonstersKilledValue").innerHTML=this.monstersKilled.formatMoney(0);document.getElementById("statsWindowDamageDealtValue").innerHTML=Math.floor(this.damageDealt).formatMoney(0);document.getElementById("statsWindowDamageTakenValue").innerHTML=Math.floor(this.damageTaken).formatMoney(0)};this.save=function(){localStorage.StatsSaved=!0;localStorage.statsGoldEarned=this.goldEarned;localStorage.statsStartDate=this.startDate;localStorage.statsGoldFromMonsters=
this.goldFromMonsters;localStorage.statsGoldFromMercenaries=this.goldFromMercenaries;localStorage.statsGoldFromQuests=this.goldFromQuests;localStorage.statsExperienceEarned=this.experienceEarned;localStorage.statsExperienceFromMonsters=this.experienceFromMonsters;localStorage.statsExperienceFromQuests=this.experienceFromQuests;localStorage.statsItemsLooted=this.itemsLooted;localStorage.statsItemsSold=this.itemsSold;localStorage.statsGoldFromItems=this.goldFromItems;localStorage.statsQuestsCompleted=
this.questsCompleted;localStorage.statsMonstersKilled=this.monstersKilled;localStorage.statsDamageDealt=this.damageDealt;localStorage.statsDamageTaken=this.damageTaken};this.load=function(){null!=localStorage.StatsSaved&&(this.goldEarned=parseFloat(localStorage.statsGoldEarned),this.startDate=new Date(localStorage.statsStartDate),this.goldFromMonsters=parseFloat(localStorage.statsGoldFromMonsters),this.goldFromMercenaries=parseFloat(localStorage.statsGoldFromMercenaries),this.goldFromQuests=parseInt(localStorage.statsGoldFromQuests),
this.experienceEarned=parseFloat(localStorage.statsExperienceEarned),this.experienceFromMonsters=parseFloat(localStorage.statsExperienceFromMonsters),this.experienceFromQuests=parseInt(localStorage.statsExperienceFromQuests),this.itemsLooted=parseInt(localStorage.statsItemsLooted),this.itemsSold=parseInt(localStorage.statsItemsSold),this.goldFromItems=parseInt(localStorage.statsGoldFromItems),this.questsCompleted=parseInt(localStorage.statsQuestsCompleted),this.monstersKilled=parseInt(localStorage.statsMonstersKilled),
this.damageDealt=parseFloat(localStorage.statsDamageDealt),this.damageTaken=parseFloat(localStorage.statsDamageTaken))}}MonsterRarity={COMMON:"COMMON",RARE:"RARE",ELITE:"ELITE",BOSS:"BOSS"};
function Monster(a,b,c,d,e,f,k,h){this.name=a;this.level=b;this.rarity=c;this.maxHealth=this.health=d;this.canAttack=!0;this.damage=e;this.armour=f;this.goldWorth=k;this.experienceWorth=h;this.debuffs=new DebuffManager;this.debuffIconLeftPositionBase=325;this.debuffIconTopPosition=0;this.debuffLeftPositionIncrement=30;this.lastDamageTaken=0;this.alive=!0;this.getRandomLoot=function(){var a=new Loot;a.gold=this.goldWorth;a.item=legacyGame.itemCreator.createRandomItem(this.level,legacyGame.itemCreator.getRandomItemRarity(this.rarity));
return a};this.takeDamage=function(a,b,c){this.health-=a;this.lastDamageTaken=a;legacyGame.stats.damageDealt+=a;c&&(b?legacyGame.particleManager.createParticle(Math.round(this.lastDamageTaken),ParticleType.PLAYER_CRITICAL):legacyGame.particleManager.createParticle(Math.round(this.lastDamageTaken),ParticleType.PLAYER_DAMAGE));0>=this.health&&(this.alive=!1,legacyGame.stats.monstersKilled++);return a};this.addDebuff=function(a,b,c){switch(a){case DebuffType.BLEED:0==this.debuffs.bleeding&&($("#monsterBleedingIcon").show(),
a=this.debuffIconLeftPositionBase,this.debuffs.burning&&(a+=this.debuffLeftPositionIncrement),this.debuffs.chilled&&(a+=this.debuffLeftPositionIncrement),$("#monsterBleedingIcon").css("left",a+"px"));a=legacyGame.player.getEffectsOfType(EffectType.RUPTURE);var d=5;if(0<a.length)for(var e=0;e<a.length;e++)d+=a[e].value;this.debuffs.bleeding=!0;this.debuffs.bleedDamage=b;this.debuffs.bleedDuration=0;this.debuffs.bleedMaxDuration=c;this.debuffs.bleedStacks+=a.length+1;this.debuffs.bleedStacks>d&&(this.debuffs.bleedStacks=
d);document.getElementById("monsterBleedingStacks").innerHTML=this.debuffs.bleedStacks;break;case DebuffType.BURN:0==this.debuffs.burning&&($("#monsterBurningIcon").show(),a=this.debuffIconLeftPositionBase,this.debuffs.bleeding&&(a+=this.debuffLeftPositionIncrement),this.debuffs.chilled&&(a+=this.debuffLeftPositionIncrement),$("#monsterBurningIcon").css("left",a+"px"));this.debuffs.burning=!0;this.debuffs.burningDamage=b;this.debuffs.burningDuration=0;this.debuffs.burningMaxDuration=c;a=legacyGame.player.getEffectsOfType(EffectType.COMBUSTION);
d=0;if(0<a.length)for(e=0;e<a.length;e++)d+=a[e].value;d>this.debuffs.burningStacks&&this.debuffs.burningStacks++;0==this.debuffs.burningStacks&&(this.debuffs.burningStacks=1);document.getElementById("monsterBurningStacks").innerHTML=this.debuffs.burningStacks;break;case DebuffType.CHILL:0==this.debuffs.chilled&&($("#monsterChilledIcon").show(),a=this.debuffIconLeftPositionBase,this.debuffs.bleeding&&(a+=this.debuffLeftPositionIncrement),this.debuffs.burning&&(a+=this.debuffLeftPositionIncrement),
$("#monsterChilledIcon").css("left",a+"px")),this.debuffs.chilled=!0,this.debuffs.chillDuration=0,this.debuffs.chillMaxDuration=c}};this.updateDebuffs=function(){this.debuffs.bleeding&&(game.monsterTakeDamage(this.debuffs.bleedDamage*this.debuffs.bleedStacks,!1,!1),this.debuffs.bleedDuration++,this.debuffs.bleedDuration>=this.debuffs.bleedMaxDuration&&($("#monsterBleedingIcon").hide(),$("#monsterBurningIcon").css("left",$("#monsterBurningIcon").position().left-this.debuffLeftPositionIncrement+"px"),
$("#monsterChilledIcon").css("left",$("#monsterChilledIcon").position().left-this.debuffLeftPositionIncrement+"px"),this.debuffs.bleeding=!1,this.debuffs.bleedDamage=0,this.debuffs.bleedDuration=0,this.debuffs.bleedMaxDuration=0,this.debuffs.bleedStacks=0));this.debuffs.burning&&(game.monsterTakeDamage(this.debuffs.burningDamage*this.debuffs.burningStacks,!1,!1),this.debuffs.burningDuration++,this.debuffs.burningDuration>=this.debuffs.burningMaxDuration&&($("#monsterBurningIcon").hide(),$("#monsterBleedingIcon").css("left",
$("#monsterBleedingIcon").position().left-this.debuffLeftPositionIncrement+"px"),$("#monsterChilledIcon").css("left",$("#monsterChilledIcon").position().left-this.debuffLeftPositionIncrement+"px"),this.debuffs.burningStacks=0,this.debuffs.burningDamage=0,this.debuffs.burningDuration=0,this.debuffs.burningMaxDuration=0,this.debuffs.burning=!1));this.debuffs.chilled?(this.canAttack=this.canAttack?!1:!0,this.debuffs.chillDuration++,this.debuffs.chillDuration>=this.debuffs.chillMaxDuration&&($("#monsterChilledIcon").hide(),
$("#monsterBleedingIcon").css("left",$("#monsterBleedingIcon").position().left-this.debuffLeftPositionIncrement+"px"),$("#monsterBurningIcon").css("left",$("#monsterBurningIcon").position().left-this.debuffLeftPositionIncrement+"px"),this.debuffs.chillDuration=0,this.debuffs.chillMaxDuration=0,this.debuffs.chilled=!1)):this.canAttack=!0}}function Loot(a,b){this.gold=a;this.item=b}
function MonsterCreator(){this.names="Zombie Skeleton Goblin Spider Troll Lizardman Ogre Orc".split(" ");this.monsterBaseHealth=5;this.monsterBaseDamage=0;this.monsterBaseExperienceWorth=this.monsterBaseGoldWorth=1;this.createRandomMonster=function(a,b){var c=this.names[Math.floor(Math.random()*this.names.length)],d=this.calculateMonsterHealth(a,b),e=this.calculateMonsterDamage(a,b),f=this.calculateMonsterGoldWorth(a,b),k=this.calculateMonsterExperienceWorth(a,b);return new Monster(c,a,b,d,e,0,f,
k)};this.calculateMonsterHealth=function(a,b){var c=Sigma(a)*Math.pow(1.05,a)+this.monsterBaseHealth,c=Math.ceil(c);switch(b){case "RARE":c*=3;break;case "ELITE":c*=10;break;case "BOSS":c*=30}return c};this.calculateMonsterDamage=function(a,b){var c=Sigma(a)*Math.pow(1.01,a)/3+this.monsterBaseDamage,c=Math.ceil(c);switch(b){case "RARE":c*=2;break;case "ELITE":c*=4;break;case "BOSS":c*=8}return c};this.calculateMonsterGoldWorth=function(a,b){var c=Sigma(a)*Math.pow(1.01,a)/4+this.monsterBaseGoldWorth,
c=Math.ceil(c);switch(b){case "RARE":c*=1.5;break;case "ELITE":c*=3;break;case "BOSS":c*=6}return c};this.calculateMonsterExperienceWorth=function(a,b){var c=Sigma(a)*Math.pow(1.01,a)/5+this.monsterBaseExperienceWorth,c=Math.ceil(c);switch(b){case "RARE":c*=1.5;break;case "ELITE":c*=3;break;case "BOSS":c*=6}return c};this.calculateMonsterRarity=function(a,b){var c=.001+a/500;.1<c&&(c=.1);var d=0;10<=a&&(d=.03+a/12E3,.05<d&&(d=.05));var e=0;30<=a&&(e=.03+a/24E3,.01<e&&(e=.01));var c=c+(d+e),d=d+e,
f=Math.random();return f<=e?MonsterRarity.BOSS:f<=d?MonsterRarity.ELITE:f<=c?MonsterRarity.RARE:MonsterRarity.COMMON};this.getRarityColour=function(a){switch(a){case MonsterRarity.COMMON:return"#ffffff";case MonsterRarity.RARE:return"#00fff0";case MonsterRarity.ELITE:return"#ffd800";case MonsterRarity.BOSS:return"#ff0000"}}}
function Options(){this.displayMonsterDamageParticles=this.displayPlayerDamageParticles=this.displayExpParticles=this.displayGoldParticles=this.displaySkullParticles=!0;this.alwaysDisplayExp=this.alwaysDisplayMonsterHealth=this.alwaysDisplayPlayerHealth=!1;this.save=function(){localStorage.optionsSaved=!0;localStorage.displaySkullParticles=this.displaySkullParticles;localStorage.displayGoldParticles=this.displayGoldParticles;localStorage.displayExpParticles=this.displayExpParticles;localStorage.displayPlayerDamageParticles=
this.displayPlayerDamageParticles;localStorage.displayMonsterDamageParticles=this.displayMonsterDamageParticles;localStorage.alwaysDisplayPlayerHealth=this.alwaysDisplayPlayerHealth;localStorage.alwaysDisplayMonsterHealth=this.alwaysDisplayMonsterHealth;localStorage.alwaysDisplayExp=this.alwaysDisplayExp};this.load=function(){null!=localStorage.optionsSaved&&(this.displaySkullParticles=JSON.parse(localStorage.displaySkullParticles),this.displayGoldParticles=JSON.parse(localStorage.displayGoldParticles),
this.displayExpParticles=JSON.parse(localStorage.displayExpParticles),this.displayPlayerDamageParticles=JSON.parse(localStorage.displayPlayerDamageParticles),this.displayMonsterDamageParticles=JSON.parse(localStorage.displayMonsterDamageParticles),this.alwaysDisplayPlayerHealth=JSON.parse(localStorage.alwaysDisplayPlayerHealth),this.alwaysDisplayMonsterHealth=JSON.parse(localStorage.alwaysDisplayMonsterHealth),this.alwaysDisplayExp=JSON.parse(localStorage.alwaysDisplayExp),this.displaySkullParticles||
(document.getElementById("skullParticlesOption").innerHTML="Monster death particles: OFF"),this.displayGoldParticles||(document.getElementById("goldParticlesOption").innerHTML="Gold particles: OFF"),this.displayExpParticles||(document.getElementById("experienceParticlesOption").innerHTML="Experience particles: OFF"),this.displayPlayerDamageParticles||(document.getElementById("playerDamageParticlesOption").innerHTML="Player damage particles: OFF"),this.displayMonsterDamageParticles||(document.getElementById("monsterDamageParticlesOption").innerHTML=
"Monster damage particles: OFF"),this.alwaysDisplayPlayerHealth&&(document.getElementById("playerHealthOption").innerHTML="Always display player health: ON"),this.alwaysDisplayMonsterHealth&&(document.getElementById("monsterHealthOption").innerHTML="Always display monster health: ON",legacyGame.displayMonsterHealth=!0),this.alwaysDisplayExp&&(document.getElementById("expBarOption").innerHTML="Always display experience: ON"))}}
function skullParticlesOptionClick(){legacyGame.options.displaySkullParticles=!legacyGame.options.displaySkullParticles;legacyGame.options.displaySkullParticles?document.getElementById("skullParticlesOption").innerHTML="Monster death particles: ON":document.getElementById("skullParticlesOption").innerHTML="Monster death particles: OFF"}
function goldParticlesOptionClick(){legacyGame.options.displayGoldParticles=!legacyGame.options.displayGoldParticles;legacyGame.options.displayGoldParticles?document.getElementById("goldParticlesOption").innerHTML="Gold particles: ON":document.getElementById("goldParticlesOption").innerHTML="Gold particles: OFF"}
function experienceParticlesOptionClick(){legacyGame.options.displayExpParticles=!legacyGame.options.displayExpParticles;legacyGame.options.displayExpParticles?document.getElementById("experienceParticlesOption").innerHTML="Experience particles: ON":document.getElementById("experienceParticlesOption").innerHTML="Experience particles: OFF"}
function playerDamageParticlesOptionClick(){legacyGame.options.displayPlayerDamageParticles=!legacyGame.options.displayPlayerDamageParticles;legacyGame.options.displayPlayerDamageParticles?document.getElementById("playerDamageParticlesOption").innerHTML="Player damage particles: ON":document.getElementById("playerDamageParticlesOption").innerHTML="Player damage particles: OFF"}
function monsterDamageParticlesOptionClick(){legacyGame.options.displayMonsterDamageParticles=!legacyGame.options.displayMonsterDamageParticles;legacyGame.options.displayMonsterDamageParticles?document.getElementById("monsterDamageParticlesOption").innerHTML="Monster damage particles: ON":document.getElementById("monsterDamageParticlesOption").innerHTML="Monster damage particles: OFF"}
function playerHealthOptionClick(){legacyGame.options.alwaysDisplayPlayerHealth=!legacyGame.options.alwaysDisplayPlayerHealth;legacyGame.options.alwaysDisplayPlayerHealth?document.getElementById("playerHealthOption").innerHTML="Always display player health: ON":document.getElementById("playerHealthOption").innerHTML="Always display player health: OFF"}
function monsterHealthOptionClick(){legacyGame.options.alwaysDisplayMonsterHealth=!legacyGame.options.alwaysDisplayMonsterHealth;legacyGame.options.alwaysDisplayMonsterHealth?(document.getElementById("monsterHealthOption").innerHTML="Always display monster health: ON",legacyGame.displayMonsterHealth=!0):(document.getElementById("monsterHealthOption").innerHTML="Always display monster health: OFF",legacyGame.displayMonsterHealth=!1)}
function expBarOptionClick(){legacyGame.options.alwaysDisplayExp=!legacyGame.options.alwaysDisplayExp;legacyGame.options.alwaysDisplayExp?document.getElementById("expBarOption").innerHTML="Always display experience: ON":document.getElementById("expBarOption").innerHTML="Always display experience: OFF"}var ParticleType={SKULL:"SKULL",GOLD:"GOLD",EXP_ORB:"EXP_ORB",PLAYER_DAMAGE:"PLAYER_DAMAGE",PLAYER_CRITICAL:"PLAYER_CRITICAL",MONSTER_DAMAGE:"MONSTER_DAMAGE"};
function Particle(a,b,c,d,e,f,k,h,g,l){this.image=a;this.text=b;this.textColour=c;this.x=d;this.y=e;this.width=f;this.height=k;this.velocityX=h;this.velocityY=g;this.maxDuration=this.duration=l;this.update=function(a){this.duration-=a;var b=a/1E3*this.velocityY;this.x+=a/1E3*this.velocityX;this.y+=b};this.draw=function(){var a=document.getElementById("particleCanvas").getContext("2d");if(this.duration<=this.maxDuration/5){var b=this.duration/(this.maxDuration/5);0>b&&(b=0);a.globalAlpha=b}null!=this.image&&
a.drawImage(this.image,this.x,this.y,25,25);null!=this.text&&(a.shadowColor="black",a.lineWidth=3,a.strokeText(this.text,this.x+12,this.y+19),a.fillStyle=this.textColour,a.fillText(this.text,this.x+12,this.y+19));a.globalAlpha=1};this.expired=function(){return 0>=this.duration}}
function ParticleManager(){this.maxParticles=50;this.particles=[];this.particleSources={};this.particleSources.SKULL="includes/images/skull.png";this.particleSources.GOLD="includes/images/goldCoin.png";this.particleSources.EXP_ORB="includes/images/expOrb.png";this.particleSources.PLAYER_DAMAGE="includes/images/sword.png";this.particleSources.PLAYER_CRITICAL="includes/images/sword.png";this.initialize=function(){var a=document.getElementById("particleCanvas").getContext("2d");a.font="20px Gentium Book Basic";
a.textAlign="center"};this.createParticle=function(a,b){switch(b){case ParticleType.SKULL:if(0==legacyGame.options.displaySkullParticles)return;break;case ParticleType.GOLD:if(0==legacyGame.options.displayGoldParticles)return;break;case ParticleType.EXP_ORB:if(0==legacyGame.options.displayExpParticles)return;break;case ParticleType.PLAYER_DAMAGE:if(0==legacyGame.options.displayPlayerDamageParticles)return;break;case ParticleType.PLAYER_CRITICAL:if(0==legacyGame.options.displayPlayerDamageParticles)return;
break;case ParticleType.MONSTER_DAMAGE:if(0==legacyGame.options.displayMonsterDamageParticles)return}var c=325*Math.random()+175,d=425*Math.random()+100,e,f=null;switch(b){case ParticleType.SKULL:f=this.particleSources.SKULL;break;case ParticleType.GOLD:e="#fcd200";f=this.particleSources.GOLD;break;case ParticleType.EXP_ORB:e="#00ff00";f=this.particleSources.EXP_ORB;break;case ParticleType.PLAYER_DAMAGE:e="#ffffff";f=this.particleSources.PLAYER_DAMAGE;break;case ParticleType.PLAYER_CRITICAL:e="#fcff00";
f=this.particleSources.PLAYER_CRITICAL;break;case ParticleType.MONSTER_DAMAGE:e="#ff0000",f=this.particleSources.MONSTER_DAMAGE}var k=null;null!=a&&(k="",b==ParticleType.GOLD||b==ParticleType.EXP_ORB?k+="+":b==ParticleType.MONSTER_DAMAGE&&(k+="-"),k+=a,b==ParticleType.PLAYER_CRITICAL&&(k+="!"));var h=null;null!=f&&(h=new Image,h.src=f);document.getElementById("particleCanvas").getContext("2d");c=new Particle(h,k,e,c,d,25,25,0,-50,2E3);this.particles.push(c);this.particles.length>this.maxParticles&&
this.particles.splice(0,1)};this.update=function(a){var b;document.getElementById("particleCanvas").getContext("2d").clearRect(0,0,675,550);for(var c=this.particles.length-1;0<=c;c--)b=this.particles[c],b.update(a),b.draw(),b.expired()&&this.particles.splice(c,1)}}
var Prefixes="DAMAGE HEALTH ARMOUR CRIT_CHANCE ITEM_RARITY GOLD_GAIN".split(" "),PREFIX_AMOUNT=6,Suffixes="STRENGTH AGILITY STAMINA HP5 CRIT_DAMAGE EXPERIENCE_GAIN EVASION".split(" "),SUFFIX_AMOUNT=7,DamageNames="Heavy Honed Fine Tempered Annealed Burnished Polished Shiny Glinting Shimmering Sparkling Gleaming Dazzling Glistening Flaring Luminous Glowing Brilliant Radiant Glorious".split(" "),HealthNames="Healthy Lively Athletic Brisk Tough Fecund Bracing Uplifting Stimulating Invigorating Exhilarating Virile Stout Stalwart Sanguine Robust Rotund Spirited Potent Vigorous".split(" "),
ArmourNames="Lacquered Studded Ribbed Fortified Plated Carapaced Reinforced Strengthened Backed Banded Bolstered Braced Thickened Spiked Barbed Layered Scaled Tightened Chained Supported".split(" "),CritChanceNames="Dark;Shadow;Wilderness;Night;Bloodthirsty;Black;Cloudy;Dim;Grim;Savage;Deadly;Sharpened;Razor Sharp;Pincer;Bloody;Cruel;Dangerous;Fatal;Harmful;Lethal".split(";"),ItemRarityNames="Bandit's Pillager's Thug's Magpie's Pirate's Captain's Raider's Corsair's Filibuster's Freebooter's Marauder's Privateer's Rover's Criminal's Hooligan's Mobster's Outlaw's Robber's Crook's Forager's".split(" "),
GoldGainNames="King's Queen's Prince's Emperor's Monarch's Sultan's Baron's Caeser's Caliph's Czar's Kaiser's Khan's Magnate's Overlord's Lord's Ruler's Leader's Sovereign's Tycoon's Duke's".split(" "),StrengthNames="of the Hippo;of the Seal;of the Bear;of the Lion;of the Gorrilla;of the Goliath;of the Leviathan;of the Titan;of the Shark;of the Yeti;of the Tiger;of the Elephant;of the Beetle;of the Ancient;of the Strong;of the Rhino;of the Whale;of the Crocodile;of the Aligator;of the Tortoise".split(";"),
AgilityNames="of the Mongoose;of the Lynx;of the Fox;of the Falcon;of the Panther;of the Leopard;of the Jaguar;of the Phantasm;of the Cougar;of the Owl;of the Eagle;of the Cheetah;of the Antelope;of the Greyhound;of the Wolf;of the Kangaroo;of the Horse;of the Coyote;of the Zebra;of the Hyena".split(";"),StaminaNames="of the Guardian;of the Protector;of the Defender;of the Keeper;of the Overseer;of the Paladin;of the Preserver;of the Sentinel;of the Warden;of the Crusader;of the Patron;of the Savior;of the Liberator;of the Zealot;of the Safeguard;of the Monk;of the Vigilante;of the Bodyguard;of the Hero;of the Supporter".split(";"),
Hp5Names="of Regeneration;of Restoration;of Healing;of Rebirth;of Resurrection;of Reclamation;of Growth;of Nourishment;of Warding;of Rejuvenation;of Revitalisation;of Recovery;of Renewal;of Revival;of Curing;of Resurgance;of Replenishment;of Holyness;of Prayer;of Meditation".split(";"),CritDamageNames="of the Berserker;of the Insane;of the Psychopath;of the Ravager;of the Breaker;of the Warrior;of the Warlord;of the Destructor;of the Crazy;of the Mad;of the Champion;of the Mercenary;of the Militant;of the Assailent;of the Gladiator;of the Assassin;of the Rogue;of the Guerilla;of the Destroyer;of the Hunter".split(";"),
ExperienceGainNames="of Wisdom;of Experience;of Foresight;of Intelligence;of Knowledge;of Mastery;of Evolution;of Brilliance;of Perception;of Senses;of Understanding;of Expansion;of Growth;of Progression;of Transformation;of Advancement;of Gain;of Improvement;of Success;of Development".split(";"),EvasionNames="of Dodging;of Reflexes;of Shadows;of Acrobatics;of Avoidance;of Eluding;of Swerving;of Deception;of Juking;of Reaction;of Response;of Elusion;of Escape;of Ducking;of Avoiding;of Swerving;of Trickery;of Darkness;of Blinding;of Shuffling".split(";"),
namesAmount=20,LevelOneNames="Leather Spaulders;Leather Tunic;Leather Trousers;Wooden Club;Leather Gloves;Leather Boots;Talisman".split(";");
function NameGenerator(){var a;this.getRandomDamageBonusName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return DamageNames[a]};this.getRandomHealthName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return HealthNames[a]};this.getRandomArmourBonusName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return ArmourNames[a]};this.getRandomCritChanceName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return CritChanceNames[a]};this.getRandomItemRarityName=function(){a=
Math.random()*namesAmount;a=Math.floor(a);return ItemRarityNames[a]};this.getRandomGoldGainName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return GoldGainNames[a]};this.getRandomStrengthName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return StrengthNames[a]};this.getRandomAgilityName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return AgilityNames[a]};this.getRandomStaminaName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return StaminaNames[a]};this.getRandomHp5Name=
function(){a=Math.random()*namesAmount;a=Math.floor(a);return Hp5Names[a]};this.getRandomCritDamageName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return CritDamageNames[a]};this.getRandomExperienceGainName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return ExperienceGainNames[a]};this.getRandomEvasionName=function(){a=Math.random()*namesAmount;a=Math.floor(a);return EvasionNames[a]}}
function StatGenerator(){var a;this.getRandomMinDamage=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(b*Math.pow(1.001,b));case 1:return Math.ceil(b*Math.pow(1.001,b)+b/10+1);case 2:return Math.ceil(b*Math.pow(1.001,b)+b/5+2)}};this.getRandomMaxDamage=function(a,c){return c+this.getRandomDamageBonus(a)};this.getRandomDamageBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(2*b*Math.pow(1.001,b)*.75);case 1:return Math.ceil(2*b*Math.pow(1.001,
b)*.75+b/10+1);case 2:return Math.ceil(2*b*Math.pow(1.001,b)*.75+b/5+1)}};this.getRandomStrengthBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(b*Math.pow(1.001,b)*.75);case 1:return Math.ceil(b*Math.pow(1.001,b)*.75+b/10+1);case 2:return Math.ceil(b*Math.pow(1.001,b)*.75+b/5+1)}};this.getRandomAgilityBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(b*Math.pow(1.001,b)*.75);case 1:return Math.ceil(b*Math.pow(1.001,b)*.75+b/
10+1);case 2:return Math.ceil(b*Math.pow(1.001,b)*.75+b/5+1)}};this.getRandomStaminaBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(b*Math.pow(1.001,b)*.75);case 1:return Math.ceil(b*Math.pow(1.001,b)*.75+b/10+1);case 2:return Math.ceil(b*Math.pow(1.001,b)*.75+b/5+1)}};this.getRandomHealthBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(10*b*Math.pow(1.001,b)*.75);case 1:return Math.ceil(10*b*Math.pow(1.001,b)*.75+b/10+1);
case 2:return Math.ceil(10*b*Math.pow(1.001,b)*.75+b/5+1)}};this.getRandomHp5Bonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(2*b*Math.pow(1.001,b)*.75);case 1:return Math.ceil(2*b*Math.pow(1.001,b)*.75+b/10+1);case 2:return Math.ceil(2*b*Math.pow(1.001,b)*.75+b/5+1)}};this.getRandomArmour=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(b*Math.pow(1.001,b)*.75);case 1:return Math.ceil(b*Math.pow(1.001,b)*.75+b/10+1);case 2:return Math.ceil(b*
Math.pow(1.001,b)*.75+b/5+1)}};this.getRandomArmourBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(b*Math.pow(1.001,b)*.75/5);case 1:return Math.ceil((b*Math.pow(1.001,b)*.75+b/10+1)/4);case 2:return Math.ceil((b*Math.pow(1.001,b)*.75+b/5+1)/3)}};this.getRandomCritChanceBonus=function(b){var c=0;a=3*Math.random();a=Math.floor(a);switch(a){case 0:c=parseFloat((100*(.3*b*Math.pow(1.001,b)*.75+1E-5)/100).toFixed(2));break;case 1:c=parseFloat((100*(.3*b*Math.pow(1.001,
b)*.8+1E-5)/100).toFixed(2));break;case 2:c=parseFloat((100*(.3*b*Math.pow(1.001,b)*.85+1E-5)/100).toFixed(2))}10<c&&(c=10);return c};this.getRandomCritDamageBonus=function(b){a=Math.floor(3*Math.random());switch(a){case 0:return parseFloat((100*(.2*b*Math.pow(1.001,b)*.75+1E-5)/100).toFixed(2));case 1:return parseFloat((100*(.2*b*Math.pow(1.001,b)*.8+1E-5)/100).toFixed(2));case 2:return parseFloat((100*(.2*b*Math.pow(1.001,b)*.85+1E-5)/100).toFixed(2))}};this.getRandomItemRarityBonus=function(b){a=
3*Math.random();a=Math.floor(a);switch(a){case 0:return parseFloat((b*Math.pow(1.001,b)*.75).toFixed(2));case 1:return parseFloat((b*Math.pow(1.001,b)*.75+b/10+1).toFixed(2));case 2:return parseFloat((b*Math.pow(1.001,b)*.75+b/5+1).toFixed(2))}};this.getRandomGoldGainBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return parseFloat((b*Math.pow(1.001,b)*.75).toFixed(2));case 1:return parseFloat((b*Math.pow(1.001,b)*.75+b/10+1).toFixed(2));case 2:return parseFloat((b*Math.pow(1.001,
b)*.75+b/5+1).toFixed(2))}};this.getRandomExperienceGainBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return parseFloat((b*Math.pow(1.001,b)*.75).toFixed(2));case 1:return parseFloat((b*Math.pow(1.001,b)*.75+b/10+1).toFixed(2));case 2:return parseFloat((b*Math.pow(1.001,b)*.75+b/5+1).toFixed(2))}};this.getRandomEvasionBonus=function(b){a=3*Math.random();a=Math.floor(a);switch(a){case 0:return Math.ceil(b*Math.pow(1.001,b)*.75);case 1:return Math.ceil(b*Math.pow(1.001,b)*.75+
b/10+1);case 2:return Math.ceil(b*Math.pow(1.001,b)*.75+b/5+1)}}}
var itemBonusesAmount=14,ItemRarity={COMMON:"COMMON",UNCOMMON:"UNCOMMON",RARE:"RARE",EPIC:"EPIC",LEGENDARY:"LEGENDARY",count:5},ItemType={HELM:"HELM",SHOULDERS:"SHOULDERS",CHEST:"CHEST",LEGS:"LEGS",WEAPON:"WEAPON",TRINKET:"TRINKET",OFF_HAND:"OFF_HAND",GLOVES:"GLOVES",BOOTS:"BOOTS",count:9},EffectType={CRUSHING_BLOWS:"CRUSHING_BLOWS",COMBUSTION:"COMBUSTION",RUPTURE:"RUPTURE",WOUNDING:"WOUNDING",CURING:"CURING",FROST_SHARDS:"FROST_SHARDS",FLAME_IMBUED:"FLAME_IMBUED",BARRIER:"BARRIER",SWIFTNESS:"SWIFTNESS",
PILLAGING:"PILLAGING",NOURISHMENT:"NOURISHMENT",BERSERKING:"BERSERKING"};
function Effect(a,b,c){this.type=a;this.chance=b;this.value=c;this.getDescription=function(){switch(this.type){case EffectType.CRUSHING_BLOWS:return"Crushing Blows: Your attack deal "+this.value+"% of your opponent's current health in damage";case EffectType.COMBUSTION:return"Combustion: The debuff from Fire Blade can stack up to "+this.value+" more times";case EffectType.RUPTURE:return"Rupture: Your attacks apply an additional stack of Rend. Also increases the maximum stacks of Rend by "+this.value;
case EffectType.WOUNDING:return"Wounding: Increases the level of your Rend ability by "+this.value;case EffectType.CURING:return"Curing: Increases the level of your Rejuvenating Strikes ability by "+this.value;case EffectType.FROST_SHARDS:return"Frost Shards: Increases the level of your Ice Blade ability by "+this.value;case EffectType.FLAME_IMBUED:return"Flame Imbued: Increases the level of your Fire Blade ability by "+this.value;case EffectType.BARRIER:return"Barrier: You reflect "+this.value+"% of the damage you receive";
case EffectType.SWIFTNESS:return"Swiftness: Your attacks have a "+this.chance+"% chance to generate an additional attack";case EffectType.PILLAGING:return"Pillaging: Your attacks have a "+this.chance+"% chance to grant you "+this.value+" gold";case EffectType.NOURISHMENT:return"Nourishment: Your attacks have a "+this.chance+"% chance to heal you for "+this.value+" health";case EffectType.BERSERKING:return"Berserking: Your attacks have a "+this.chance+"% chance to deal "+this.value+" damage"}}}
function ItemBonuses(){this.experienceGain=this.goldGain=this.itemRarity=this.critDamage=this.critChance=this.evasion=this.armourBonus=this.armour=this.hp5=this.health=this.stamina=this.agility=this.strength=this.damageBonus=this.maxDamage=this.minDamage=0;this.effects=[]}
function Item(a,b,c,d,e,f,k,h){this.name=a;this.level=b;this.rarity=c;this.type=d;this.sellValue=e;this.iconSourceX=f;this.iconSourceY=k;this.minDamage=h.minDamage;this.maxDamage=h.maxDamage;this.damageBonus=h.damageBonus;this.strength=h.strength;this.agility=h.agility;this.stamina=h.stamina;this.health=h.health;this.hp5=h.hp5;this.armour=h.armour;this.armourBonus=h.armourBonus;this.evasion=h.evasion;this.critChance=h.critChance;this.critDamage=h.critDamage;this.itemRarity=h.itemRarity;this.goldGain=
h.goldGain;this.experienceGain=h.experienceGain;this.effects=h.effects}
function ItemCreator(){this.getRandomItemRarity=function(a){var b=Math.random();switch(a){case MonsterRarity.COMMON:if(.2>b)return b=Math.random(),b<1E-5*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.LEGENDARY:b<1E-4*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.EPIC:b<.001*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.RARE:b<.01*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.UNCOMMON:ItemRarity.COMMON;break;case MonsterRarity.RARE:return b<1E-4*(legacyGame.player.getItemRarity()/
100+1)?ItemRarity.LEGENDARY:b<.001*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.EPIC:b<.01*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.RARE:ItemRarity.UNCOMMON;case MonsterRarity.ELITE:return b<.001*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.LEGENDARY:b<.01*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.EPIC:ItemRarity.RARE;case MonsterRarity.BOSS:return b<.01*(legacyGame.player.getItemRarity()/100+1)?ItemRarity.LEGENDARY:ItemRarity.EPIC}};this.createRandomItem=function(a,
b){if(null==b)return null;var c;switch(Math.floor(Math.random()*ItemType.count)){case 0:c=ItemType.HELM;break;case 1:c=ItemType.SHOULDERS;break;case 2:c=ItemType.CHEST;break;case 3:c=ItemType.LEGS;break;case 4:c=ItemType.WEAPON;break;case 5:c=ItemType.GLOVES;break;case 6:c=ItemType.BOOTS;break;case 7:c=ItemType.TRINKET;break;case 8:c=ItemType.OFF_HAND}var d,e;switch(b){case ItemRarity.COMMON:d=1;e=0;break;case ItemRarity.UNCOMMON:e=d=1;break;case ItemRarity.RARE:d=2;e=1;break;case ItemRarity.EPIC:e=
d=2;break;case ItemRarity.LEGENDARY:e=d=3}for(var f=new ItemBonuses,k="",h="",g=d;0<g;){d=Math.floor(Math.random()*PREFIX_AMOUNT);var l=new StatGenerator,m=new NameGenerator;switch(d){case 0:0==f.damageBonus&&c==ItemType.WEAPON&&(f.damageBonus=l.getRandomDamageBonus(a),""==k&&(k=m.getRandomDamageBonusName()),g--);break;case 1:0==f.health&&(f.health=l.getRandomHealthBonus(a),""==k&&(k=m.getRandomHealthName()),g--);break;case 2:0==f.armourBonus&&c!=ItemType.WEAPON&&(f.armourBonus=l.getRandomArmourBonus(a),
""==k&&(k=m.getRandomArmourBonusName()),g--);break;case 3:0==f.critChance&&(f.critChance=l.getRandomCritChanceBonus(a),""==k&&(k=m.getRandomCritChanceName()),g--);break;case 4:0==f.itemRarity&&(f.itemRarity=l.getRandomItemRarityBonus(a),""==k&&(k=m.getRandomItemRarityName()),g--);break;case 5:0==f.goldGain&&(f.goldGain=l.getRandomGoldGainBonus(a),""==k&&(k=m.getRandomGoldGainName()),g--)}}for(g=e;0<g;)switch(d=Math.floor(Math.random()*SUFFIX_AMOUNT),d){case 0:0==f.strength&&(f.strength=l.getRandomStrengthBonus(a),
""==h&&(h=m.getRandomStrengthName()),g--);break;case 1:0==f.agility&&(f.agility=l.getRandomAgilityBonus(a),""==h&&(h=m.getRandomAgilityName()),g--);break;case 2:0==f.stamina&&(f.stamina=l.getRandomStaminaBonus(a),""==h&&(h=m.getRandomStaminaName()),g--);break;case 3:0==f.hp5&&(f.hp5=l.getRandomHp5Bonus(a),""==h&&(h=m.getRandomHp5Name()),g--);break;case 4:0==f.critDamage&&(f.critDamage=l.getRandomCritDamageBonus(a),""==h&&(h=m.getRandomCritDamageName()),g--);break;case 5:0==f.experienceGain&&(f.experienceGain=
l.getRandomExperienceGainBonus(a),""==h&&(h=m.getRandomExperienceGainName()),g--);break;case 6:0==f.evasion&&(f.evasion=l.getRandomEvasionBonus(a),""==h&&(h=m.getRandomEvasionName()),g--)}if(c==ItemType.WEAPON)switch(f.minDamage=l.getRandomMinDamage(a),f.maxDamage=l.getRandomMaxDamage(a,f.minDamage),b){case ItemRarity.UNCOMMON:f.minDamage+=Math.ceil(2*a*Math.pow(1.001,a)*.75+a/5+1);f.maxDamage+=Math.ceil(2*a*Math.pow(1.001,a)*.75+a/5+1);break;case ItemRarity.RARE:f.minDamage+=2*Math.ceil(2*a*Math.pow(1.001,
a)*.75+a/5+1);f.maxDamage+=2*Math.ceil(2*a*Math.pow(1.001,a)*.75+a/5+1);break;case ItemRarity.EPIC:f.minDamage+=3*Math.ceil(2*a*Math.pow(1.001,a)*.75+a/5+1);f.maxDamage+=3*Math.ceil(2*a*Math.pow(1.001,a)*.75+a/5+1);break;case ItemRarity.LEGENDARY:f.minDamage+=4*Math.ceil(2*a*Math.pow(1.001,a)*.75+a/5+1),f.maxDamage+=4*Math.ceil(2*a*Math.pow(1.001,a)*.75+a/5+1)}else f.armour=l.getRandomArmour(a);e=k;switch(c){case ItemType.HELM:e+=" Helmet ";break;case ItemType.SHOULDERS:e+=" Shoulders ";break;case ItemType.CHEST:e+=
" Chest ";break;case ItemType.LEGS:e+=" Legs ";break;case ItemType.WEAPON:e+=" Weapon ";break;case ItemType.GLOVES:e+=" Gloves ";break;case ItemType.BOOTS:e+=" Boots ";break;case ItemType.TRINKET:e+=" Trinket ";break;case ItemType.OFF_HAND:e+=" Shield "}e+=h;k=h=0;switch(c){case ItemType.HELM:h=0;break;case ItemType.SHOULDERS:h=280;break;case ItemType.CHEST:h=245;break;case ItemType.LEGS:h=210;break;case ItemType.WEAPON:h=175;break;case ItemType.GLOVES:h=140;break;case ItemType.BOOTS:h=105;break;
case ItemType.TRINKET:h=70;break;case ItemType.OFF_HAND:h=35}switch(b){case ItemRarity.UNCOMMON:k=140;break;case ItemRarity.RARE:k=105;break;case ItemRarity.EPIC:k=70;break;case ItemRarity.LEGENDARY:k=35}l=0;switch(c){case ItemType.HELM:l=2.3;break;case ItemType.SHOULDERS:l=2.5;break;case ItemType.CHEST:l=3.3;break;case ItemType.LEGS:l=3.1;break;case ItemType.WEAPON:l=2.9;break;case ItemType.GLOVES:l=2.1;break;case ItemType.BOOTS:l=2.1;break;case ItemType.TRINKET:l=2.9;break;case ItemType.OFF_HAND:l=
2.7}l=Math.floor(a*l);m=[];d=null;var g=!1,p=0;switch(b){case ItemRarity.EPIC:p=Math.floor(2*Math.random());break;case ItemRarity.LEGENDARY:p=Math.floor(2*Math.random())+1}for(;0<p;){g=!1;switch(c){case ItemType.WEAPON:switch(Math.floor(3*Math.random())){case 0:d=new Effect(EffectType.CRUSHING_BLOWS,100,5);break;case 1:d=new Effect(EffectType.COMBUSTION,100,5);break;case 2:d=new Effect(EffectType.RUPTURE,100,5)}break;case ItemType.TRINKET:switch(Math.floor(4*Math.random())){case 0:d=new Effect(EffectType.SWIFTNESS,
10,0);break;case 1:d=new Effect(EffectType.PILLAGING,10,Math.floor(15*(Sigma(a)*Math.pow(1.01,a)/4+1)));break;case 2:d=new Effect(EffectType.NOURISHMENT,10,Math.floor(10*a*Math.pow(1.001,a)*.75));break;case 3:d=new Effect(EffectType.BERSERKING,10,Math.floor(a*Math.pow(1.001,a)*3))}break;default:switch(Math.floor(5*Math.random())){case 0:d=new Effect(EffectType.WOUNDING,100,Math.ceil(a/35));break;case 1:d=new Effect(EffectType.CURING,100,Math.ceil(a/35));break;case 2:d=new Effect(EffectType.FROST_SHARDS,
100,Math.ceil(a/35));break;case 3:d=new Effect(EffectType.FLAME_IMBUED,100,Math.ceil(a/35));break;case 4:d=new Effect(EffectType.BARRIER,100,Math.floor(15*Math.random()+20))}}for(var r=0;r<m.length;r++)m[r].type==d.type&&(g=!0);g||(m.push(d),p--)}f.effects=m;return new Item(e,a,b,c,l,h,k,f)}}var UpgradeType={GPS:"GPS",SPECIAL:"SPECIAL",ATTACK:"ATTACK"},UpgradeRequirementType={FOOTMAN:"FOOTMAN",CLERIC:"CLERIC",COMMANDER:"COMMANDER",MAGE:"MAGE",ASSASSIN:"ASSASSIN",WARLOCK:"WARLOCK",LEVEL:"LEVEL",ITEMS_LOOTED:"ITEMS_LOOTED"};
function Upgrade(a,b,c,d,e,f,k,h){this.name=a;this.cost=b;this.type=c;this.requirementType=d;this.requirementAmount=e;this.description=f;this.iconSourceLeft=k;this.iconSourceTop=h;this.purchased=this.available=!1}
function UpgradeManager(){this.upgradesButtonGlowing=!1;this.warlockSpecialUpgradesPurchased=this.assassinSpecialUpgradesPurchased=this.mageSpecialUpgradesPurchased=this.commanderSpecialUpgradesPurchased=this.clericSpecialUpgradesPurchased=this.warlockUpgradesPurchased=this.assassinUpgradesPurchased=this.mageUpgradesPurchased=this.commanderUpgradesPurchased=this.clericUpgradesPurchased=this.footmanUpgradesPurchased=0;this.upgrades=[];this.initialize=function(){this.upgrades.push(new Upgrade("Footman Training",
Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,9)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,10,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training II",Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,19)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,20,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training III",Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,
29)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,30,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training IV",Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,49)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,50,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training V",Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,74)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,75,
"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training VI",Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,99)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,100,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training VII",Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,149)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,150,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training VIII",
Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,199)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,200,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training IX",Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*Math.pow(1.15,249)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,250,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Footman Training X",Math.floor(legacyGame.mercenaryManager.baseFootmanPrice*
Math.pow(1.15,199)*1.5),UpgradeType.GPS,UpgradeRequirementType.FOOTMAN,300,"Doubles the GPS of your Footmen",0,0));this.upgrades.push(new Upgrade("Cleric Training",Math.floor(legacyGame.mercenaryManager.baseClericPrice*Math.pow(1.15,9)*1.5),UpgradeType.GPS,UpgradeRequirementType.CLERIC,10,"Doubles the GPS of your Clerics",200,0));this.upgrades.push(new Upgrade("Cleric Training II",Math.floor(legacyGame.mercenaryManager.baseClericPrice*Math.pow(1.15,24)*1.5),UpgradeType.GPS,UpgradeRequirementType.CLERIC,
25,"Doubles the GPS of your Clerics",200,0));this.upgrades.push(new Upgrade("Cleric Training III",Math.floor(legacyGame.mercenaryManager.baseClericPrice*Math.pow(1.15,49)*1.5),UpgradeType.GPS,UpgradeRequirementType.CLERIC,50,"Doubles the GPS of your Clerics",200,0));this.upgrades.push(new Upgrade("Cleric Training IV",Math.floor(legacyGame.mercenaryManager.baseClericPrice*Math.pow(1.15,99)*1.5),UpgradeType.GPS,UpgradeRequirementType.CLERIC,100,"Doubles the GPS of your Clerics",200,0));this.upgrades.push(new Upgrade("Cleric Training V",
Math.floor(legacyGame.mercenaryManager.baseClericPrice*Math.pow(1.15,149)*1.5),UpgradeType.GPS,UpgradeRequirementType.CLERIC,150,"Doubles the GPS of your Clerics",200,0));this.upgrades.push(new Upgrade("Commander Training",Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*Math.pow(1.15,9)*1.5),UpgradeType.GPS,UpgradeRequirementType.COMMANDER,10,"Doubles the GPS of your Commanders",160,0));this.upgrades.push(new Upgrade("Commander Training II",Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*
Math.pow(1.15,24)*1.5),UpgradeType.GPS,UpgradeRequirementType.COMMANDER,25,"Doubles the GPS of your Commanders",160,0));this.upgrades.push(new Upgrade("Commander Training III",Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*Math.pow(1.15,49)*1.5),UpgradeType.GPS,UpgradeRequirementType.COMMANDER,50,"Doubles the GPS of your Commanders",160,0));this.upgrades.push(new Upgrade("Commander Training IV",Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*Math.pow(1.15,99)*1.5),UpgradeType.GPS,
UpgradeRequirementType.COMMANDER,100,"Doubles the GPS of your Commanders",160,0));this.upgrades.push(new Upgrade("Commander Training V",Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*Math.pow(1.15,149)*1.5),UpgradeType.GPS,UpgradeRequirementType.COMMANDER,150,"Doubles the GPS of your Commanders",160,0));this.upgrades.push(new Upgrade("Mage Training",Math.floor(legacyGame.mercenaryManager.baseMagePrice*Math.pow(1.15,9)*1.5),UpgradeType.GPS,UpgradeRequirementType.MAGE,10,"Doubles the GPS of your Mages",
120,0));this.upgrades.push(new Upgrade("Mage Training II",Math.floor(legacyGame.mercenaryManager.baseMagePrice*Math.pow(1.15,24)*1.5),UpgradeType.GPS,UpgradeRequirementType.MAGE,25,"Doubles the GPS of your Mages",120,0));this.upgrades.push(new Upgrade("Mage Training III",Math.floor(legacyGame.mercenaryManager.baseMagePrice*Math.pow(1.15,49)*1.5),UpgradeType.GPS,UpgradeRequirementType.MAGE,50,"Doubles the GPS of your Mages",120,0));this.upgrades.push(new Upgrade("Mage Training IV",Math.floor(legacyGame.mercenaryManager.baseMagePrice*
Math.pow(1.15,99)*1.5),UpgradeType.GPS,UpgradeRequirementType.MAGE,100,"Doubles the GPS of your Mages",120,0));this.upgrades.push(new Upgrade("Mage Training V",Math.floor(legacyGame.mercenaryManager.baseMagePrice*Math.pow(1.15,149)*1.5),UpgradeType.GPS,UpgradeRequirementType.MAGE,150,"Doubles the GPS of your Mages",120,0));this.upgrades.push(new Upgrade("Assassin Training",Math.floor(legacyGame.mercenaryManager.baseAssassinPrice*Math.pow(1.15,9)*1.5),UpgradeType.GPS,UpgradeRequirementType.ASSASSIN,
10,"Doubles the GPS of your Assassin",80,0));this.upgrades.push(new Upgrade("Assassin Training II",Math.floor(legacyGame.mercenaryManager.baseAssassinPrice*Math.pow(1.15,24)*1.5),UpgradeType.GPS,UpgradeRequirementType.ASSASSIN,25,"Doubles the GPS of your Assassin",80,0));this.upgrades.push(new Upgrade("Assassin Training III",Math.floor(legacyGame.mercenaryManager.baseAssassinPrice*Math.pow(1.15,49)*1.5),UpgradeType.GPS,UpgradeRequirementType.ASSASSIN,50,"Doubles the GPS of your Assassin",80,0));this.upgrades.push(new Upgrade("Assassin Training IV",
Math.floor(legacyGame.mercenaryManager.baseAssassinPrice*Math.pow(1.15,99)*1.5),UpgradeType.GPS,UpgradeRequirementType.ASSASSIN,100,"Doubles the GPS of your Assassin",80,0));this.upgrades.push(new Upgrade("Assassin Training V",Math.floor(legacyGame.mercenaryManager.baseAssassinPrice*Math.pow(1.15,149)*1.5),UpgradeType.GPS,UpgradeRequirementType.ASSASSIN,150,"Doubles the GPS of your Assassin",80,0));this.upgrades.push(new Upgrade("Warlock Training",legacyGame.mercenaryManager.baseWarlockPrice*Math.pow(1.15,
9)*1.5,UpgradeType.GPS,UpgradeRequirementType.WARLOCK,10,"Doubles the GPS of your Warlocks",40,0));this.upgrades.push(new Upgrade("Warlock Training II",legacyGame.mercenaryManager.baseWarlockPrice*Math.pow(1.15,24)*1.5,UpgradeType.GPS,UpgradeRequirementType.WARLOCK,25,"Doubles the GPS of your Warlocks",40,0));this.upgrades.push(new Upgrade("Warlock Training III",legacyGame.mercenaryManager.baseWarlockPrice*Math.pow(1.15,49)*1.5,UpgradeType.GPS,UpgradeRequirementType.WARLOCK,50,"Doubles the GPS of your Warlocks",
40,0));this.upgrades.push(new Upgrade("Warlock Training IV",legacyGame.mercenaryManager.baseWarlockPrice*Math.pow(1.15,99)*1.5,UpgradeType.GPS,UpgradeRequirementType.WARLOCK,100,"Doubles the GPS of your Warlocks",40,0));this.upgrades.push(new Upgrade("Warlock Training V",legacyGame.mercenaryManager.baseWarlockPrice*Math.pow(1.15,149)*1.5,UpgradeType.GPS,UpgradeRequirementType.WARLOCK,150,"Doubles the GPS of your Warlocks",40,0));this.upgrades.push(new Upgrade("Holy Imbuement",Math.floor(legacyGame.mercenaryManager.baseClericPrice*
Math.pow(1.15,49)*3),UpgradeType.SPECIAL,UpgradeRequirementType.CLERIC,50,"Increases the hp5 bonus from your Clerics by 2.5%.",200,0));this.upgrades.push(new Upgrade("Holy Imbuement II",Math.floor(legacyGame.mercenaryManager.baseClericPrice*Math.pow(1.15,99)*3),UpgradeType.SPECIAL,UpgradeRequirementType.CLERIC,100,"Increases the hp5 bonus from your Clerics by 2.5%.",200,0));this.upgrades.push(new Upgrade("Holy Imbuement III",Math.floor(legacyGame.mercenaryManager.baseClericPrice*Math.pow(1.15,149)*
3),UpgradeType.SPECIAL,UpgradeRequirementType.CLERIC,150,"Increases the hp5 bonus from your Clerics by 2.5%.",200,0));this.upgrades.push(new Upgrade("Holy Imbuement IV",Math.floor(legacyGame.mercenaryManager.baseClericPrice*Math.pow(1.15,199)*3),UpgradeType.SPECIAL,UpgradeRequirementType.CLERIC,200,"Increases the hp5 bonus from your Clerics by 2.5%.",200,0));this.upgrades.push(new Upgrade("Battle Morale",Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*Math.pow(1.15,49)*3),UpgradeType.SPECIAL,
UpgradeRequirementType.COMMANDER,50,"Increases the health bonus from your Commanders by "+legacyGame.mercenaryManager.commanderHealthPercentUpgradeValue+"%.",160,0));this.upgrades.push(new Upgrade("Battle Morale II",Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*Math.pow(1.15,99)*3),UpgradeType.SPECIAL,UpgradeRequirementType.COMMANDER,100,"Increases the health bonus from your Commanders by "+legacyGame.mercenaryManager.commanderHealthPercentUpgradeValue+"%.",160,0));this.upgrades.push(new Upgrade("Battle Morale III",
Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*Math.pow(1.15,149)*3),UpgradeType.SPECIAL,UpgradeRequirementType.COMMANDER,150,"Increases the health bonus from your Commanders by "+legacyGame.mercenaryManager.commanderHealthPercentUpgradeValue+"%.",160,0));this.upgrades.push(new Upgrade("Battle Morale IV",Math.floor(legacyGame.mercenaryManager.baseCommanderPrice*Math.pow(1.15,199)*3),UpgradeType.SPECIAL,UpgradeRequirementType.COMMANDER,200,"Increases the health bonus from your Commanders by "+
legacyGame.mercenaryManager.commanderHealthPercentUpgradeValue+"%.",160,0));this.upgrades.push(new Upgrade("Fire Mastery",Math.floor(legacyGame.mercenaryManager.baseMagePrice*Math.pow(1.15,49)*3),UpgradeType.SPECIAL,UpgradeRequirementType.MAGE,50,"Increases the damage bonus from your Mages by 2.5%.",120,0));this.upgrades.push(new Upgrade("Fire Mastery II",Math.floor(legacyGame.mercenaryManager.baseMagePrice*Math.pow(1.15,99)*3),UpgradeType.SPECIAL,UpgradeRequirementType.MAGE,100,"Increases the damage bonus from your Mages by 2.5%.",
120,0));this.upgrades.push(new Upgrade("Fire Mastery III",Math.floor(legacyGame.mercenaryManager.baseMagePrice*Math.pow(1.15,149)*3),UpgradeType.SPECIAL,UpgradeRequirementType.MAGE,150,"Increases the damage bonus from your Mages by 2.5%.",120,0));this.upgrades.push(new Upgrade("Fire Mastery IV",Math.floor(legacyGame.mercenaryManager.baseMagePrice*Math.pow(1.15,199)*3),UpgradeType.SPECIAL,UpgradeRequirementType.MAGE,200,"Increases the damage bonus from your Mages by 2.5%.",120,0));this.upgrades.push(new Upgrade("Shadow Mastery",
Math.floor(3*(legacyGame.mercenaryManager.baseAssassinPrice+Math.pow(1.15,49))),UpgradeType.SPECIAL,UpgradeRequirementType.ASSASSIN,50,"Increases the evasion bonus from your assassins by "+legacyGame.mercenaryManager.assassinEvasionPercentUpgradeValue+"%.",80,0));this.upgrades.push(new Upgrade("Shadow Mastery II",Math.floor(3*(legacyGame.mercenaryManager.baseAssassinPrice+Math.pow(1.15,99))),UpgradeType.SPECIAL,UpgradeRequirementType.ASSASSIN,100,"Increases the evasion bonus from your assassins by "+
legacyGame.mercenaryManager.assassinEvasionPercentUpgradeValue+"%.",80,0));this.upgrades.push(new Upgrade("Shadow Mastery III",Math.floor(3*(legacyGame.mercenaryManager.baseAssassinPrice+Math.pow(1.15,149))),UpgradeType.SPECIAL,UpgradeRequirementType.ASSASSIN,150,"Increases the evasion bonus from your assassins by "+legacyGame.mercenaryManager.assassinEvasionPercentUpgradeValue+"%.",80,0));this.upgrades.push(new Upgrade("Shadow Mastery IV",Math.floor(3*(legacyGame.mercenaryManager.baseAssassinPrice+
Math.pow(1.15,199))),UpgradeType.SPECIAL,UpgradeRequirementType.ASSASSIN,200,"Increases the evasion bonus from your assassins by "+legacyGame.mercenaryManager.assassinEvasionPercentUpgradeValue+"%.",80,0));this.upgrades.push(new Upgrade("Corruption",Math.floor(legacyGame.mercenaryManager.baseWarlockPrice*Math.pow(1.15,49)*3),UpgradeType.SPECIAL,UpgradeRequirementType.WARLOCK,50,"Increases the crit damage bonus from your Warlocks by 2.5%.",40,0));this.upgrades.push(new Upgrade("Corruption II",Math.floor(legacyGame.mercenaryManager.baseWarlockPrice*
Math.pow(1.15,99)*3),UpgradeType.SPECIAL,UpgradeRequirementType.WARLOCK,100,"Increases the crit damage bonus from your Warlocks by 2.5%.",40,0));this.upgrades.push(new Upgrade("Corruption III",Math.floor(legacyGame.mercenaryManager.baseWarlockPrice*Math.pow(1.15,149)*3),UpgradeType.SPECIAL,UpgradeRequirementType.WARLOCK,150,"Increases the crit damage bonus from your Warlocks by 2.5%.",40,0));this.upgrades.push(new Upgrade("Corruption IV",Math.floor(legacyGame.mercenaryManager.baseWarlockPrice*Math.pow(1.15,
199)*3),UpgradeType.SPECIAL,UpgradeRequirementType.WARLOCK,200,"Increases the crit damage bonus from Warlocks by 2.5%.",40,0));this.upgrades.push(new Upgrade("Power Strike",400*legacyGame.monsterCreator.calculateMonsterGoldWorth(50,MonsterRarity.COMMON),UpgradeType.ATTACK,UpgradeRequirementType.LEVEL,50,"Upgrades your attack to Power Strike",0,80));this.upgrades.push(new Upgrade("Double Strike",400*legacyGame.monsterCreator.calculateMonsterGoldWorth(100,MonsterRarity.COMMON),UpgradeType.ATTACK,UpgradeRequirementType.LEVEL,
100,"Upgrades your attack to Double Strike",200,80))};this.update=function(){for(var a,b=!1,c=0;c<this.upgrades.length;c++){a=this.upgrades[c];if(!a.available&&!a.purchased)switch(b=!1,a.requirementType){case UpgradeRequirementType.FOOTMAN:legacyGame.mercenaryManager.footmenOwned>=a.requirementAmount&&(b=!0);break;case UpgradeRequirementType.CLERIC:legacyGame.mercenaryManager.clericsOwned>=a.requirementAmount&&(b=!0);break;case UpgradeRequirementType.COMMANDER:legacyGame.mercenaryManager.commandersOwned>=
a.requirementAmount&&(b=!0);break;case UpgradeRequirementType.MAGE:legacyGame.mercenaryManager.magesOwned>=a.requirementAmount&&(b=!0);break;case UpgradeRequirementType.ASSASSIN:legacyGame.mercenaryManager.assassinsOwned>=a.requirementAmount&&(b=!0);break;case UpgradeRequirementType.WARLOCK:legacyGame.mercenaryManager.warlocksOwned>=a.requirementAmount&&(b=!0);break;case UpgradeRequirementType.ITEMS_LOOTED:legacyGame.stats.itemsLooted>=a.requirementAmount&&(b=!0);break;case UpgradeRequirementType.LEVEL:legacyGame.player.level>=
a.requirementAmount&&(b=!0)}if(b){legacyGame.displayAlert("New upgrade available!");a.available=!0;this.glowUpgradesButton();break}}};this.purchaseUpgrade=function(a){if(legacyGame.player.gold>=this.upgrades[a].cost){a=this.upgrades[a];legacyGame.player.gold-=a.cost;a.purchased=!0;a.available=!1;switch(a.type){case UpgradeType.GPS:switch(a.requirementType){case UpgradeRequirementType.FOOTMAN:this.footmanUpgradesPurchased++;break;case UpgradeRequirementType.CLERIC:this.clericUpgradesPurchased++;break;
case UpgradeRequirementType.COMMANDER:this.commanderUpgradesPurchased++;break;case UpgradeRequirementType.MAGE:this.mageUpgradesPurchased++;break;case UpgradeRequirementType.ASSASSIN:this.assassinUpgradesPurchased++;break;case UpgradeRequirementType.WARLOCK:this.warlockUpgradesPurchased++}break;case UpgradeType.SPECIAL:switch(a.requirementType){case UpgradeRequirementType.CLERIC:this.clericSpecialUpgradesPurchased++;break;case UpgradeRequirementType.COMMANDER:this.commanderSpecialUpgradesPurchased++;
break;case UpgradeRequirementType.MAGE:this.mageSpecialUpgradesPurchased++;break;case UpgradeRequirementType.ASSASSIN:this.assassinSpecialUpgradesPurchased++;break;case UpgradeRequirementType.WARLOCK:this.warlockSpecialUpgradesPurchased++}break;case UpgradeType.ATTACK:switch(a.name){case "Power Strike":this.upgrades[56].purchased||legacyGame.player.changeAttack(AttackType.POWER_STRIKE);break;case "Double Strike":legacyGame.player.changeAttack(AttackType.DOUBLE_STRIKE)}}$("#otherTooltip").hide()}};
this.stopGlowingUpgradesButton=function(){this.upgradesButtonGlowing=!1;$("#upgradesWindowButtonGlow").stop(!0);$("#upgradesWindowButtonGlow").css("opacity",0);$("#upgradesWindowButtonGlow").css("background",'url("includes/images/windowButtons.png") 78px 0')};this.glowUpgradesButton=function b(){this.upgradesButtonGlowing=!0;$("#upgradesWindowButtonGlow").animate({opacity:"+=0.5"},400);$("#upgradesWindowButtonGlow").animate({opacity:"-=0.5"},400,function(){b()})};this.save=function(){localStorage.upgradesSaved=
!0;localStorage.footmanUpgradesPurchased=this.footmanUpgradesPurchased;localStorage.clericUpgradesPurchased=this.clericUpgradesPurchased;localStorage.commanderUpgradesPurchased=this.commanderUpgradesPurchased;localStorage.mageUpgradesPurchased=this.mageUpgradesPurchased;localStorage.assassinUpgradesPurchased=this.assassinUpgradesPurchased;localStorage.warlockUpgradesPurchased=this.warlockUpgradesPurchased;for(var b=[],c=[],d=0;d<this.upgrades.length;d++)b.push(this.upgrades[d].purchased),c.push(this.upgrades[d].available);
localStorage.upgradesPurchasedArray=JSON.stringify(b);localStorage.upgradesAvailableArray=JSON.stringify(c);localStorage.clericSpecialUpgradesPurchased=this.clericSpecialUpgradesPurchased;localStorage.commanderSpecialUpgradesPurchased=this.commanderSpecialUpgradesPurchased;localStorage.mageSpecialUpgradesPurchased=this.mageSpecialUpgradesPurchased;localStorage.assassinSpecialUpgradesPurchased=this.assassinSpecialUpgradesPurchased;localStorage.warlockSpecialUpgradesPurchased=this.warlockSpecialUpgradesPurchased};
this.load=function(){if(null!=localStorage.upgradesSaved){this.footmanUpgradesPurchased=parseInt(localStorage.footmanUpgradesPurchased);this.clericUpgradesPurchased=parseInt(localStorage.clericUpgradesPurchased);this.commanderUpgradesPurchased=parseInt(localStorage.commanderUpgradesPurchased);this.mageUpgradesPurchased=parseInt(localStorage.mageUpgradesPurchased);this.assassinUpgradesPurchased=null==localStorage.version?parseInt(localStorage.thiefUpgradesPurchased):parseInt(localStorage.assassinUpgradesPurchased);
this.warlockUpgradesPurchased=parseInt(localStorage.warlockUpgradesPurchased);var b=JSON.parse(localStorage.upgradesPurchasedArray),c=JSON.parse(localStorage.upgradesAvailableArray);null!=localStorage.clericSpecialUpgradesPurchased&&(this.clericSpecialUpgradesPurchased=localStorage.clericSpecialUpgradesPurchased);null!=localStorage.commanderSpecialUpgradesPurchased&&(this.commanderSpecialUpgradesPurchased=localStorage.commanderSpecialUpgradesPurchased);null!=localStorage.mageSpecialUpgradesPurchased&&
(this.mageSpecialUpgradesPurchased=localStorage.mageSpecialUpgradesPurchased);null!=localStorage.assassinSpecialUpgradesPurchased?this.assassinSpecialUpgradesPurchased=localStorage.assassinSpecialUpgradesPurchased:null!=localStorage.thiefSpecialUpgradesPurchased&&(this.assassinSpecialUpgradesPurchased=localStorage.thiefSpecialUpgradesPurchased);null!=localStorage.warlockSpecialUpgradesPurchased&&(this.warlockSpecialUpgradesPurchased=localStorage.warlockSpecialUpgradesPurchased);for(var d=0;d<b.length;d++)void 0!==
this.upgrades[d]&&(b[d]?(this.upgradesPurchased++,this.upgrades[d].purchased=b[d]):c[d]&&(this.upgrades[d].available=c[d]))}}}function upgradeButtonMouseOverFactory(a,b){return function(){upgradeButtonMouseOver(a,b)}}function upgradeButtonMouseDownFactory(a){return function(){upgradeButtonMouseDown(a)}}function upgradeButtonMouseOutFactory(a){return function(){upgradeButtonMouseOut(a)}}
function upgradeButtonMouseOver(a){var b=legacyGame.upgradeManager.upgrades[a];$("#upgradePurchaseButton"+a).css("background",'url("includes/images/buyButtonBase.png") 0 92px');$("#otherTooltipTitle").html(b.name);$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html(b.description);$("#otherTooltip").show();a=document.getElementById("buyButton"+a).getBoundingClientRect();$("#otherTooltip").css("top",a.top-70);b=document.getElementById("otherTooltip").scrollWidth;
$("#otherTooltip").css("left",a.left-b-40)}function upgradeButtonMouseDown(a){$("#upgradePurchaseButton"+a).css("background",'url("includes/images/buyButtonBase.png") 0 46px');legacyGame.upgradeManager.purchaseUpgrade(a)}function upgradeButtonMouseOut(a){$("#upgradePurchaseButton"+a).css("background",'url("includes/images/buyButtonBase.png") 0 0');$("#otherTooltip").hide()}
function TooltipManager(){this.displayItemTooltip=function(a,b,c,d,e,f){var k="";switch(a.type){case ItemType.HELM:k="Helmet ";break;case ItemType.SHOULDERS:k="Shoulders ";break;case ItemType.CHEST:k="Chest ";break;case ItemType.LEGS:k="Legs ";break;case ItemType.WEAPON:k="Weapon ";break;case ItemType.GLOVES:k="Gloves ";break;case ItemType.BOOTS:k="Boots ";break;case ItemType.TRINKET:k="Trinket ";break;case ItemType.OFF_HAND:k="Off-Hand "}var h="",g="";0<a.minDamage&&(h+=a.minDamage+" - "+a.maxDamage+
" Damage");0<a.armour&&(h+=a.armour+a.armourBonus+" Armour");0<a.strength&&(g+="<br>Strength: "+a.strength);0<a.agility&&(g+="<br>Agility: "+a.agility);0<a.stamina&&(g+="<br>Stamina: "+a.stamina);0<a.health&&(g+="<br>Health: "+a.health);0<a.hp5&&(g+="<br>Hp5: "+a.hp5);0<a.critChance&&(g+="<br>Crit Chance: "+a.critChance+"%");0<a.critDamage&&(g+="<br>Crit Damage: "+a.critDamage+"%");0<a.itemRarity&&(g+="<br>Item Rarity: "+a.itemRarity+"%");0<a.goldGain&&(g+="<br>Gold Gain: "+a.goldGain+"%");0<a.experienceGain&&
(g+="<br>Experience Gain: "+a.experienceGain+"%");0<a.evasion&&(g+="<br>Evasion: "+a.evasion);for(var l,m=0;m<a.effects.length;m++)l=a.effects[m],g+='<span class="yellowText"><br>'+l.getDescription();a.rarity==ItemRarity.COMMON&&($("#itemTooltip").css("border-color","#fff"),$(".equipButton").css("border-color","#fff"),$("#itemTooltipTitle").html('<span class="whiteText">'+a.name+"<br></span>"));a.rarity==ItemRarity.UNCOMMON&&($("#itemTooltip").css("border-color","#00ff05"),$(".equipButton").css("border-color",
"#00ff05"),$("#itemTooltipTitle").html('<span class="greenText">'+a.name+"<br></span>"));a.rarity==ItemRarity.RARE&&($("#itemTooltip").css("border-color","#0005ff"),$(".equipButton").css("border-color","#0005ff"),$("#itemTooltipTitle").html('<span class="blueText">'+a.name+"<br></span>"));a.rarity==ItemRarity.EPIC&&($("#itemTooltip").css("border-color","#b800af"),$(".equipButton").css("border-color","#b800af"),$("#itemTooltipTitle").html('<span class="purpleText">'+a.name+"<br></span>"));a.rarity==
ItemRarity.LEGENDARY&&($("#itemTooltip").css("border-color","#ff6a00"),$(".equipButton").css("border-color","#ff6a00"),$("#itemTooltipTitle").html('<span class="orangeText">'+a.name+"<br></span>"));$("#itemTooltipType").html(k+"<br>");0<a.armourBonus?$("#itemTooltipStats1").html('<span class="greenText">'+(a.armour+a.armourBonus)+'<span class="whiteText"> Armour<br></span></span>'):0<a.damageBonus?$("#itemTooltipStats1").html('<span class="greenText">'+(a.minDamage+a.damageBonus)+" - "+(a.maxDamage+
a.damageBonus)+'<span class="whiteText"> Damage<br></span></span>'):$("#itemTooltipStats1").html(h+"<br>");$("#itemTooltipStats2").html(g);$("#itemTooltipSellValue").html(a.sellValue);$("#itemTooltipLevel").html("Item Level "+a.level);$("#itemTooltipUseInfo").html("[Right-click to equip]");f?$("#itemTooltipSellInfo").html("[Shift-click to sell]"):$("#itemTooltipSellInfo").html("");$("#itemTooltip").show();a=document.getElementById("itemTooltip").scrollHeight;$("#itemTooltip").css("top",e-a-30);f=
document.getElementById("itemTooltip").scrollWidth;$("#itemTooltip").css("left",d-f-30);if(null!=b){g=h="";0<b.minDamage&&(h+=b.minDamage+" - "+b.maxDamage+" Damage");0<b.armour&&(h+=b.armour+b.armourBonus+" Armour");0<b.strength&&(g+="<br>Strength: "+b.strength);0<b.agility&&(g+="<br>Agility: "+b.agility);0<b.stamina&&(g+="<br>Stamina: "+b.stamina);0<b.health&&(g+="<br>Health: "+b.health);0<b.hp5&&(g+="<br>Hp5: "+b.hp5);0<b.critChance&&(g+="<br>Crit Chance: "+b.critChance+"%");0<b.critDamage&&(g+=
"<br>Crit Damage: "+b.critDamage+"%");0<b.itemRarity&&(g+="<br>Item Rarity: "+b.itemRarity+"%");0<b.goldGain&&(g+="<br>Gold Gain: "+b.goldGain+"%");0<b.experienceGain&&(g+="<br>Experience Gain: "+b.experienceGain+"%");0<b.evasion&&(g+="<br>Evasion: "+b.evasion);for(m=0;m<b.effects.length;m++)l=b.effects[m],g+='<span class="yellowText"><br>'+l.getDescription();$("#itemCompareTooltipExtra").html("Currently equipped");b.rarity==ItemRarity.COMMON&&($("#itemCompareTooltip").css("border-color","#fff"),
$(".equipButton").css("border-color","#fff"),$("#itemCompareTooltipTitle").html('<span class="whiteText">'+b.name+"<br></span>"));b.rarity==ItemRarity.UNCOMMON&&($("#itemCompareTooltip").css("border-color","#00ff05"),$(".equipButton").css("border-color","#00ff05"),$("#itemCompareTooltipTitle").html('<span class="greenText">'+b.name+"<br></span>"));b.rarity==ItemRarity.RARE&&($("#itemCompareTooltip").css("border-color","#0005ff"),$(".equipButton").css("border-color","#0005ff"),$("#itemCompareTooltipTitle").html('<span class="blueText">'+
b.name+"<br></span>"));b.rarity==ItemRarity.EPIC&&($("#itemCompareTooltip").css("border-color","#b800af"),$(".equipButton").css("border-color","#b800af"),$("#itemCompareTooltipTitle").html('<span class="purpleText">'+b.name+"<br></span>"));b.rarity==ItemRarity.LEGENDARY&&($("#itemCompareTooltip").css("border-color","#ff6a00"),$(".equipButton").css("border-color","#ff6a00"),$("#itemCompareTooltipTitle").html('<span class="orangeText">'+b.name+"<br></span>"));$("#itemCompareTooltipType").html(k+"<br>");
0<b.armourBonus?$("#itemCompareTooltipStats1").html('<span class="greenText">'+(b.armour+b.armourBonus)+'<span class="whiteText"> Armour<br></span></span>'):0<b.damageBonus?$("#itemCompareTooltipStats1").html('<span class="greenText">'+(b.minDamage+b.damageBonus)+" - "+(b.maxDamage+b.damageBonus)+'<span class="whiteText"> Damage<br></span></span>'):$("#itemCompareTooltipStats1").html(h+"<br>");$("#itemCompareTooltipStats2").html(g);$("#itemCompareTooltipSellValue").html(b.sellValue);$("#itemCompareTooltipLevel").html("Item Level "+
b.level);$("#itemCompareTooltipUseInfo").html("");$("#itemCompareTooltipSellInfo").html("");$("#itemCompareTooltip").show();$("#itemCompareTooltip").css("top",e-a-30);f+=document.getElementById("itemCompareTooltip").scrollWidth;$("#itemCompareTooltip").css("left",d-f-40);if(null!=c){c=legacyGame.equipment.trinket2();g=h="";0<c.minDamage&&(h+=c.minDamage+" - "+c.maxDamage+" Damage");0<c.armour&&(h+=c.armour+c.armourBonus+" Armour");0<c.strength&&(g+="<br>Strength: "+c.strength);0<c.agility&&(g+="<br>Agility: "+
c.agility);0<c.stamina&&(g+="<br>Stamina: "+c.stamina);0<c.health&&(g+="<br>Health: "+c.health);0<c.hp5&&(g+="<br>Hp5: "+c.hp5);0<c.critChance&&(g+="<br>Crit Chance: "+c.critChance+"%");0<c.critDamage&&(g+="<br>Crit Damage: "+c.critDamage+"%");0<c.itemRarity&&(g+="<br>Item Rarity: "+c.itemRarity+"%");0<c.goldGain&&(g+="<br>Gold Gain: "+c.goldGain+"%");0<c.experienceGain&&(g+="<br>Experience Gain: "+c.experienceGain+"%");0<c.evasion&&(g+="<br>Evasion: "+c.evasion);for(m=0;m<c.effects.length;m++)l=
c.effects[m],g+='<span class="yellowText"><br>'+l.getDescription();$("#itemCompareTooltip2Extra").html("Currently equipped");c.rarity==ItemRarity.COMMON&&($("#itemCompareTooltip2").css("border-color","#fff"),$(".equipButton").css("border-color","#fff"),$("#itemCompareTooltip2Title").html('<span class="whiteText">'+c.name+"<br></span>"));c.rarity==ItemRarity.UNCOMMON&&($("#itemCompareTooltip2").css("border-color","#00ff05"),$(".equipButton").css("border-color","#00ff05"),$("#itemCompareTooltip2Title").html('<span class="greenText">'+
c.name+"<br></span>"));c.rarity==ItemRarity.RARE&&($("#itemCompareTooltip2").css("border-color","#0005ff"),$(".equipButton").css("border-color","#0005ff"),$("#itemCompareTooltip2Title").html('<span class="blueText">'+c.name+"<br></span>"));c.rarity==ItemRarity.EPIC&&($("#itemCompareTooltip2").css("border-color","#b800af"),$(".equipButton").css("border-color","#b800af"),$("#itemCompareTooltip2Title").html('<span class="purpleText">'+c.name+"<br></span>"));c.rarity==ItemRarity.LEGENDARY&&($("#itemCompareTooltip2").css("border-color",
"#ff6a00"),$(".equipButton").css("border-color","#ff6a00"),$("#itemCompareTooltip2Title").html('<span class="orangeText">'+c.name+"<br></span>"));$("#itemCompareTooltip2Type").html(k+"<br>");0<c.armourBonus?$("#itemCompareTooltip2Stats1").html('<span class="greenText">'+(c.armour+c.armourBonus)+'<span class="whiteText"> Armour<br></span></span>'):0<c.damageBonus?$("#itemCompareTooltip2Stats1").html('<span class="greenText">'+(c.minDamage+c.damageBonus)+" - "+(c.maxDamage+c.damageBonus)+'<span class="whiteText"> Damage<br></span></span>'):
$("#itemCompareTooltip2Stats1").html(h+"<br>");$("#itemCompareTooltip2Stats2").html(g);$("#itemCompareTooltip2SellValue").html(c.sellValue);$("#itemCompareTooltip2Level").html("Item Level "+c.level);$("#itemCompareTooltip2UseInfo").html("");$("#itemCompareTooltip2SellInfo").html("");$("#itemCompareTooltip2").show();$("#itemCompareTooltip2").css("top",e-a-30);f+=document.getElementById("itemCompareTooltip2").scrollWidth;$("#itemCompareTooltip2").css("left",d-f-50)}}};this.displayBasicTooltip=function(a,
b){$("#basicTooltipText").html(b);$("#basicTooltip").show();var c=a.getBoundingClientRect();$("#basicTooltip").css("top",c.top-70);var d=document.getElementById("basicTooltip").scrollWidth;$("#basicTooltip").css("left",c.left-d-40)}}
function Game(){this.version=.2;this.loading=!1;this.loadInterval=this.loadingTextInterval=0;this.oldDate=new Date;this.player=new Player;this.inventory=new Inventory;this.equipment=new Equipment;this.statGenerator=new StatGenerator;this.nameGenerator=new NameGenerator;this.statUpgradesManager=new StatUpgradesManager;this.tooltipManager=new TooltipManager;this.questsManager=new QuestsManager;this.eventManager=new EventManager;this.stats=new Stats;this.options=new Options;this.inBattle=!1;this.battleDepth=
this.battleLevel=1;this.mercenaryManager=new mercenaryManager;this.upgradeManager=new UpgradeManager;this.particleManager=new ParticleManager;this.monsterCreator=new MonsterCreator;this.monster=this.monsterCreator.createRandomMonster(this.battleLevel,this.monsterCreator.calculateMonsterRarity(this.battleLevel,this.battleDepth));this.displayMonsterHealth=!1;this.itemCreator=new ItemCreator;this.saveTimeRemaining=this.saveDelay=1E4;this.initialize=function(){this.beginLoading();this.mercenaryManager.initialize();
this.upgradeManager.initialize();this.particleManager.initialize();this.load();document.getElementById("version").innerHTML="Version "+this.version};this.getPowerShardBonus=function(){return this.player.powerShards/100+1};this.beginLoading=function(){this.loading=!0;this.loadingTextInterval=setInterval(function(){this.loadingInterval++;2<this.loadingInterval?(this.loadingInterval=0,$("#loadingText").html("Loading.")):$("#loadingText").append(".")},500)};this.finishLoading=function(){this.loading=
!1;clearInterval(this.loadingTextInterval);$("#loadingArea").hide()};this.allowBattle=function(){enterBattleButtonReset()};this.disallowBattle=function(){this.leaveBattle();$("#enterBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 25px')};this.enterBattle=function(){this.inBattle=!0;this.monster=this.monsterCreator.createRandomMonster(this.battleLevel,this.monsterCreator.calculateMonsterRarity(this.battleLevel,this.battleDepth));$("#enterBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 50px');
$("#leaveBattleButton").show();$("#leaveBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 0px');$("#monsterHealthBarArea").show();$("#attackButton").show()};this.leaveBattle=function(){$("#leaveBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 50px');this.inBattle=!1;$("#enterBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 0px');$("#monsterHealthBarArea").hide();$("#leaveBattleButton").hide();this.resetBattle();$("#attackButton").hide();
$("#monsterBleedingIcon").hide();$("#monsterBurningIcon").hide();$("#monsterChilledIcon").hide()};this.attack=function(){this.player.updateDebuffs();this.monster.updateDebuffs();if(legacyGame.player.canAttack){var a=1,b=0;this.player.attackType==AttackType.DOUBLE_STRIKE&&a++;for(var c=0;c<a;c++){var d=this.player.getMinDamage(),e=this.player.getMaxDamage(),e=d+Math.random()*(e-d);this.player.attackType==AttackType.POWER_STRIKE&&(e*=1.5);var f=!1;this.player.getCritChance()>=100*Math.random()&&(e*=
this.player.getCritDamage()/100,f=!0);var k=legacyGame.player.getEffectsOfType(EffectType.CRUSHING_BLOWS),h=0;if(0<k.length){for(d=0;d<k.length;d++)h+=k[d].value;0<h&&game.monsterTakeDamage(h/100*this.monster.health,!1,!1)}game.monsterTakeDamage(e,f,!0);this.player.useAbilities();b++;for(var g=legacyGame.player.getEffectsOfType(EffectType.SWIFTNESS),l=0;l<g.length;l++)if(Math.random()<g[l].chance/100){d=this.player.getMinDamage();e=this.player.getMaxDamage();e=d+Math.random()*(e-d);this.player.attackType==
AttackType.POWER_STRIKE&&(e*=1.5);f=!1;this.player.getCritChance()>=100*Math.random()&&(e*=this.player.getCritDamage()/100,f=!0);k=legacyGame.player.getEffectsOfType(EffectType.CRUSHING_BLOWS);h=0;if(0<k.length){for(d=0;d<k.length;d++)h+=k[d].value;0<h&&game.monsterTakeDamage(h/100*this.monster.health,!1,!1)}game.monsterTakeDamage(e,f,!0);this.player.useAbilities();b++}}a=this.player.getEffectsOfType(EffectType.PILLAGING);g=this.player.getEffectsOfType(EffectType.NOURISHMENT);l=this.player.getEffectsOfType(EffectType.BERSERKING);
for(c=0;c<b;c++){for(d=0;d<a.length;d++)Math.random()<a[d].chance/100&&game.gainGold(a[d].value,!0);for(d=0;d<g.length;d++)Math.random()<g[d].chance/100&&legacyGame.player.heal(g[d].value);for(d=0;d<l.length;d++)Math.random()<l[d].chance/100&&game.monsterTakeDamage(l[d].value,!1,!1)}}this.monster.canAttack&&this.monster.alive&&Math.random()>=this.player.calculateEvasionChance()/100&&game.playerTakeDamage(this.monster.damage);0==this.monster.alive&&(this.questsManager.updateKillCounts(this.monster.level),
b=this.monster.getRandomLoot(),game.gainGold(b.gold,!0),this.stats.goldFromMonsters+=this.player.lastGoldGained,game.gainExperience(this.monster.experienceWorth,!0),this.stats.experienceFromMonsters+=this.player.lastExperienceGained,null!=b.item&&this.inventory.lootItem(b.item),this.particleManager.createParticle(this.player.lastGoldGained.toFixed(2),ParticleType.GOLD),this.particleManager.createParticle(this.player.lastExperienceGained.toFixed(2),ParticleType.EXP_ORB),this.particleManager.createParticle(null,
ParticleType.SKULL),this.monster=this.monsterCreator.createRandomMonster(this.battleLevel,this.monsterCreator.calculateMonsterRarity(this.battleLevel,this.battleDepth)),$("#monsterBleedingIcon").hide(),$("#monsterBurningIcon").hide(),$("#monsterChilledIcon").hide(),this.battleDepth++)};this.maxBattleLevelReached=function(){return this.player.level==this.battleLevel?!0:!1};this.increaseBattleLevel=function(){this.player.level>this.battleLevel&&(this.battleLevel++,this.displayAlert("Battle Level "+
legacyGame.battleLevel))};this.decreaseBattleLevel=function(){1!=this.battleLevel&&(this.battleLevel--,this.displayAlert("Battle Level "+legacyGame.battleLevel))};this.resetBattle=function(){this.battleDepth=1};this.displayAlert=function(a){$("#battleLevelText").stop(!0);var b=document.getElementById("battleLevelText");b.style.opacity="1";b.style.top="600px";b.innerHTML=a;$("#battleLevelText").animate({top:"-=50px",opacity:"0"},1E3)};this.displayLevelUpWindow=function(){if(0==(this.player.skillPointsSpent+
2)%5)$("#abilityUpgradesWindow").show();else{var a=this.statUpgradesManager.upgrades[0];$("#statUpgradesWindow").show();switch(a[0].type){case StatUpgradeType.DAMAGE:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+"% Damage";break;case StatUpgradeType.STRENGTH:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+" Strength";break;case StatUpgradeType.AGILITY:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+" Agility";break;case StatUpgradeType.STAMINA:document.getElementById("statUpgradeName1").innerHTML=
"+"+a[0].amount+" Stamina";break;case StatUpgradeType.ARMOUR:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+" Armour";break;case StatUpgradeType.HP5:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+" Hp5";break;case StatUpgradeType.CRIT_DAMAGE:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+"% Crit Damage";break;case StatUpgradeType.ITEM_RARITY:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+"% Item Rarity";break;
case StatUpgradeType.GOLD_GAIN:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+"% Gold Gain";break;case StatUpgradeType.EXPERIENCE_GAIN:document.getElementById("statUpgradeName1").innerHTML="+"+a[0].amount+"% Experience Gain"}switch(a[1].type){case StatUpgradeType.DAMAGE:document.getElementById("statUpgradeName2").innerHTML="+"+a[1].amount+"% Damage";break;case StatUpgradeType.STRENGTH:document.getElementById("statUpgradeName2").innerHTML="+"+a[1].amount+" Strength";break;case StatUpgradeType.AGILITY:document.getElementById("statUpgradeName2").innerHTML=
"+"+a[1].amount+" Agility";break;case StatUpgradeType.STAMINA:document.getElementById("statUpgradeName2").innerHTML="+"+a[1].amount+" Stamina";break;case StatUpgradeType.ARMOUR:document.getElementById("statUpgradeName2").innerHTML="+"+a[1].amount+" Armour";break;case StatUpgradeType.HP5:document.getElementById("statUpgradeName2").innerHTML="+"+a[1].amount+" Hp5";break;case StatUpgradeType.CRIT_DAMAGE:document.getElementById("statUpgradeName2").innerHTML="+"+a[1].amount+"% Crit Damage";break;case StatUpgradeType.ITEM_RARITY:document.getElementById("statUpgradeName2").innerHTML=
"+"+a[1].amount+"% Item Rarity";break;case StatUpgradeType.GOLD_GAIN:document.getElementById("statUpgradeName2").innerHTML="+"+a[1].amount+"% Gold Gain";break;case StatUpgradeType.EXPERIENCE_GAIN:document.getElementById("statUpgradeName2").innerHTML="+"+a[1].amount+"% Experience Gain"}switch(a[2].type){case StatUpgradeType.DAMAGE:document.getElementById("statUpgradeName3").innerHTML="+"+a[2].amount+"% Damage";break;case StatUpgradeType.STRENGTH:document.getElementById("statUpgradeName3").innerHTML=
"+"+a[2].amount+" Strength";break;case StatUpgradeType.AGILITY:document.getElementById("statUpgradeName3").innerHTML="+"+a[2].amount+" Agility";break;case StatUpgradeType.STAMINA:document.getElementById("statUpgradeName3").innerHTML="+"+a[2].amount+" Stamina";break;case StatUpgradeType.ARMOUR:document.getElementById("statUpgradeName3").innerHTML="+"+a[2].amount+" Armour";break;case StatUpgradeType.HP5:document.getElementById("statUpgradeName3").innerHTML="+"+a[2].amount+" Hp5";break;case StatUpgradeType.CRIT_DAMAGE:document.getElementById("statUpgradeName3").innerHTML=
"+"+a[2].amount+"% Crit Damage";break;case StatUpgradeType.ITEM_RARITY:document.getElementById("statUpgradeName3").innerHTML="+"+a[2].amount+"% Item Rarity";break;case StatUpgradeType.GOLD_GAIN:document.getElementById("statUpgradeName3").innerHTML="+"+a[2].amount+"% Gold Gain";break;case StatUpgradeType.EXPERIENCE_GAIN:document.getElementById("statUpgradeName3").innerHTML="+"+a[2].amount+"% Experience Gain"}}};this.calculatePowerShardReward=function(){var a=Math.floor((Math.sqrt(1+this.stats.goldEarned/
1E12*8)-1)/2)-this.player.powerShards;0>a&&(a=0);return a};this.save=function(){"undefined"!==typeof Storage&&(localStorage.version=this.version,this.inventory.save(),this.equipment.save(),this.player.save(),this.questsManager.save(),this.mercenaryManager.save(),this.upgradeManager.save(),this.statUpgradesManager.save(),this.stats.save(),this.options.save(),localStorage.battleLevel=this.battleLevel)};this.load=function(){"undefined"!==typeof Storage&&(this.inventory.load(),this.equipment.load(),this.player.load(),
this.questsManager.load(),this.mercenaryManager.load(),this.upgradeManager.load(),this.statUpgradesManager.load(),this.stats.load(),this.options.load(),null!=localStorage.battleLevel&&(this.battleLevel=parseInt(localStorage.battleLevel)),1<this.battleLevel&&$("#battleLevelDownButton").css("background",'url("includes/images/battleLevelButton.png") 0 0px'),this.maxBattleLevelReached()&&$("#battleLevelUpButton").css("background",'url("includes/images/battleLevelButton.png") 0 25px'),this.monster=this.monsterCreator.createRandomMonster(this.battleLevel,
this.monsterCreator.calculateMonsterRarity(this.battleLevel,this.battleDepth)))};this.reset=function(){localStorage.clear();this.player=new Player;this.inventory=new Inventory;this.equipment=new Equipment;this.statGenerator=new StatGenerator;this.nameGenerator=new NameGenerator;this.statUpgradesManager=new StatUpgradesManager;this.questsManager=new QuestsManager;this.eventManager=new EventManager;this.stats=new Stats;this.inBattle=!1;this.battleDepth=this.battleLevel=1;this.mercenaryManager=new mercenaryManager;
for(var a,b=0;b<this.upgradeManager.upgradesAvailable;b++)a=document.getElementById("upgradePurchaseButton"+(b+1)),a.parentNode.removeChild(a);this.upgradeManager=new UpgradeManager;this.particleManager=new ParticleManager;this.monsterCreator=new MonsterCreator;this.monster=this.monsterCreator.createRandomMonster(this.battleLevel,this.monsterCreator.calculateMonsterRarity(this.battleLevel,this.battleDepth));this.itemCreator=new ItemCreator;this.initialize();$("#leaveBattleButton").hide();$("#monsterHealthBarArea").hide();
$("#attackButton").hide();$("#powerStrikeButton").hide();$("#inventoryWindow").hide();$("#characterWindow").hide();$("#upgradesWindow").hide();$("#mercenariesWindow").hide();$("#questsWindow").hide();$("#resurrectionBarArea").hide();$("#enterBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 0px');$("#attackButton").css("background",'url("includes/images/attackButtons.png") 150px 0');document.getElementById("footmanCost").innerHTML=this.mercenaryManager.footmanPrice.formatMoney(0);
document.getElementById("footmenOwned").innerHTML=this.mercenaryManager.footmenOwned;document.getElementById("clericCost").innerHTML=this.mercenaryManager.clericPrice.formatMoney(0);document.getElementById("clericsOwned").innerHTML=this.mercenaryManager.clericsOwned;document.getElementById("commanderCost").innerHTML=this.mercenaryManager.commanderPrice.formatMoney(0);document.getElementById("commandersOwned").innerHTML=this.mercenaryManager.commandersOwned;document.getElementById("mageCost").innerHTML=
this.mercenaryManager.magePrice.formatMoney(0);document.getElementById("magesOwned").innerHTML=this.mercenaryManager.magesOwned;document.getElementById("assassinCost").innerHTML=this.mercenaryManager.assassinPrice.formatMoney(0);document.getElementById("assassinsOwned").innerHTML=this.mercenaryManager.assassinsOwned;document.getElementById("warlockCost").innerHTML=this.mercenaryManager.warlockPrice.formatMoney(0);document.getElementById("warlocksOwned").innerHTML=this.mercenaryManager.warlocksOwned};
this.update=function(){var a=new Date,b=a.getTime()-this.oldDate.getTime();this.player.alive?this.player.regenerateHealth(b):this.player.resurrecting?(this.player.resurrectionTimeRemaining-=b/1E3,$("#resurrectionBar").css("width",this.player.resurrectionTimeRemaining/this.player.resurrectionTimer*200),$("#resurrectionBar").css("height","23"),document.getElementById("resurrectionBarText").innerHTML="Resurrecting: "+Math.floor(this.player.resurrectionTimeRemaining/this.player.resurrectionTimer*100)+
"%",0>=this.player.resurrectionTimeRemaining&&(this.player.resurrecting=!1,this.player.health=this.player.getMaxHealth(),this.player.alive=!0,$("#resurrectionBarArea").hide(),this.allowBattle())):($("#resurrectionBarArea").show(),this.player.resurrecting=!0,this.player.resurrectionTimeRemaining=this.player.resurrectionTimer,this.disallowBattle(),this.player.health=0,this.mercenaryManager.addGpsReduction(this.mercenaryManager.deathGpsReductionAmount,this.mercenaryManager.deathGpsReductionDuration));
this.mercenaryManager.update(b);this.updateInterface(b);this.questsManager.update();this.eventManager.update(b);this.player.update(b);legacyGame.saveTimeRemaining-=b;0>=legacyGame.saveTimeRemaining&&(legacyGame.saveTimeRemaining=legacyGame.saveDelay,legacyGame.save());this.oldDate=a};this.updateInterface=function(a){this.upgradeManager.update();this.particleManager.update(a);document.getElementById("levelValue").innerHTML=this.player.level;document.getElementById("healthValue").innerHTML=Math.floor(this.player.health)+
"/"+Math.floor(this.player.getMaxHealth());document.getElementById("hp5Value").innerHTML=this.player.getHp5().toFixed(2);document.getElementById("damageValue").innerHTML=Math.floor(this.player.getMinDamage())+" - "+Math.floor(this.player.getMaxDamage());document.getElementById("damageBonusValue").innerHTML=this.player.getDamageBonus()+"%";document.getElementById("armourValue").innerHTML=this.player.getArmour().toFixed(2)+" ("+this.player.calculateDamageReduction().toFixed(2)+"%)";document.getElementById("evasionValue").innerHTML=
this.player.getEvasion().toFixed(2)+" ("+this.player.calculateEvasionChance().toFixed(2)+"%)";document.getElementById("strengthValue").innerHTML=this.player.getStrength();document.getElementById("staminaValue").innerHTML=this.player.getStamina();document.getElementById("agilityValue").innerHTML=this.player.getAgility();document.getElementById("critChanceValue").innerHTML=this.player.getCritChance().toFixed(2)+"%";document.getElementById("critDamageValue").innerHTML=this.player.getCritDamage().toFixed(2)+
"%";document.getElementById("itemRarityValue").innerHTML=this.player.getItemRarity().toFixed(2)+"%";document.getElementById("goldGainValue").innerHTML=this.player.getGoldGain().toFixed(2)+"%";document.getElementById("experienceGainValue").innerHTML=this.player.getExperienceGain().toFixed(2)+"%";a=this.questsManager.getSelectedQuest();if(null!=a){var b="";document.getElementById("questTitle").innerHTML=a.name;switch(a.type){case QuestType.KILL:b=1==a.typeAmount?"Slay "+a.typeAmount+" Level "+a.typeId+
" Monster.":"Slay "+a.typeAmount+" Level "+a.typeId+" Monsters.";break;case QuestType.MERCENARIES:switch(a.typeId){case 0:b="Own "+a.typeAmount+" Footmen.";break;case 1:b="Own "+a.typeAmount+" Clerics.";break;case 2:b="Own "+a.typeAmount+" Commanders.";break;case 3:b="Own "+a.typeAmount+" Mages.";break;case 4:b="Own "+a.typeAmount+" Assassins.";break;case 5:b="Own "+a.typeAmount+" Warlocks."}break;case QuestType.UPGRADE:b="Purchase the "+this.upgradeManager.upgrades[a.typeId].name+" upgrade."}document.getElementById("questGoal").innerHTML=
b;switch(a.type){case QuestType.KILL:b=a.killCount+"/"+a.typeAmount+" Monsters slain.";break;case QuestType.MERCENARIES:switch(a.typeId){case 0:b=this.mercenaryManager.footmenOwned+"/"+a.typeAmount+" Footmen owned.";break;case 1:b=this.mercenaryManager.clericsOwned+"/"+a.typeAmount+" Clerics owned.";break;case 2:b=this.mercenaryManager.commandersOwned+"/"+a.typeAmount+" Commanders owned.";break;case 3:b=this.mercenaryManager.magesOwned+"/"+a.typeAmount+" Mages owned.";break;case 4:b=this.mercenaryManager.assassinsOwned+
"/"+a.typeAmount+" Assassins owned.";break;case 5:b=this.mercenaryManager.warlocksOwned+"/"+a.typeAmount+" Warlocks owned."}}document.getElementById("questProgress").innerHTML=b;document.getElementById("questDescription").innerHTML="<br>"+a.description;document.getElementById("questReward").innerHTML="<br>Reward:";null!=a.buffReward&&(document.getElementById("questRewardText").innerHTML="Completing this quest will empower you with a powerful buff.");document.getElementById("questGold").innerHTML=
a.goldReward;document.getElementById("questExperience").innerHTML=a.expReward}else $("#questNamesArea").hide(),$("#questTextArea").hide();this.stats.update()}}var legacyGame=new Game,itemTooltipButtonHovered=!1;this.SLOT_TYPE={};SLOT_TYPE.EQUIP="EQUIP";SLOT_TYPE.INVENTORY="INVENTORY";SLOT_TYPE.SELL="SELL";var slotTypeSelected,slotNumberSelected;
function attackButtonHover(a){switch(legacyGame.player.attackType){case AttackType.BASIC_ATTACK:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 150px 0');$("#otherTooltipTitle").html("Attack");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("A basic attack.");$("#otherTooltip").show();break;case AttackType.POWER_STRIKE:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 150px 100px');$("#otherTooltipTitle").html("Power Strike");
$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Strike your target with a powerful blow, dealing 1.5x normal damage.");$("#otherTooltip").show();break;case AttackType.DOUBLE_STRIKE:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 150px 50px'),$("#otherTooltipTitle").html("Double Strike"),$("#otherTooltipCooldown").html(""),$("#otherTooltipLevel").html(""),$("#otherTooltipDescription").html("Attack your target with two fast strikes."),
$("#otherTooltip").show()}a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top+10);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",a.left-b-10)}
function attackButtonReset(){switch(legacyGame.player.attackType){case AttackType.BASIC_ATTACK:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 0 0');break;case AttackType.POWER_STRIKE:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 0 100px');break;case AttackType.DOUBLE_STRIKE:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 0 50px')}$("#otherTooltip").hide()}
function attackButtonClick(){switch(legacyGame.player.attackType){case AttackType.BASIC_ATTACK:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 100px 0');break;case AttackType.POWER_STRIKE:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 100px 100px');break;case AttackType.DOUBLE_STRIKE:$("#attackButton").css("background",'url("includes/images/attackButtons.png") 100px 50px')}1==legacyGame.inBattle&&legacyGame.attack()}
function enterBattleButtonHover(a){0==legacyGame.inBattle&&legacyGame.player.alive&&$("#enterBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 75px')}function enterBattleButtonReset(a){0==legacyGame.inBattle&&legacyGame.player.alive&&$("#enterBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 0px')}function enterBattleButtonClick(a){0==legacyGame.inBattle&&legacyGame.player.alive&&legacyGame.enterBattle()}
function leaveBattleButtonHover(a){1==legacyGame.inBattle&&$("#leaveBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 75px')}function leaveBattleButtonReset(a){1==legacyGame.inBattle&&$("#leaveBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 0px')}function leaveBattleButtonClick(a){1==legacyGame.inBattle&&legacyGame.leaveBattle()}
function battleLevelUpButtonHover(a){legacyGame.maxBattleLevelReached()||(a.style.background='url("includes/images/battleLevelButton.png") 0 75px')}
function battleLevelUpButtonClick(a){a.style.background='url("includes/images/battleLevelButton.png") 0 50px';legacyGame.maxBattleLevelReached()||(legacyGame.increaseBattleLevel(),$("#battleLevelDownButton").css("background",'url("includes/images/battleLevelButton.png") 0 0px'),legacyGame.maxBattleLevelReached()&&(a.style.background='url("includes/images/battleLevelButton.png") 0 25px'))}
function battleLevelUpButtonReset(a){legacyGame.maxBattleLevelReached()||(a.style.background='url("includes/images/battleLevelButton.png") 0 0px')}function battleLevelDownButtonHover(a){1!=legacyGame.battleLevel&&(a.style.background='url("includes/images/battleLevelButton.png") 0 75px')}
function battleLevelDownButtonClick(a){a.style.background='url("includes/images/battleLevelButton.png") 0 50px';1!=legacyGame.battleLevel&&(legacyGame.decreaseBattleLevel(),$("#battleLevelUpButton").css("background",'url("includes/images/battleLevelButton.png") 0 0px'),1==legacyGame.battleLevel&&(a.style.background='url("includes/images/battleLevelButton.png") 0 25px'))}
function battleLevelDownButtonReset(a){1!=legacyGame.battleLevel&&(a.style.background='url("includes/images/battleLevelButton.png") 0 0px')}function equipItemHover(a,b){var c=legacyGame.equipment.slots[b-1];if(null!=c){var d=a.getBoundingClientRect();legacyGame.tooltipManager.displayItemTooltip(c,null,null,d.left,d.top,!1)}}function equipItemReset(a,b){$("#itemTooltip").hide();$(".equipItem"+b).css("z-index","1")}
function equipItemClick(a,b){1==event.which&&(slotTypeSelected=SLOT_TYPE.EQUIP,slotNumberSelected=b,$(".equipItem"+b).position(),$(".equipItem"+b).css("z-index","200"))}
function inventoryItemHover(a,b){var c=legacyGame.inventory.slots[b-1];if(null!=c){var d=-1,e=!1;switch(c.type){case ItemType.HELM:null!=legacyGame.equipment.helm()&&(d=0);break;case ItemType.SHOULDERS:null!=legacyGame.equipment.shoulders()&&(d=1);break;case ItemType.CHEST:null!=legacyGame.equipment.chest()&&(d=2);break;case ItemType.LEGS:null!=legacyGame.equipment.legs()&&(d=3);break;case ItemType.WEAPON:null!=legacyGame.equipment.weapon()&&(d=4);break;case ItemType.GLOVES:null!=legacyGame.equipment.gloves()&&
(d=5);break;case ItemType.BOOTS:null!=legacyGame.equipment.boots()&&(d=6);break;case ItemType.TRINKET:if(null!=legacyGame.equipment.trinket1()||null!=legacyGame.equipment.trinket2())d=7,null!=legacyGame.equipment.trinket1()&&null!=legacyGame.equipment.trinket2()&&(e=!0);break;case ItemType.OFF_HAND:null!=legacyGame.equipment.off_hand()&&(d=9)}d=legacyGame.equipment.slots[d];if(e)var f=legacyGame.equipment.trinket2();e=a.getBoundingClientRect();legacyGame.tooltipManager.displayItemTooltip(c,d,f,e.left,
e.top,!0)}}function inventoryItemReset(a,b){$("#itemTooltip").hide();$("#itemCompareTooltip").hide();$("#itemCompareTooltip2").hide();$("#inventoryItem"+b).css("z-index","1")}function inventoryItemClick(a,b,c){1==c.shiftKey?(legacyGame.inventory.sellItem(b-1),$("#itemTooltip").hide()):1==c.which&&(slotTypeSelected=SLOT_TYPE.INVENTORY,slotNumberSelected=b,$("#inventoryItem"+b).position(),$("#inventoryItem"+b).css("z-index","200"))}function sellAllButtonClick(){legacyGame.inventory.sellAll()}
function equipInventoryItem(a,b){1==a.altKey?legacyGame.equipment.equipSecondTrinket(legacyGame.inventory.slots[b-1],b-1):legacyGame.equipment.equipItem(legacyGame.inventory.slots[b-1],b-1)}function equipItemRightClick(a,b){legacyGame.equipment.unequipItem(b-1)}var sellButtonActive=!1;function sellButtonHover(a){sellButtonActive||a.setAttribute("src","includes/images/sellButtonHover.png")}function sellButtonReset(a){sellButtonActive||a.setAttribute("src","includes/images/sellButton.png")}
function sellButtonClick(a){sellButtonActive?(sellButtonActive=!1,a.setAttribute("src","includes/images/sellButtonHover.png")):(sellButtonActive=!0,a.setAttribute("src","includes/images/sellButtonDown.png"))}function levelUpButtonHover(){$("#levelUpButton").css("background",'url("includes/images/stoneButton1.png") 0 75px')}function levelUpButtonReset(){$("#levelUpButton").css("background",'url("includes/images/stoneButton1.png") 0 0px')}
function levelUpButtonClick(){$("#levelUpButton").css("background",'url("includes/images/stoneButton1.png") 0 50px');legacyGame.displayLevelUpWindow()}var characterWindowShown=!1,mercenariesWindowShown=!1,upgradesWindowShown=!1,questsWindowShown=!1,inventoryWindowShown=!1,fbOnDemandOptionsShown=!1,fbExtraStatsWindowShown=!1,fbCombatLogWindowShown=!1;
function characterWindowButtonHover(a){$(".characterWindowButton").css("background",'url("includes/images/windowButtons.png") 117px 78px');legacyGame.tooltipManager.displayBasicTooltip(a,"Character")}function characterWindowButtonClick(a){characterWindowShown?($("#characterWindow").hide(),characterWindowShown=!1):(updateWindowDepths(document.getElementById("characterWindow")),$("#characterWindow").show(),characterWindowShown=!0)}
function characterWindowButtonReset(a){$(".characterWindowButton").css("background",'url("includes/images/windowButtons.png") 0px 78px');$("#basicTooltip").hide()}function mercenariesWindowButtonHover(a){$(".mercenariesWindowButton").css("background",'url("includes/images/windowButtons.png") 117px 117px');legacyGame.tooltipManager.displayBasicTooltip(a,"Mercenaries")}
function mercenariesWindowButtonClick(a){mercenariesWindowShown?($("#mercenariesWindow").hide(),mercenariesWindowShown=!1):($("#mercenariesWindow").show(),mercenariesWindowShown=!0,updateWindowDepths(document.getElementById("mercenariesWindow")))}function mercenariesWindowButtonReset(a){$(".mercenariesWindowButton").css("background",'url("includes/images/windowButtons.png") 0px 117px');$("#basicTooltip").hide()}
function upgradesWindowButtonHover(a){$("#upgradesWindowButtonGlow").css("background",'url("includes/images/windowButtons.png") 39px 0');$(".upgradesWindowButton").css("background",'url("includes/images/windowButtons.png") 117px 0');legacyGame.tooltipManager.displayBasicTooltip(a,"Upgrades")}
function upgradesWindowButtonClick(a){legacyGame.upgradeManager.stopGlowingUpgradesButton();upgradesWindowShown?($("#upgradesWindow").hide(),upgradesWindowShown=!1):($("#upgradesWindow").show(),upgradesWindowShown=!0,updateWindowDepths(document.getElementById("upgradesWindow")))}
function upgradesWindowButtonReset(a){$("#upgradesWindowButtonGlow").css("background",'url("includes/images/windowButtons.png") 78px 0');$(".upgradesWindowButton").css("background",'url("includes/images/windowButtons.png") 0px 0');$("#basicTooltip").hide()}
function questsWindowButtonHover(a){$("#questsWindowButtonGlow").css("background",'url("includes/images/windowButtons.png") 39px 195px');$(".questsWindowButton").css("background",'url("includes/images/windowButtons.png") 117px 195px');legacyGame.tooltipManager.displayBasicTooltip(a,"Quests")}
function questsWindowButtonClick(a){legacyGame.questsManager.stopGlowingQuestsButton();questsWindowShown?($("#questsWindow").hide(),questsWindowShown=!1):($("#questsWindow").show(),questsWindowShown=!0,updateWindowDepths(document.getElementById("questsWindow")))}
function questsWindowButtonReset(a){$("#questsWindowButtonGlow").css("background",'url("includes/images/windowButtons.png") 78px 195px');$(".questsWindowButton").css("background",'url("includes/images/windowButtons.png") 0px 195px');$("#basicTooltip").hide()}function questNameClick(a){legacyGame.questsManager.selectedQuest=a}var inventoryWindowVisible=!1;
function inventoryWindowButtonHover(a){$(".inventoryWindowButton").css("background",'url("includes/images/windowButtons.png") 117px 39px');legacyGame.tooltipManager.displayBasicTooltip(a,"Inventory")}function inventoryWindowButtonClick(a){inventoryWindowShown?($("#inventoryWindow").hide(),inventoryWindowShown=!1):(updateWindowDepths(document.getElementById("inventoryWindow")),$("#inventoryWindow").show(),inventoryWindowShown=!0)}
function inventoryWindowButtonReset(a){$(".inventoryWindowButton").css("background",'url("includes/images/windowButtons.png") 0px 39px');$("#basicTooltip").hide()}function closeButtonHover(a){a.style.background='url("includes/images/closeButton.png") 14px 0'}
function closeButtonClick(a){switch(a.id){case "statUpgradesWindowCloseButton":$("#statUpgradesWindow").hide();$("#levelUpButton").show();break;case "abilityUpgradesWindowCloseButton":$("#abilityUpgradesWindow").hide();$("#levelUpButton").show();break;case "updatesWindowCloseButton":$("#updatesWindow").hide();break;case "statsWindowCloseButton":$("#statsWindow").hide();break;case "optionsWindowCloseButton":$("#optionsWindow").hide();break;case "characterWindowCloseButton":$("#characterWindow").hide();
characterWindowShown=!1;break;case "mercenariesWindowCloseButton":$("#mercenariesWindow").hide();mercenariesWindowShown=!1;break;case "upgradesWindowCloseButton":$("#upgradesWindow").hide();upgradesWindowShown=!1;break;case "questsWindowCloseButton":$("#questsWindow").hide();questsWindowShown=!1;break;case "inventoryWindowCloseButton":$("#inventoryWindow").hide();inventoryWindowShown=!1;break;case "fbOnDemandOptionsCloseButton":$("#fbOnDemandOptions").hide();fbOnDemandOptionsShown=!1;break;case "fbExtraStatsCloseButton":$("#fbExtraStatsWindow").hide();
fbExtraStatsWindowShown=!1;break;case "fbCombatLogCloseButton":$("#fbCombatLogWindow").hide(),fbCombatLogWindowShown=!1}}function closeButtonReset(a){a.style.background='url("includes/images/closeButton.png") 0 0'}var WindowOrder=["characterWindow","mercenariesWindow","upgradesWindow","questsWindow","inventoryWindow"],WindowIds=["characterWindow","mercenariesWindow","upgradesWindow","questsWindow","inventoryWindow"];
function updateWindowDepths(a){for(var b=0;b<WindowOrder.length;b++)if(WindowOrder[b]==a.id){WindowOrder.splice(b,1);break}WindowOrder.push(a.id);for(b=0;b<WindowOrder.length;b++)document.getElementById(WindowOrder[b]).style.zIndex=5+b}
function footmanBuyButtonMouseOver(a){$("#footmanBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 92px');$("#otherTooltipTitle").html("Footman");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("GPS: "+legacyGame.mercenaryManager.getMercenaryBaseGps(MercenaryType.FOOTMAN));$("#otherTooltip").show();a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top-70);var b=document.getElementById("otherTooltip").scrollWidth;
$("#otherTooltip").css("left",a.left-b-40)}function footmanBuyButtonMouseDown(a){$("#footmanBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 46px');legacyGame.mercenaryManager.purchaseMercenary(MercenaryType.FOOTMAN)}function footmanBuyButtonMouseOut(a){$("#footmanBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 0');$("#otherTooltip").hide()}
function clericBuyButtonMouseOver(a){$("#clericBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 92px');$("#otherTooltipTitle").html("Cleric");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("GPS: "+legacyGame.mercenaryManager.getMercenaryBaseGps(MercenaryType.CLERIC).formatMoney()+"<br>Clerics increase your hp5 by "+legacyGame.mercenaryManager.getClericHp5PercentBonus()+"%.");$("#otherTooltip").show();a=a.getBoundingClientRect();
$("#otherTooltip").css("top",a.top-70);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",a.left-b-40)}function clericBuyButtonMouseDown(a){$("#clericBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 46px');legacyGame.mercenaryManager.purchaseMercenary(MercenaryType.CLERIC)}function clericBuyButtonMouseOut(a){$("#clericBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 0');$("#otherTooltip").hide()}
function commanderBuyButtonMouseOver(a){$("#commanderBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 92px');$("#otherTooltipTitle").html("Commander");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("GPS: "+legacyGame.mercenaryManager.getMercenaryBaseGps(MercenaryType.COMMANDER).formatMoney()+"<br>Commanders increase your health by "+legacyGame.mercenaryManager.getCommanderHealthPercentBonus()+"%.");$("#otherTooltip").show();
a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top-70);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",a.left-b-40)}function commanderBuyButtonMouseDown(a){$("#commanderBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 46px');legacyGame.mercenaryManager.purchaseMercenary(MercenaryType.COMMANDER)}
function commanderBuyButtonMouseOut(a){$("#commanderBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 0');$("#otherTooltip").hide()}
function mageBuyButtonMouseOver(a){$("#mageBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 92px');$("#otherTooltipTitle").html("Mage");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("GPS: "+legacyGame.mercenaryManager.getMercenaryBaseGps(MercenaryType.MAGE).formatMoney()+"<br>Mages increase your damage by "+legacyGame.mercenaryManager.getMageDamagePercentBonus()+"%.");$("#otherTooltip").show();a=a.getBoundingClientRect();
$("#otherTooltip").css("top",a.top-70);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",a.left-b-40)}function mageBuyButtonMouseDown(a){$("#mageBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 46px');legacyGame.mercenaryManager.purchaseMercenary(MercenaryType.MAGE)}function mageBuyButtonMouseOut(a){$("#mageBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 0');$("#otherTooltip").hide()}
function assassinBuyButtonMouseOver(a){$("#assassinBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 92px');$("#otherTooltipTitle").html("Assassin");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("GPS: "+legacyGame.mercenaryManager.getMercenaryBaseGps(MercenaryType.ASSASSIN).formatMoney()+"<br>Assassins increase your evasion by "+legacyGame.mercenaryManager.getAssassinEvasionPercentBonus()+"%.");$("#otherTooltip").show();
a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top-70);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",a.left-b-40)}function assassinBuyButtonMouseDown(a){$("#assassinBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 46px');legacyGame.mercenaryManager.purchaseMercenary(MercenaryType.ASSASSIN)}
function assassinBuyButtonMouseOut(a){$("#assassinBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 0');$("#otherTooltip").hide()}
function warlockBuyButtonMouseOver(a){$("#warlockBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 92px');$("#otherTooltipTitle").html("Warlock");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("GPS: "+legacyGame.mercenaryManager.getMercenaryBaseGps(MercenaryType.WARLOCK).formatMoney()+"<br>Warlocks increase your critical strike damage by "+legacyGame.mercenaryManager.getWarlockCritDamageBonus()+"%.");$("#otherTooltip").show();
a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top-70);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",a.left-b-40)}function warlockBuyButtonMouseDown(a){$("#warlockBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 46px');legacyGame.mercenaryManager.purchaseMercenary(MercenaryType.WARLOCK)}
function warlockBuyButtonMouseOut(a){$("#warlockBuyButton").css("background",'url("includes/images/buyButtonBase.png") 0 0');$("#otherTooltip").hide()}
function statUpgradeButtonHover(a,b){a.style.background='url("includes/images/buyButtonBase.png") 0 92px';switch(legacyGame.statUpgradesManager.upgrades[0][b-1].type){case StatUpgradeType.DAMAGE:$("#otherTooltipTitle").html("Damage");$("#otherTooltipDescription").html("Increases the damage you deal with basic attacks.");break;case StatUpgradeType.STRENGTH:$("#otherTooltipTitle").html("Strength");$("#otherTooltipDescription").html("Increases your Health by 5 and Damage by 1%.");break;case StatUpgradeType.AGILITY:$("#otherTooltipTitle").html("Agility");
$("#otherTooltipDescription").html("Increases your Crit Damage by 0.2% and Evasion by 1%.");break;case StatUpgradeType.STAMINA:$("#otherTooltipTitle").html("Stamina");$("#otherTooltipDescription").html("Increases your Hp5 by 1 and your Armour by 1%.");break;case StatUpgradeType.ARMOUR:$("#otherTooltipTitle").html("Armour");$("#otherTooltipDescription").html("Reduces the damage you take from monsters.");break;case StatUpgradeType.EVASION:$("#otherTooltipTitle").html("Evasion");$("#otherTooltipDescription").html("Increases your chance to dodge a monster's attack.");
break;case StatUpgradeType.HP5:$("#otherTooltipTitle").html("Hp5");$("#otherTooltipDescription").html("The amount of health you regenerate over 5 seconds.");break;case StatUpgradeType.CRIT_DAMAGE:$("#otherTooltipTitle").html("Crit Damage");$("#otherTooltipDescription").html("The amount of damage your critical strikes will cause");break;case StatUpgradeType.ITEM_RARITY:$("#otherTooltipTitle").html("Item Rarity");$("#otherTooltipDescription").html("Increases the chance that rarer items will drop from monsters");
break;case StatUpgradeType.EXPERIENCE_GAIN:$("#otherTooltipTitle").html("Experience Gain");$("#otherTooltipDescription").html("Increases the experience earned from killing monsters");break;case StatUpgradeType.GOLD_GAIN:$("#otherTooltipTitle").html("Gold Gain"),$("#otherTooltipDescription").html("Increases the gold gained from monsters and mercenaries")}$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltip").show();var c=a.getBoundingClientRect();$("#otherTooltip").css("top",
c.top-70);var d=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",c.left-d-40)}
function statUpgradeButtonClick(a,b){a.style.background='url("includes/images/buyButtonBase.png") 0 46px';$("#statUpgradesWindow").hide();var c=legacyGame.statUpgradesManager.upgrades[0][b-1];switch(c.type){case StatUpgradeType.DAMAGE:legacyGame.player.chosenLevelUpBonuses.damageBonus+=c.amount;break;case StatUpgradeType.STRENGTH:legacyGame.player.chosenLevelUpBonuses.strength+=c.amount;break;case StatUpgradeType.AGILITY:legacyGame.player.chosenLevelUpBonuses.agility+=c.amount;break;case StatUpgradeType.STAMINA:legacyGame.player.chosenLevelUpBonuses.stamina+=
c.amount;break;case StatUpgradeType.ARMOUR:legacyGame.player.chosenLevelUpBonuses.armour+=c.amount;break;case StatUpgradeType.EVASION:legacyGame.player.chosenLevelUpBonuses.evasion+=c.amount;break;case StatUpgradeType.HP5:legacyGame.player.chosenLevelUpBonuses.hp5+=c.amount;break;case StatUpgradeType.CRIT_DAMAGE:legacyGame.player.chosenLevelUpBonuses.critDamage+=c.amount;break;case StatUpgradeType.ITEM_RARITY:legacyGame.player.chosenLevelUpBonuses.itemRarity+=c.amount;break;case StatUpgradeType.EXPERIENCE_GAIN:legacyGame.player.chosenLevelUpBonuses.experienceGain+=
c.amount;break;case StatUpgradeType.GOLD_GAIN:legacyGame.player.chosenLevelUpBonuses.goldGain+=c.amount}legacyGame.statUpgradesManager.upgrades.splice(0,1);legacyGame.player.skillPoints--;legacyGame.player.skillPointsSpent++}function statUpgradeButtonReset(a){a.style.background='url("includes/images/buyButtonBase.png") 0 0';$("#otherTooltip").hide()}
function rendUpgradeButtonHover(a){a.style.background='url("includes/images/buyButtonBase.png") 0 92px';$("#abilityUpgradeTooltipTitle").html("Rend");$("#abilityUpgradeTooltipCooldown").html("");0<legacyGame.player.abilities.getRendLevel()?($("#abilityUpgradeTooltipLevel").html("Level "+legacyGame.player.abilities.getRendLevel()),$("#abilityUpgradeTooltipDescription").html('Your attacks cause your opponent to bleed for <span class="yellowText">'+legacyGame.player.abilities.getRendDamage(0)+"</span> damage after every round for "+
legacyGame.player.abilities.rendDuration+" rounds. Stacks up to 5 times."),$("#abilityUpgradeTooltipLevel2").html("Next Level")):($("#abilityUpgradeTooltipLevel").html(""),$("#abilityUpgradeTooltipDescription").html(""),$("#abilityUpgradeTooltipLevel2").html("Level 1"));$("#abilityUpgradeTooltipDescription2").html('Your attacks cause your opponent to bleed for <span class="yellowText">'+legacyGame.player.abilities.getRendDamage(1)+"</span> damage after every round for "+legacyGame.player.abilities.rendDuration+
" rounds. Stacks up to 5 times.");$("#abilityUpgradeTooltip").show();a=a.getBoundingClientRect();$("#abilityUpgradeTooltip").css("top",a.top-70);var b=document.getElementById("abilityUpgradeTooltip").scrollWidth;$("#abilityUpgradeTooltip").css("left",a.left-b-40)}function rendUpgradeButtonClick(a){a.style.background='url("includes/images/buyButtonBase.png") 0 46px';$("#abilityUpgradesWindow").hide();legacyGame.player.increaseAbilityPower(AbilityName.REND)}
function rendUpgradeButtonReset(a){a.style.background='url("includes/images/buyButtonBase.png") 0 0';$("#abilityUpgradeTooltip").hide()}
function rejuvenatingStrikesUpgradeButtonHover(a){a.style.background='url("includes/images/buyButtonBase.png") 0 92px';$("#abilityUpgradeTooltipTitle").html("Rejuvenating Strikes");$("#abilityUpgradeTooltipCooldown").html("");0<legacyGame.player.abilities.getRejuvenatingStrikesLevel()?($("#abilityUpgradeTooltipLevel").html("Level "+legacyGame.player.abilities.getRejuvenatingStrikesLevel()),$("#abilityUpgradeTooltipDescription").html('Your attacks heal you for <span class="greenText">'+legacyGame.player.abilities.getRejuvenatingStrikesHealAmount(0)+
"</span> health."),$("#abilityUpgradeTooltipLevel2").html("Next Level")):($("#abilityUpgradeTooltipLevel").html(""),$("#abilityUpgradeTooltipDescription").html(""),$("#abilityUpgradeTooltipLevel2").html("Level 1"));$("#abilityUpgradeTooltipDescription2").html('Your attacks heal you for <span class="greenText">'+legacyGame.player.abilities.getRejuvenatingStrikesHealAmount(1)+"</span> health.");$("#abilityUpgradeTooltip").show();a=a.getBoundingClientRect();$("#abilityUpgradeTooltip").css("top",a.top+
10);var b=document.getElementById("abilityUpgradeTooltip").scrollWidth;$("#abilityUpgradeTooltip").css("left",a.left-b-10)}function rejuvenatingStrikesUpgradeButtonClick(a){a.style.background='url("includes/images/buyButtonBase.png") 0 46px';$("#abilityUpgradesWindow").hide();legacyGame.player.increaseAbilityPower(AbilityName.REJUVENATING_STRIKES)}
function rejuvenatingStrikesUpgradeButtonReset(a){a.style.background='url("includes/images/buyButtonBase.png") 0 0';$("#abilityUpgradeTooltip").hide()}
function iceBladeUpgradeButtonHover(a){a.style.background='url("includes/images/buyButtonBase.png") 0 92px';$("#abilityUpgradeTooltipTitle").html("Ice Blade");$("#abilityUpgradeTooltipCooldown").html("");0<legacyGame.player.abilities.getIceBladeLevel()?($("#abilityUpgradeTooltipLevel").html("Level "+legacyGame.player.abilities.getIceBladeLevel()),$("#abilityUpgradeTooltipDescription").html('Your attacks deal <span class="yellowText">'+legacyGame.player.abilities.getIceBladeDamage(0)+"</span> bonus damage and chill them for "+
legacyGame.player.abilities.iceBladeChillDuration+" rounds."),$("#abilityUpgradeTooltipLevel2").html("Next Level")):($("#abilityUpgradeTooltipLevel").html(""),$("#abilityUpgradeTooltipDescription").html(""),$("#abilityUpgradeTooltipLevel2").html("Level 1"));$("#abilityUpgradeTooltipDescription2").html('Your attacks deal <span class="yellowText">'+legacyGame.player.abilities.getIceBladeDamage(1)+"</span> damage and chill them for "+legacyGame.player.abilities.iceBladeChillDuration+" rounds.");$("#abilityUpgradeTooltip").show();
a=a.getBoundingClientRect();$("#abilityUpgradeTooltip").css("top",a.top+10);var b=document.getElementById("abilityUpgradeTooltip").scrollWidth;$("#abilityUpgradeTooltip").css("left",a.left-b-10)}function iceBladeUpgradeButtonClick(a){a.style.background='url("includes/images/buyButtonBase.png") 0 46px';$("#abilityUpgradesWindow").hide();legacyGame.player.increaseAbilityPower(AbilityName.ICE_BLADE)}
function iceBladeUpgradeButtonReset(a){a.style.background='url("includes/images/buyButtonBase.png") 0 0';$("#abilityUpgradeTooltip").hide()}
function fireBladeUpgradeButtonHover(a){a.style.background='url("includes/images/buyButtonBase.png") 0 92px';$("#abilityUpgradeTooltipTitle").html("Fire Blade");$("#abilityUpgradeTooltipCooldown").html("");0<legacyGame.player.abilities.getFireBladeLevel()?($("#abilityUpgradeTooltipLevel").html("Level "+legacyGame.player.abilities.getFireBladeLevel()),$("#abilityUpgradeTooltipDescription").html('Your attacks deal <span class="yellowText">'+legacyGame.player.abilities.getFireBladeDamage(0)+'</span> bonus damage and burn them for <span class="yellowText">'+
legacyGame.player.abilities.getFireBladeBurnDamage(0)+"</span> damage after every round for "+legacyGame.player.abilities.fireBladeBurnDuration+" rounds."),$("#abilityUpgradeTooltipLevel2").html("Next Level")):($("#abilityUpgradeTooltipLevel").html(""),$("#abilityUpgradeTooltipDescription").html(""),$("#abilityUpgradeTooltipLevel2").html("Level 1"));$("#abilityUpgradeTooltipDescription2").html('Your attacks deal <span class="yellowText">'+legacyGame.player.abilities.getFireBladeDamage(1)+'</span> bonus damage and burn them for <span class="yellowText">'+
legacyGame.player.abilities.getFireBladeBurnDamage(1)+"</span> damage after every round for "+legacyGame.player.abilities.fireBladeBurnDuration+" rounds.");$("#abilityUpgradeTooltip").show();a=a.getBoundingClientRect();$("#abilityUpgradeTooltip").css("top",a.top+10);var b=document.getElementById("abilityUpgradeTooltip").scrollWidth;$("#abilityUpgradeTooltip").css("left",a.left-b-10)}
function fireBladeUpgradeButtonClick(a){a.style.background='url("includes/images/buyButtonBase.png") 0 46px';$("#abilityUpgradesWindow").hide();legacyGame.player.increaseAbilityPower(AbilityName.FIRE_BLADE)}function fireBladeUpgradeButtonReset(a){a.style.background='url("includes/images/buyButtonBase.png") 0 0';$("#abilityUpgradeTooltip").hide()}function expBarAreaMouseOver(){$("#expBarText").show()}function expBarAreaMouseOut(){legacyGame.options.alwaysDisplayExp||$("#expBarText").hide()}
function playerHealthBarAreaMouseOver(){$("#playerHealthBarText").show()}function playerHealthBarAreaMouseOut(){legacyGame.options.alwaysDisplayPlayerHealth||$("#playerHealthBarText").hide()}function monsterHealthBarAreaMouseOver(){legacyGame.displayMonsterHealth=!0}function monsterHealthBarAreaMouseOut(){legacyGame.options.alwaysDisplayMonsterHealth||(legacyGame.displayMonsterHealth=!1)}
function bleedingIconMouseOver(a){$("#otherTooltipTitle").html("Bleeding");$("#otherTooltipCooldown").html(legacyGame.monster.debuffs.bleedMaxDuration-legacyGame.monster.debuffs.bleedDuration+" rounds remaining");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("This monster is bleeding, causing damage at the end of every round");$("#otherTooltip").show();a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top+10);var b=document.getElementById("otherTooltip").scrollWidth;
$("#otherTooltip").css("left",a.left-b-10)}function bleedingIconMouseOut(){$("#otherTooltip").hide()}
function burningIconMouseOver(a){$("#otherTooltipTitle").html("Burning");$("#otherTooltipCooldown").html(legacyGame.monster.debuffs.burningMaxDuration-legacyGame.monster.debuffs.burningDuration+" rounds remaining");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("This monster is burning, causing damage at the end of every round");$("#otherTooltip").show();a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top+10);var b=document.getElementById("otherTooltip").scrollWidth;
$("#otherTooltip").css("left",a.left-b-10)}function burningIconMouseOut(){$("#otherTooltip").hide()}
function chilledIconMouseOver(a){$("#otherTooltipTitle").html("Chilled");$("#otherTooltipCooldown").html(legacyGame.monster.debuffs.chillMaxDuration-legacyGame.monster.debuffs.chillDuration+" rounds remaining");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("This monster is chilled, causing it to attack twice as slow");$("#otherTooltip").show();a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top+10);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",
a.left-b-10)}function chilledIconMouseOut(){$("#otherTooltip").hide()}function damageBonusStatHover(a){$("#otherTooltipTitle").html("Damage Bonus");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases the damage you deal with basic attacks.");$("#otherTooltip").show();setTooltipLocation(a)}
function hp5StatHover(a){$("#otherTooltipTitle").html("Hp5");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("The amount of health you regenerate over 5 seconds.");$("#otherTooltip").show();setTooltipLocation(a)}
function armourStatHover(a){$("#otherTooltipTitle").html("Armour");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Reduces the damage you take from monsters.");$("#otherTooltip").show();setTooltipLocation(a)}
function evasionStatHover(a){$("#otherTooltipTitle").html("Evasion");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases your chance to dodge a monster's attack.");$("#otherTooltip").show();setTooltipLocation(a)}
function strengthStatHover(a){$("#otherTooltipTitle").html("Strength");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases your Health by 5 and Damage by 1%.");$("#otherTooltip").show();setTooltipLocation(a)}
function agilityStatHover(a){$("#otherTooltipTitle").html("Agility");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases your Crit Damage by 0.2% and Evasion by 1%.");$("#otherTooltip").show();setTooltipLocation(a)}
function staminaStatHover(a){$("#otherTooltipTitle").html("Stamina");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases your Hp5 by 1 and Armour by 1%.");$("#otherTooltip").show();setTooltipLocation(a)}
function critChanceStatHover(a){$("#otherTooltipTitle").html("Crit Chance");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases your chance to get a critical strike.");$("#otherTooltip").show();setTooltipLocation(a)}
function critDamageStatHover(a){$("#otherTooltipTitle").html("Crit Damage");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("The amount of damage your critical strikes will cause.");$("#otherTooltip").show();setTooltipLocation(a)}
function itemRarityStatHover(a){$("#otherTooltipTitle").html("Item Rarity");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases the chance that rarer items will drop from monsters.");$("#otherTooltip").show();setTooltipLocation(a)}
function goldGainStatHover(a){$("#otherTooltipTitle").html("Gold Gain");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases the gold gained from monsters and mercenaries.");$("#otherTooltip").show();setTooltipLocation(a)}
function expGainStatHover(a){$("#otherTooltipTitle").html("Experience Gain");$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html("Increases the experience earned from killing monsters.");$("#otherTooltip").show();setTooltipLocation(a)}function setTooltipLocation(a){a=a.getBoundingClientRect();$("#otherTooltip").css("top",a.top+10);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",a.left-b-10)}
function statTooltipReset(){$("#otherTooltip").hide()}var updatesWindowShown=!1,statsWindowShown=!1,optionsWindowShown=!1;function updatesWindowButtonClick(){updatesWindowShown?(updatesWindowShown=!1,$("#updatesWindow").hide()):(updatesWindowShown=!0,optionsWindowShown=statsWindowShown=!1,$("#updatesWindow").show(),$("#statsWindow").hide(),$("#optionsWindow").hide())}
function statsWindowButtonClick(){statsWindowShown?(statsWindowShown=!1,$("#statsWindow").hide()):(updatesWindowShown=!1,statsWindowShown=!0,optionsWindowShown=!1,$("#updatesWindow").hide(),$("#statsWindow").show(),$("#optionsWindow").hide())}function fbOptionsWindowButtonClick(){fbOnDemandOptionsShown?(fbOnDemandOptionsShown=!1,$("#fbOnDemandOptions").hide()):(fbOnDemandOptionsShown=!0,$("#fbOnDemandOptions").show())}
function fbStatsWindowButtonClick(){fbExtraStatsWindowShown?(fbExtraStatsWindowShown=!1,$("#fbExtraStatsWindow").hide()):(fbExtraStatsWindowShown=!0,$("#fbExtraStatsWindow").show())}function fbCombatLogWindowButtonClick(){fbCombatLogWindowShown?(fbCombatLogWindowShown=!1,$("#fbCombatLogWindow").hide()):(fbCombatLogWindowShown=!0,$("#fbCombatLogWindow").show())}
function optionsWindowButtonClick(){optionsWindowShown?(optionsWindowShown=!1,$("#optionsWindow").hide()):(statsWindowShown=updatesWindowShown=!1,optionsWindowShown=!0,$("#updatesWindow").hide(),$("#statsWindow").hide(),$("#optionsWindow").show())}function saveButtonClick(){legacyGame.save()}var fullReset=!1;
function resetButtonClick(){fullReset=!1;var a=legacyGame.calculatePowerShardReward();document.getElementById("resetDescription").innerHTML="This will erase all progress and not be recoverable. Are you sure you want to reset?";$("#resetConfirmWindowPowerShard").show();document.getElementById("powerShardsDescription").innerHTML="You will earn {0} Power Shards and {1}% overall bonus from resetting.".format(a,legacyGame.player.level-1);$("#powerShardsDescription").show();$("#resetConfirmWindow").show()}
function resetConfirmWindowYesButtonClick(){$("#resetConfirmWindow").hide();if(fullReset)legacyGame.reset();else{var a=legacyGame.player.powerShards+legacyGame.calculatePowerShardReward();legacyGame.reset();legacyGame.player.powerShards=a}}function resetConfirmWindowNoButtonClick(){$("#resetConfirmWindow").hide()}
function fullResetButtonClick(){fullReset=!0;document.getElementById("resetDescription").innerHTML="This will erase all progress and not be recoverable, including Power Shards. Are you sure you want to reset?";$("#resetConfirmWindowPowerShard").hide();$("#powerShardsDescription").hide();$("#resetConfirmWindow").show()}function optionsWindowExitButtonClick(){$("#optionsWindow").hide()}
function fbUpdateMouseOver(){var a=game.getVersionCheckData();if(void 0!==a){$("#otherTooltipTitle").html(a.changeTitle);$("#otherTooltipCooldown").html("");$("#otherTooltipLevel").html("");$("#otherTooltipDescription").html(a.changeDetails);$("#otherTooltip").show();a=document.getElementById("fbUpdate").getBoundingClientRect();$("#otherTooltip").css("top",a.top+10);var b=document.getElementById("otherTooltip").scrollWidth;$("#otherTooltip").css("left",a.left-b-40)}}
function fbUpdateMouseOut(){$("#otherTooltip").hide()}
declare("Save",function(){function a(){c.construct(this);this.stateName="endlessSave"}var b=include("Log","save"),c=include("CoreSave","save");a.prototype=c.prototype();a.prototype.$super=parent;a.prototype.constructor=a;a.prototype.doSave=function(a){var b=this.getStorageKey();localStorage[b]=a;return!0};a.prototype.doLoad=function(){var a=this.getStorageKey();return localStorage[a]};a.prototype.doGetSize=function(){var a=this.getStorageKey();return void 0!==localStorage[a]?localStorage[a].length:
0};a.prototype.getLocalStorageSize=function(){var a=3072,b;for(b in localStorage)a+=16*(b.length+localStorage[b].length);return a};a.prototype.debugLocalStorage=function(){for(var a in localStorage)b.debug(a+": "+localStorage[a].length)};return new a});declare("SaveKeys",function(){return{idnSettingsInternalInfoToConsole:"N495450445",idnSettingsInternalWarningToConsole:"N89912178",idnSettingsInternalLogContexts:"N1557983302"}});
declare("Settings",function(){function a(){b.construct(this);this.id="Settings";this.logContextDefaultValue=!0;c.register(this,d.idnSettingsInternalInfoToConsole).asBool().withDefault(!1);c.register(this,d.idnSettingsInternalWarningToConsole).asBool().withDefault(!1);c.register(this,d.idnSettingsInternalLogContexts).asJson()}var b=include("Component","settings"),c=include("Save","settings"),d=include("SaveKeys","settings");a.prototype=b.prototype();a.prototype.$super=parent;a.prototype.constructor=
a;a.prototype.componentInit=a.prototype.init;a.prototype.init=function(a){this.componentInit()};a.prototype.componentUpdate=a.prototype.update;a.prototype.update=function(a){return!0!==this.componentUpdate(a)?!1:!0};a.prototype.getLogContextEnabled=function(a){return void 0!==this[d.idnSettingsInternalLogContexts][a]?this[d.idnSettingsInternalLogContexts][a]:this.logContextDefaultValue};a.prototype.setLogContextEnabled=function(a,b){void 0===this[d.idnSettingsInternalLogContexts][a]&&(this[d.idnSettingsInternalLogContexts][a]=
this.logContextDefaultValue);this[d.idnSettingsInternalLogContexts][a]=b};return new a});
declare("StaticData",function(){function a(){b.construct(this);this.id="StaticData";this.versionFile="version.txt";this.versionInfoFile="versionInfo.txt";this.EventCombatHit="eventCombatHit";this.EventCombatDeath="eventCombatDeath";this.EventXpGain="eventXpGain";this.EventGoldGain="eventGoldGain";this.EventItemGain="eventItemGain";this.GoldSourceLoot="goldSourceLoot";this.GoldSourceMercenary="goldSourceMercenary"}var b=include("Component","staticData");a.prototype=b.prototype();a.prototype.$super=
parent;a.prototype.constructor=a;a.prototype.setRoot=function(a){this.imageRoot=a+"images/";this.imageRootInterface=this.imageRoot+"interface/";this.imageRootIcon=this.imageRoot+"icon/"};a.prototype.getImagePath=function(a){return this.imageRoot+a};return new a});
function FrozenUtils(){this.load=function(a,b){loadedValue=localStorage[a];return void 0==localStorage[a]?b:loadedValue};this.loadBool=function(a,b){loadedValue=localStorage[a];return void 0==localStorage[a]?b:"true"==loadedValue};this.loadInt=function(a,b){loadedValue=localStorage[a];return void 0==localStorage[a]?b:parseInt(loadedValue)};this.loadFloat=function(a,b){loadedValue=localStorage[a];return void 0==localStorage[a]?b:parseFloat(loadedValue)};this.pad=function(a,b,c){a+="";return a.length>=
b?a:Array(b-a.length+1).join(c||"0")+a};this.timeDisplay=function(a,b){if(0===a||a==Number.POSITIVE_INFINITY)return"~~";var c=Math.floor(a),d,e,f;d=Math.floor(c/864E5);d=0<d?d+"d ":"";c%=864E5;e=Math.floor(c/36E5);e=0<e?this.pad(e,2)+"h ":"";c%=36E5;f=Math.floor(c/6E4);f=0<f?this.pad(f,2)+"m ":"";c%=6E4;a=Math.floor(c/1E3);a=0<a?this.pad(a,2)+"s ":"";return 1==b?(c%=1E3,c=0<c?this.pad(c,3)+"ms":"",(d+e+f+a+c).trim()):(d+e+f+a).trim()};this.getDayTimeInSeconds=function(){var a=new Date;then=new Date(a.getFullYear(),
a.getMonth(),a.getDate(),0,0,0);return a.getTime()-then.getTime()};this.logFormat=function(a){return"["+this.timeDisplay(Date.now()-this.startTime,!0)+"]:  "+a};this.log=function(a,b){this.notyEnabled&&(void 0==b||b)?noty({text:this.logFormat(a),type:"alert"}):console.log(this.logFormat(a))};this.stackTrace=function(){return Error().stack};this.logError=function(a){this.notyEnabled?noty({text:this.logFormat(a),type:"error"}):alert("Error: "+this.logFormat(a))};this.formatEveryThirdPower=function(a){return function(b){var c=
0,d="";if(1E6<=b&&Number.isFinite(b)){for(b/=1E3;1E3<=Math.round(b);)b/=1E3,c++;if(c>a.length)return"Infinity";d=a[c]}return Math.round(1E3*b)/1E3+d}};this.formatScientificNotation=function(a){if(0===a||!Number.isFinite(a)||1<Math.abs(a)&&100>Math.abs(a))return frozenUtils.formatRaw(a);var b=0<a?"":"-";a=Math.abs(a);var c=Math.floor(Math.log(a)/Math.LN10);a=Math.round(a/Math.pow(10,c)*100)/100;var d=a.toString();a===Math.round(a)?d+=".00":10*a===Math.round(10*a)&&(d+="0");return b+d+"*10^"+c};this.formatRaw=
function(a){return Math.round(1E3*a)/1E3};this.FormatterKeys="Off Raw Name ShortName ShortName2 Scientific".split(" ");this.Formatters={Off:void 0,Raw:this.formatRaw,Name:this.formatEveryThirdPower("; million; billion; trillion; quadrillion; quintillion; sextillion; septillion; octillion; nonillion; decillion".split(";")),ShortName:this.formatEveryThirdPower("; M; B; T; Qa; Qi; Sx; Sp; Oc; No; De".split(";")),ShortName2:this.formatEveryThirdPower("; M; G; T; P; E; Z; Y".split(";")),Scientific:this.formatScientificNotation}}
frozenUtils=new FrozenUtils;declare("TemplateProvider",function(){var a=include("Assert","templateProvider"),b=void 0;return new function(){this.GetTemplate=function(c,d){void 0===b&&(b={});var e;if(void 0!==b[c]){e=b[c];if(void 0!==d){a.isDefined(e);a.isDefined(d);for(var f in d)e=e.replace(new RegExp("{{"+f+"}}","gi"),d[f])}return e}};this.SetTemplate=function(b,d){void 0===d&&(d={});a.isUndefined(d[b]);d[b]=d};this.SetData=function(a){b=a}}});
declare("UserInterface",function(){function a(){b.construct(this);this.id="UserInterface";this.needEquipmentUpdate=this.needInventoryUpdate=!0;this.combatLog=void 0}var b=include("Component","userInterface");include("Save","userInterface");include("SaveKeys","userInterface");var c=include("CombatLog","userInterface");a.prototype=b.prototype();a.prototype.$super=parent;a.prototype.constructor=a;a.prototype.componentInit=a.prototype.init;a.prototype.init=function(){this.componentInit();this.initLegacyInterface();
this.initUpgradeButtons();this.combatLog=c.create();this.combatLog.init(this)};a.prototype.componentUpdate=a.prototype.update;a.prototype.update=function(a){if(!0!==this.componentUpdate(a))return!1;this.updateLegacyInterface(a);this.updateUpdateNotice(a);this.combatLog.update(a);return!0};a.prototype.initLegacyInterface=function(){$("#itemTooltip").hide();$("#itemCompareTooltip").hide();$("#itemCompareTooltip2").hide();$("#otherTooltip").hide();$("#abilityUpgradeTooltip").hide();$("#basicTooltip").hide();
$("#mouseIcon").hide();$("#mercenaryArea").hide();$("#otherArea").hide();$("#inventoryArea").hide();$("#playerHealthBarText").hide();$("#resurrectionBarArea").hide();$("#monsterHealthBarArea").hide();$("#inventoryWindow").hide();$("#characterWindow").hide();$("#mercenariesWindow").hide();$("#upgradesWindow").hide();$("#questsWindow").hide();$("#questTextArea").hide();$("#mapWindow").hide();$("#leaveBattleButton").hide();$("#actionButtonsContainer").hide();$("#actionCooldownsArea").hide();$("#levelUpButton").hide();
$("#expBarText").hide();$("#statUpgradesWindow").hide();$("#abilityUpgradesWindow").hide();$(".bleedingIcon").hide();$(".burningIcon").hide();$(".chilledIcon").hide();$("#attackButton").hide();$("#healButton").hide();$("#iceboltButton").hide();$("#fireballButton").hide();$("#powerStrikeButton").hide();$("#rendCooldownContainer").hide();$("#healCooldownContainer").hide();$("#iceboltCooldownContainer").hide();$("#fireballCooldownContainer").hide();$("#powerStrikeCooldownContainer").hide();$("#checkboxWhite").hide();
$("#checkboxGreen").hide();$("#checkboxBlue").hide();$("#checkboxPurple").hide();$("#checkboxOrange").hide();$("#updatesWindow").hide();$("#statsWindow").hide();$("#optionsWindow").hide();$("#resetConfirmWindow").hide();$(".craftingWindowButton").hide();for(var a=1;11>a;a++)$(".equipItem"+a).draggable({stop:function(a,b){for(var c=b.offset.top,d=b.offset.left,g,l=!1,m=1;m<legacyGame.inventory.maxSlots+1;m++)g=$("#inventoryItem"+m).offset(),d>=g.left&&d<g.left+40&&c>=g.top&&c<g.top+40&&(legacyGame.equipment.unequipItemToSlot(slotNumberSelected-
1,m-1),l=!0);l||8!=slotNumberSelected&&9!=slotNumberSelected||(g=$(".equipItem"+(9==slotNumberSelected?8:9)).offset(),d>=g.left&&d<g.left+40&&c>=g.top&&c<g.top+40&&legacyGame.equipment.swapTrinkets())},revert:!0,scroll:!1,revertDuration:0,cursorAt:{top:0,left:0}});for(a=1;a<legacyGame.inventory.maxSlots+1;a++)$("#inventoryItem"+a).draggable({stop:function(a,b){for(var c=b.offset.top,d=b.offset.left,g,l=!1,m=1;m<legacyGame.inventory.maxSlots+1;m++)m!=slotNumberSelected&&(g=$("#inventoryItem"+m).offset(),
d>=g.left&&d<g.left+40&&c>=g.top&&c<g.top+40&&(legacyGame.inventory.swapItems(slotNumberSelected-1,m-1),l=!0));if(!l)for(m=1;11>m;m++)g=$(".equipItem"+m).offset(),d>=g.left&&d<g.left+40&&c>=g.top&&c<g.top+40&&(legacyGame.equipment.equipItemInSlot(legacyGame.inventory.slots[slotNumberSelected-1],m-1,slotNumberSelected-1),l=!0);l||(g=$("#characterIconArea").offset(),d>=g.left&&d<g.left+124&&mouseY>=c.top&&mouseY<c.top+204&&legacyGame.equipment.equipItem(legacyGame.inventory.slots[slotNumberSelected-
1],slotNumberSelected-1))},revert:!0,scroll:!1,revertDuration:0,cursorAt:{top:0,left:0}});$("#characterWindow").draggable({drag:function(){updateWindowDepths(document.getElementById("characterWindow"))},cancel:".globalNoDrag"});$("#mercenariesWindow").draggable({drag:function(){updateWindowDepths(document.getElementById("mercenariesWindow"))},cancel:".globalNoDrag"});$("#upgradesWindow").draggable({drag:function(){updateWindowDepths(document.getElementById("upgradesWindow"))},cancel:".globalNoDrag"});
$("#questsWindow").draggable({drag:function(){updateWindowDepths(document.getElementById("questsWindow"))},cancel:".globalNoDrag"});$("#inventoryWindow").draggable({drag:function(){updateWindowDepths(document.getElementById("inventoryWindow"))},cancel:".globalNoDrag"})};a.prototype.initUpgradeButtons=function(){for(var a=$("#upgradesBuyArea"),b=0;b<legacyGame.upgradeManager.upgrades.length;b++){var c=legacyGame.upgradeManager.upgrades[b];c.id=b;var k=$('<div id="buyButton{0}" class="buyButton"></div>'.format(c.id));
k.mousedown({id:c.id},function(a){upgradeButtonMouseDown(a.data.id)});k.mouseup({id:c.id},function(a){upgradeButtonMouseOver(a.data.id)});k.mouseover({id:c.id},function(a){upgradeButtonMouseOver(a.data.id)});k.mouseout({id:c.id},function(a){upgradeButtonMouseOut(a.data.id)});var h=$('<div id="upgradePurchaseButton{0}" class="buyButtonArea"></div>'.format(c.id));k.append(h);var g=$('<div class="buyButtonIcon"></div>');g.css({background:'url("includes/images/bigIcons.png") '+c.iconSourceLeft+"px "+
c.iconSourceTop+"px"});h.append(g);g=$('<div class="mercenaryName">{0}</div>'.format(c.name));h.append(g);c=$('<div class="mercenaryAmount">{0}</div>'.format(c.cost.formatMoney(0)));c.css({left:"53px"});h.append(c);c=$('<div class="goldCoin"></div>');c.css({position:"absolute",top:"28px",width:"12px",height:"12px",left:"41px"});h.append(c);a.append(k)}};a.prototype.updateLegacyInterface=function(a){$("#version").text("Version "+game.getCurrentVersion());!0===this.needInventoryUpdate&&this.updateInventory(a);
!0===this.needEquipmentUpdate&&this.updateEquipment(a);0<this.skillPoints&&$("#levelUpButton").show();this.updateGoldDisplay(a);this.updatePlayerAndMonster(a);this.updateBattleDisplay(a);this.updateUpgrades(a)};a.prototype.updateBattleDisplay=function(a){$("#enterBattleButton").text("Enter Battle (Lvl {0})".format(legacyGame.battleLevel));$("#leaveBattleButton").text("Leave Battle (Lvl {0})".format(legacyGame.battleLevel));0<legacyGame.player.skillPoints?($("#levelUpButton").text("Level Up ({0})".format(legacyGame.player.skillPoints)),
$("#levelUpButton").show()):$("#levelUpButton").hide();0==legacyGame.inBattle&&legacyGame.player.alive&&$("#enterBattleButton").css("background",'url("includes/images/stoneButton1.png") 0 0px');!0===legacyGame.inBattle?($("#enterBattleButton").hide(),$("#battleLevelDownButton").hide(),$("#battleLevelUpButton").hide()):($("#enterBattleButton").show(),$("#battleLevelDownButton").show(),$("#battleLevelUpButton").show())};a.prototype.updateInventory=function(a){a=legacyGame.inventory.slots;for(var b=
0;b<a.length;b++){var c=$("#inventoryItem"+(b+1));null!=a[b]?c.css("background",'url("includes/images/itemSheet3.png") '+a[b].iconSourceX+"px "+a[b].iconSourceY+"px"):c.css("background",'url("includes/images/NULL.png")')}};a.prototype.updateEquipment=function(a){a=legacyGame.equipment.slots;for(var b=0;b<a.length;b++){var c=$(".equipItem"+(b+1));null!=a[b]?c.css("background",'url("includes/images/itemSheet3.png") '+a[b].iconSourceX+"px "+a[b].iconSourceY+"px"):c.css("background",'url("includes/images/NULL.png")')}};
a.prototype.updateGoldDisplay=function(a){a=$("#gameArea").width()/2;var b=$("#goldAmount");b.text(legacyGame.player.gold.formatMoney(2));var c=b[0].scrollWidth/2;b.css("left",a-c+"px");$("#goldCoin").css("left",a-c-21+"px");c=legacyGame.mercenaryManager.getGps();b=$("#gps");b.text(c+"gps");c=b[0].scrollWidth/2;b.css("left",a-c+"px");0!==legacyGame.mercenaryManager.gpsReduction?b.css("color","#ff0000"):b.css("color","#ffd800")};a.prototype.updatePlayerAndMonster=function(a){a=$("#playerHealthBar");
a.css("width",198*(legacyGame.player.health/legacyGame.player.getMaxHealth()));a.css("height","23");document.getElementById("playerHealthBarText").innerHTML=Math.floor(legacyGame.player.health)+"/"+Math.floor(legacyGame.player.getMaxHealth());legacyGame.options.alwaysDisplayPlayerHealth?$("#playerHealthBarText").show():$("#playerHealthBarText").hide();a=$("#expBar");a.css("width",legacyGame.player.experience/legacyGame.player.experienceRequired*718);a.css("height","13");document.getElementById("expBarText").innerHTML=
Math.floor(legacyGame.player.experience)+"/"+legacyGame.player.experienceRequired;legacyGame.options.alwaysDisplayExp?$("#expBarText").show():$("#expBarText").hide();a=$("#monsterHealthBar");a.css("width",legacyGame.monster.health/legacyGame.monster.maxHealth*198);a.css("height","23");a.css("color",legacyGame.monsterCreator.getRarityColour(legacyGame.monster.rarity));legacyGame.displayMonsterHealth?document.getElementById("monsterName").innerHTML=Math.floor(legacyGame.monster.health)+"/"+Math.floor(legacyGame.monster.maxHealth):
document.getElementById("monsterName").innerHTML="(Lv"+legacyGame.monster.level+") "+legacyGame.monster.name;$("#monsterName").css("color",legacyGame.monsterCreator.getRarityColour(legacyGame.monster.rarity))};a.prototype.updateUpgrades=function(a){for(a=0;a<legacyGame.upgradeManager.upgrades.length;a++){var b=legacyGame.upgradeManager.upgrades[a],c=$("#buyButton"+b.id);0>=c.length||(!0===b.available&&!1===b.purchased?c.show():c.hide())}};a.prototype.updateUpdateNotice=function(a){a=game.getCurrentVersion();
var b=game.getVersionCheckData(),c=$("#fbUpdate");void 0!==b&&b.version>a?(c.text("Update {0} Available!".format(b.version)),c.show()):c.hide()};a.prototype.updateCombatLog=function(a){};return new a});
declare("CombatLog",function(){function a(a){b.construct(this);this.id="CombatLog"}var b=include("Component","combatLog"),c=include("EventAggregate","combatLog"),d=include("StaticData","combatLog"),e=include("CoreUtils","combatLog"),f=[],k=function(a){f.push(a)},h=[],g=function(a){h.push(a)},l=[],m=[],p=[],r=function(a){l.push(a)},u=function(a){m.push(a)},v=function(a){p.push(a)};a.prototype=b.prototype();a.prototype.$super=parent;a.prototype.constructor=a;a.prototype.componentInit=a.prototype.init;
a.prototype.init=function(a,b){this.componentInit(a,b);c.subscribe(d.EventCombatHit,k);c.subscribe(d.EventCombatDeath,g);c.subscribe(d.EventXpGain,r);c.subscribe(d.EventGoldGain,u);c.subscribe(d.EventItemGain,v)};a.prototype.componentUpdate=a.prototype.update;a.prototype.update=function(a){if(!0!==this.componentUpdate(a))return!1;this.currentTime=a.currentLocale;a=$("#fbCombatLogContent");for(var b=!1,c=f.length,d=0;d<c;d++)b=f.shift(),a.append(this.getCombatEventText(b)),b=!0;c=h.length;for(d=0;d<
c;d++)b=h.shift(),a.append(this.getCombatDeathEventText(b)),b=!0;c=l.length;for(d=0;d<c;d++)b=l.shift(),a.append(this.getXpEventText(b)),b=!0;c=m.length;for(d=0;d<c;d++)b=m.shift(),a.append(this.getGoldEventText(b)),b=!0;c=p.length;for(d=0;d<c;d++)b=p.shift(),a.append(this.getItemEventText(b)),b=!0;this.trimEvents();!1!==b&&a.scrollTop(1E10);return!0};a.prototype.trimEvents=function(){var a=$("#fbCombatLogContent"),b=a.children().length;if(!(b<=this.maxEventCount))for(var c=this.maxEventCount;c<b;c++)a.children().first().remove()};
a.prototype.getBasicEventText=function(a){a=$("<div>");a.append($('<span class="logEntryNormal">['+e.getTimeDisplay(this.currentTime)+"] </span>"));return a};a.prototype.getCombatEventText=function(a){var b=this.getBasicEventText();b.append($('<span class="combatLogActor">'+a.sourceActorName+"</span>"));if(!0!==a.wasHit)return b.append($('<span class="logEntryNormal"> missed</span>')),b;!0!==a.wasCrit?b.append($('<span class="logEntryNormal"> hit </span>')):b.append($('<span class="combatLogCritical"> crit </span>'));
b.append($('<span class="combatLogActor">'+a.targetActorName+"</span>"));b.append($('<span class="logEntryNormal"> for </span>'));b.append($('<span class="combatLogDamage">'+a.damageTotal+"</span>"));b.append($('<span class="logEntryNormal"> damage</span>'));return b};a.prototype.getCombatDeathEventText=function(a){var b=this.getBasicEventText();b.append($('<span class="combatLogActor">'+a.actorName+" was defeated!</span>"));return b};a.prototype.getXpEventText=function(a){var b=this.getBasicEventText();
b.append($('<span class="logEntryNormal">earned </span>'));b.append($('<span class="logEntryXp">'+a.value+"</span>"));b.append($('<span class="logEntryNormal"> XP</span>'));return b};a.prototype.getGoldEventText=function(a){var b=this.getBasicEventText();b.append($('<span class="logEntryNormal">received </span>'));b.append($('<img class="logEntryGoldIcon" src="includes/images/goldCoin.png"></img>'));b.append($('<span class="logEntryGold"> '+a.value+" </span>"));b.append($('<span class="logEntryNormal"> Gold</span>'));
return b};a.prototype.getItemEventText=function(a){a=this.getBasicEventText();a.append($('<span class="logEntryNormal">ITEM RECEIVED TODO!!</span>'));return a};var q=function(){};q.prototype=a.prototype;return{prototype:function(){return new q},construct:function(b){a.call(b)},create:function(b){return new a(b)}}});
Endless.main=function(){function a(){!0===b.hasAsserted()?console.assert(!1,"Aborting UI update cycle, asserts occured!"):(Endless.currentUpdateTick++,k.update(f),requestAnimationFrame(a))}var b=include("Assert","main"),c=include("Debug","main"),d=include("StaticData","main"),e=include("Game","main"),f=include("GameTime","main"),k=include("UserInterface","main");c.logInfo("Initializing");window.game=e;d.setRoot("");include("TemplateProvider").SetData(include("TemplateContent"));c.init();d.init();
e.init();k.init();var h=setInterval(function(){!0===b.hasAsserted()?(clearInterval(h),console.assert(!1,"Aborting update cycle, asserts occured!")):(Endless.currentUpdateTick++,f.update(),!0===Endless.isDebug&&c.update(f),Endless.resetFrame(),d.update(f),e.update(f))},1E3/60);requestAnimationFrame(a);f=f.create()};$(document).ready(function(){Endless.main()});
